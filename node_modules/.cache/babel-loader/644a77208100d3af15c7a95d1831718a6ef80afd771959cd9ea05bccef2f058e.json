{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\Downloads\\\\juego\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './App.css';\nimport protagonistaImg from './protagonista.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 20;\nconst CELL_SIZE = 30;\n\n// Configuración de sonidos\nconst SOUNDS = {\n  DOT: '🔊 Chomp!',\n  POWER_PELLET: '🔊 Power Up!',\n  GHOST_EATEN: '🔊 Ghost Eaten!',\n  DEATH: '🔊 Oh no!',\n  LEVEL_COMPLETE: '🔊 Level Complete!',\n  GAME_START: '🔊 Game Start!'\n};\n\n// Laberinto mejorado\nconst MAZE = [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1], [1, 3, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 3, 1], [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1], [1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1], [1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1], [1, 1, 1, 1, 2, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 1], [0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0], [1, 1, 1, 1, 2, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 2, 1, 1, 1, 1], [0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0], [1, 1, 1, 1, 2, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 1], [0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0], [1, 1, 1, 1, 2, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 1], [1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1], [1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1], [1, 3, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 3, 1], [1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1], [1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1], [1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]];\n\n// Tipos de enemigos con diferentes comportamientos y personalidades\nconst GHOST_TYPES = {\n  BLINKY: {\n    emoji: '👻',\n    color: '#ff0000',\n    speed: 180,\n    name: 'Blinky',\n    personality: 'Agresivo - Te persigue directamente'\n  },\n  PINKY: {\n    emoji: '🟣',\n    color: '#ffb8ff',\n    speed: 200,\n    name: 'Pinky',\n    personality: 'Estratégico - Intenta emboscarte'\n  },\n  INKY: {\n    emoji: '🔵',\n    color: '#00ffff',\n    speed: 220,\n    name: 'Inky',\n    personality: 'Impredecible - Movimientos erráticos'\n  },\n  CLYDE: {\n    emoji: '🟠',\n    color: '#ffb852',\n    speed: 240,\n    name: 'Clyde',\n    personality: 'Tímido - Huye cuando te acercas'\n  }\n};\n\n// Power-ups especiales expandidos\nconst POWER_UPS = {\n  SPEED_BOOST: {\n    emoji: '⚡',\n    points: 100,\n    duration: 5000,\n    name: 'Speed Boost',\n    description: 'Velocidad aumentada'\n  },\n  EXTRA_LIFE: {\n    emoji: '💖',\n    points: 500,\n    effect: 'life',\n    name: 'Vida Extra',\n    description: 'Ganas una vida adicional'\n  },\n  DOUBLE_POINTS: {\n    emoji: '💎',\n    points: 200,\n    duration: 10000,\n    name: 'Puntos Dobles',\n    description: 'Duplica todos los puntos'\n  },\n  FREEZE_GHOSTS: {\n    emoji: '❄️',\n    points: 150,\n    duration: 3000,\n    name: 'Congelar',\n    description: 'Los fantasmas se quedan inmóviles'\n  },\n  FIRE_MODE: {\n    emoji: '🔥',\n    points: 300,\n    duration: 4000,\n    name: 'Modo Fuego',\n    description: 'Atraviesa paredes y quema fantasmas'\n  },\n  GHOST_MODE: {\n    emoji: '👻',\n    points: 250,\n    duration: 6000,\n    name: 'Modo Fantasma',\n    description: 'Eres invisible a los enemigos'\n  },\n  TIME_SLOW: {\n    emoji: '⏰',\n    points: 200,\n    duration: 5000,\n    name: 'Tiempo Lento',\n    description: 'Todo se mueve en cámara lenta'\n  },\n  MAGNET: {\n    emoji: '🧲',\n    points: 150,\n    duration: 8000,\n    name: 'Imán',\n    description: 'Atrae puntos automáticamente'\n  },\n  SHIELD: {\n    emoji: '🛡️',\n    points: 400,\n    effect: 'shield',\n    name: 'Escudo',\n    description: 'Protección contra 1 muerte'\n  },\n  TORNADO: {\n    emoji: '🌪️',\n    points: 350,\n    duration: 3000,\n    name: 'Tornado',\n    description: 'Aspira todos los puntos cercanos'\n  },\n  LIGHTNING: {\n    emoji: '⚡',\n    points: 500,\n    effect: 'instant',\n    name: 'Rayo',\n    description: 'Elimina todos los fantasmas temporalmente'\n  },\n  RAINBOW: {\n    emoji: '🌈',\n    points: 1000,\n    duration: 15000,\n    name: 'Arcoíris',\n    description: 'Todos los efectos activos'\n  }\n};\n\n// Estados del juego\nconst GAME_STATES = {\n  READY: 'ready',\n  PLAYING: 'playing',\n  PAUSED: 'paused',\n  DEATH_SCREEN: 'death_screen',\n  GAME_OVER: 'game_over',\n  LEVEL_COMPLETE: 'level_complete',\n  POWER_MODE: 'power_mode'\n};\nfunction App() {\n  _s();\n  const [shiroPosition, setShiroPosition] = useState({\n    x: 9,\n    y: 15\n  });\n  const [maze, setMaze] = useState(MAZE);\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(parseInt(localStorage.getItem('shiroNekoHighScore') || '0'));\n  const [lives, setLives] = useState(3);\n  const [level, setLevel] = useState(1);\n  const [gameState, setGameState] = useState(GAME_STATES.READY);\n  const [direction, setDirection] = useState({\n    x: 0,\n    y: 0\n  });\n  const [nextDirection, setNextDirection] = useState({\n    x: 0,\n    y: 0\n  });\n  const [powerMode, setPowerMode] = useState(false);\n  const [powerModeTimer, setPowerModeTimer] = useState(0);\n  const [speedBoost, setSpeedBoost] = useState(false);\n  const [doublePoints, setDoublePoints] = useState(false);\n  const [frozenGhosts, setFrozenGhosts] = useState(false);\n  const [fireMode, setFireMode] = useState(false);\n  const [ghostMode, setGhostMode] = useState(false);\n  const [timeSlow, setTimeSlow] = useState(false);\n  const [magnetMode, setMagnetMode] = useState(false);\n  const [shieldActive, setShieldActive] = useState(false);\n  const [tornadoMode, setTornadoMode] = useState(false);\n  const [rainbowMode, setRainbowMode] = useState(false);\n  const [screenShake, setScreenShake] = useState(0);\n  const [flashEffect, setFlashEffect] = useState('');\n  const [activeEffects, setActiveEffects] = useState([]);\n  const [combo, setCombo] = useState(0);\n  const [ghostsEaten, setGhostsEaten] = useState(0);\n  const [gameTime, setGameTime] = useState(0);\n  const [ghosts, setGhosts] = useState([{\n    id: 'blinky',\n    x: 9,\n    y: 9,\n    direction: {\n      x: 1,\n      y: 0\n    },\n    type: GHOST_TYPES.BLINKY,\n    mode: 'chase',\n    lastMove: Date.now()\n  }, {\n    id: 'pinky',\n    x: 10,\n    y: 9,\n    direction: {\n      x: -1,\n      y: 0\n    },\n    type: GHOST_TYPES.PINKY,\n    mode: 'chase',\n    lastMove: Date.now()\n  }, {\n    id: 'inky',\n    x: 9,\n    y: 10,\n    direction: {\n      x: 0,\n      y: 1\n    },\n    type: GHOST_TYPES.INKY,\n    mode: 'chase',\n    lastMove: Date.now()\n  }, {\n    id: 'clyde',\n    x: 10,\n    y: 10,\n    direction: {\n      x: 0,\n      y: -1\n    },\n    type: GHOST_TYPES.CLYDE,\n    mode: 'chase',\n    lastMove: Date.now()\n  }]);\n  const [totalDots, setTotalDots] = useState(0);\n  const [dotsEaten, setDotsEaten] = useState(0);\n  const [powerUps, setPowerUps] = useState([]);\n  const [particles, setParticles] = useState([]);\n  const [showStats, setShowStats] = useState(false);\n  const [deathAnimation, setDeathAnimation] = useState(false);\n  const [killerGhost, setKillerGhost] = useState(null);\n  const gameLoopRef = useRef();\n  const powerModeRef = useRef();\n  const gameTimeRef = useRef();\n  const deathTimeoutRef = useRef();\n\n  // Inicializar el juego\n  useEffect(() => {\n    const dots = MAZE.flat().filter(cell => cell === 2 || cell === 3).length;\n    setTotalDots(dots);\n  }, []);\n\n  // Función para reproducir sonidos y mostrar notificaciones\n  const playSound = useCallback(soundType => {\n    console.log(SOUNDS[soundType] || `🔊 ${soundType}`);\n\n    // Crear partícula de sonido visual\n    const particle = {\n      id: Date.now() + Math.random(),\n      x: shiroPosition.x,\n      y: shiroPosition.y,\n      text: SOUNDS[soundType] || soundType,\n      type: 'sound',\n      life: 1000\n    };\n    setParticles(prev => [...prev, particle]);\n  }, [shiroPosition]);\n\n  // Generar power-ups aleatoriamente\n  const generatePowerUp = useCallback(() => {\n    if (Math.random() < 0.1 && powerUps.length < 2) {\n      // 10% de probabilidad\n      const powerUpTypes = Object.keys(POWER_UPS);\n      const randomType = powerUpTypes[Math.floor(Math.random() * powerUpTypes.length)];\n\n      // Encontrar posición vacía\n      let x, y;\n      do {\n        x = Math.floor(Math.random() * GRID_SIZE);\n        y = Math.floor(Math.random() * GRID_SIZE);\n      } while (maze[y][x] !== 0 || x === shiroPosition.x && y === shiroPosition.y);\n      const newPowerUp = {\n        id: Date.now(),\n        x,\n        y,\n        type: randomType,\n        ...POWER_UPS[randomType]\n      };\n      setPowerUps(prev => [...prev, newPowerUp]);\n    }\n  }, [maze, shiroPosition, powerUps.length]);\n\n  // Actualizar partículas\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setParticles(prev => prev.filter(particle => {\n        particle.life -= 50;\n        return particle.life > 0;\n      }));\n    }, 50);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Timer del juego\n  useEffect(() => {\n    if (gameState === GAME_STATES.PLAYING) {\n      gameTimeRef.current = setInterval(() => {\n        setGameTime(t => t + 1);\n      }, 1000);\n    } else {\n      clearInterval(gameTimeRef.current);\n    }\n    return () => clearInterval(gameTimeRef.current);\n  }, [gameState]);\n\n  // Verificar colisiones con fantasmas\n  const checkGhostCollision = useCallback(position => {\n    return ghosts.some(ghost => ghost.x === position.x && ghost.y === position.y);\n  }, [ghosts]);\n\n  // Mover Shiro Neko\n  const moveShiro = useCallback(newDirection => {\n    if (gameState !== GAME_STATES.PLAYING) return;\n    setShiroPosition(prev => {\n      const newX = prev.x + newDirection.x;\n      const newY = prev.y + newDirection.y;\n\n      // Verificar límites y paredes\n      if (newX < 0 || newX >= GRID_SIZE || newY < 0 || newY >= GRID_SIZE) {\n        return prev;\n      }\n      if (maze[newY][newX] === 1) {\n        return prev;\n      }\n      const newPosition = {\n        x: newX,\n        y: newY\n      };\n\n      // Verificar colisión con power-ups\n      const powerUpAtPosition = powerUps.find(powerUp => powerUp.x === newX && powerUp.y === newY);\n      if (powerUpAtPosition) {\n        const points = doublePoints ? powerUpAtPosition.points * 2 : powerUpAtPosition.points;\n        setScore(s => s + points);\n\n        // Aplicar efecto del power-up con animaciones\n        applyPowerUpEffect(powerUpAtPosition.type, powerUpAtPosition.duration);\n\n        // Efecto visual de recolección\n        triggerScreenEffect('powerup-collected');\n        createPowerUpAnimation(newX, newY, powerUpAtPosition.emoji);\n\n        // Remover power-up\n        setPowerUps(prev => prev.filter(p => p.id !== powerUpAtPosition.id));\n\n        // Crear partícula de efecto\n        const particle = {\n          id: Date.now() + Math.random(),\n          x: newX,\n          y: newY,\n          text: `+${points}`,\n          type: 'points',\n          life: 1500\n        };\n        setParticles(prev => [...prev, particle]);\n      }\n\n      // Verificar colisión con fantasmas\n      if (checkGhostCollision(newPosition)) {\n        if (powerMode) {\n          // Comer fantasma\n          playSound('GHOST_EATEN');\n          const ghostPoints = 200 * (combo + 1);\n          setScore(s => s + (doublePoints ? ghostPoints * 2 : ghostPoints));\n          setCombo(c => c + 1);\n          setGhostsEaten(g => g + 1);\n\n          // Resetear fantasma comido\n          setGhosts(prevGhosts => prevGhosts.map(ghost => ghost.x === newX && ghost.y === newY ? {\n            ...ghost,\n            x: 9,\n            y: 9,\n            mode: 'frightened'\n          } : ghost));\n\n          // Crear partícula de combo\n          const particle = {\n            id: Date.now() + Math.random(),\n            x: newX,\n            y: newY,\n            text: `COMBO x${combo + 1}!`,\n            type: 'combo',\n            life: 2000\n          };\n          setParticles(prev => [...prev, particle]);\n        } else {\n          // Encontrar el fantasma que mató a Shiro\n          const killer = ghosts.find(ghost => ghost.x === newX && ghost.y === newY);\n          setKillerGhost(killer);\n\n          // Activar animación de muerte\n          setDeathAnimation(true);\n          playSound('DEATH');\n          setCombo(0); // Reset combo\n\n          // Cambiar a pantalla de muerte\n          setGameState(GAME_STATES.DEATH_SCREEN);\n\n          // Crear partículas de muerte\n          for (let i = 0; i < 10; i++) {\n            const particle = {\n              id: Date.now() + Math.random() + i,\n              x: newX + (Math.random() - 0.5) * 3,\n              y: newY + (Math.random() - 0.5) * 3,\n              text: ['💀', '⚡', '💥', '😵', '🌟'][Math.floor(Math.random() * 5)],\n              type: 'death',\n              life: 2000 + Math.random() * 1000\n            };\n            setParticles(prev => [...prev, particle]);\n          }\n\n          // Después de 3 segundos, decidir si game over o continuar\n          deathTimeoutRef.current = setTimeout(() => {\n            setDeathAnimation(false);\n            setLives(l => l - 1);\n            if (lives <= 1) {\n              // Actualizar high score\n              if (score > highScore) {\n                setHighScore(score);\n                localStorage.setItem('shiroNekoHighScore', score.toString());\n              }\n              setGameState(GAME_STATES.GAME_OVER);\n            } else {\n              // Resetear posiciones para continuar\n              setShiroPosition({\n                x: 9,\n                y: 15\n              });\n              setGhosts([{\n                id: 'blinky',\n                x: 9,\n                y: 9,\n                direction: {\n                  x: 1,\n                  y: 0\n                },\n                type: GHOST_TYPES.BLINKY,\n                mode: 'chase',\n                lastMove: Date.now()\n              }, {\n                id: 'pinky',\n                x: 10,\n                y: 9,\n                direction: {\n                  x: -1,\n                  y: 0\n                },\n                type: GHOST_TYPES.PINKY,\n                mode: 'chase',\n                lastMove: Date.now()\n              }, {\n                id: 'inky',\n                x: 9,\n                y: 10,\n                direction: {\n                  x: 0,\n                  y: 1\n                },\n                type: GHOST_TYPES.INKY,\n                mode: 'chase',\n                lastMove: Date.now()\n              }, {\n                id: 'clyde',\n                x: 10,\n                y: 10,\n                direction: {\n                  x: 0,\n                  y: -1\n                },\n                type: GHOST_TYPES.CLYDE,\n                mode: 'chase',\n                lastMove: Date.now()\n              }]);\n              setGameState(GAME_STATES.READY);\n              setKillerGhost(null);\n            }\n          }, 3000);\n          return prev;\n        }\n      }\n\n      // Comer comida\n      if (maze[newY][newX] === 2 || maze[newY][newX] === 3) {\n        const isPowerPellet = maze[newY][newX] === 3;\n        let points = isPowerPellet ? 50 : 10;\n        if (doublePoints) points *= 2;\n        playSound(isPowerPellet ? 'POWER_PELLET' : 'DOT');\n        setScore(s => s + points);\n        setDotsEaten(d => d + 1);\n\n        // Generar power-up ocasionalmente\n        generatePowerUp();\n        if (isPowerPellet) {\n          setPowerMode(true);\n          setPowerModeTimer(8000); // 8 segundos\n          setCombo(0); // Reset combo para nuevo power mode\n          setGhosts(prevGhosts => prevGhosts.map(ghost => ({\n            ...ghost,\n            mode: 'frightened'\n          })));\n        }\n        setMaze(prevMaze => {\n          const newMaze = [...prevMaze];\n          newMaze[newY] = [...newMaze[newY]];\n          newMaze[newY][newX] = 0;\n          return newMaze;\n        });\n\n        // Verificar si se completó el nivel\n        if (dotsEaten + 1 >= totalDots) {\n          setLevel(l => l + 1);\n          setGameState(GAME_STATES.LEVEL_COMPLETE);\n          playSound('LEVEL_COMPLETE');\n\n          // Bonus por completar nivel\n          const levelBonus = level * 1000;\n          setScore(s => s + levelBonus);\n\n          // Resetear para siguiente nivel\n          setTimeout(() => {\n            setMaze(MAZE);\n            setDotsEaten(0);\n            setShiroPosition({\n              x: 9,\n              y: 15\n            });\n            setPowerUps([]);\n            setGameState(GAME_STATES.READY);\n          }, 3000);\n        }\n      }\n      return newPosition;\n    });\n  }, [gameState, maze, ghosts, powerMode, lives, checkGhostCollision, playSound, dotsEaten, totalDots, powerUps, doublePoints, combo, score, highScore, level, generatePowerUp]);\n\n  // Mover fantasmas con IA mejorada\n  const moveGhosts = useCallback(() => {\n    if (gameState !== GAME_STATES.PLAYING || frozenGhosts) return;\n    setGhosts(prevGhosts => prevGhosts.map(ghost => {\n      // Verificar si es tiempo de mover este fantasma (diferentes velocidades)\n      const now = Date.now();\n      if (now - ghost.lastMove < ghost.type.speed) {\n        return ghost;\n      }\n      const possibleMoves = [{\n        x: 0,\n        y: -1\n      },\n      // Arriba\n      {\n        x: 0,\n        y: 1\n      },\n      // Abajo\n      {\n        x: -1,\n        y: 0\n      },\n      // Izquierda\n      {\n        x: 1,\n        y: 0\n      } // Derecha\n      ].filter(move => {\n        const newX = ghost.x + move.x;\n        const newY = ghost.y + move.y;\n        return newX >= 0 && newX < GRID_SIZE && newY >= 0 && newY < GRID_SIZE && maze[newY][newX] !== 1;\n      });\n      if (possibleMoves.length === 0) return ghost;\n      let nextMove;\n      if (ghost.mode === 'frightened') {\n        // Movimiento aleatorio cuando están asustados (huyen)\n        const awayMoves = possibleMoves.map(move => {\n          const newX = ghost.x + move.x;\n          const newY = ghost.y + move.y;\n          return {\n            move,\n            distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\n          };\n        });\n\n        // Elegir el movimiento que los aleje más de Shiro\n        nextMove = awayMoves.reduce((farthest, current) => current.distance > farthest.distance ? current : farthest).move;\n      } else {\n        // IA específica por tipo de fantasma\n        switch (ghost.id) {\n          case 'blinky':\n            // Agresivo - persigue directamente\n            const directMoves = possibleMoves.map(move => {\n              const newX = ghost.x + move.x;\n              const newY = ghost.y + move.y;\n              return {\n                move,\n                distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\n              };\n            });\n            nextMove = directMoves.reduce((closest, current) => current.distance < closest.distance ? current : closest).move;\n            break;\n          case 'pinky':\n            // Estratégico - intenta emboscar\n            const targetX = shiroPosition.x + direction.x * 4;\n            const targetY = shiroPosition.y + direction.y * 4;\n            const ambushMoves = possibleMoves.map(move => {\n              const newX = ghost.x + move.x;\n              const newY = ghost.y + move.y;\n              return {\n                move,\n                distance: Math.abs(newX - targetX) + Math.abs(newY - targetY)\n              };\n            });\n            nextMove = ambushMoves.reduce((closest, current) => current.distance < closest.distance ? current : closest).move;\n            break;\n          case 'inky':\n            // Impredecible\n            if (Math.random() < 0.3) {\n              nextMove = possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\n            } else {\n              const inkyMoves = possibleMoves.map(move => {\n                const newX = ghost.x + move.x;\n                const newY = ghost.y + move.y;\n                return {\n                  move,\n                  distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\n                };\n              });\n              nextMove = inkyMoves.reduce((closest, current) => current.distance < closest.distance ? current : closest).move;\n            }\n            break;\n          case 'clyde':\n            // Tímido - huye si está muy cerca\n            const distanceToShiro = Math.abs(ghost.x - shiroPosition.x) + Math.abs(ghost.y - shiroPosition.y);\n            if (distanceToShiro < 8) {\n              // Huir si está muy cerca\n              const escapeMoves = possibleMoves.map(move => {\n                const newX = ghost.x + move.x;\n                const newY = ghost.y + move.y;\n                return {\n                  move,\n                  distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\n                };\n              });\n              nextMove = escapeMoves.reduce((farthest, current) => current.distance > farthest.distance ? current : farthest).move;\n            } else {\n              // Perseguir si está lejos\n              const chaseMoves = possibleMoves.map(move => {\n                const newX = ghost.x + move.x;\n                const newY = ghost.y + move.y;\n                return {\n                  move,\n                  distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\n                };\n              });\n              nextMove = chaseMoves.reduce((closest, current) => current.distance < closest.distance ? current : closest).move;\n            }\n            break;\n          default:\n            nextMove = possibleMoves[0];\n        }\n      }\n      return {\n        ...ghost,\n        x: ghost.x + nextMove.x,\n        y: ghost.y + nextMove.y,\n        direction: nextMove,\n        lastMove: now\n      };\n    }));\n  }, [gameState, maze, shiroPosition, direction, frozenGhosts]);\n\n  // Controles del teclado\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (!e || !e.key) return;\n      e.preventDefault();\n      switch (e.key) {\n        case 'ArrowUp':\n          setDirection({\n            x: 0,\n            y: -1\n          });\n          break;\n        case 'ArrowDown':\n          setDirection({\n            x: 0,\n            y: 1\n          });\n          break;\n        case 'ArrowLeft':\n          setDirection({\n            x: -1,\n            y: 0\n          });\n          break;\n        case 'ArrowRight':\n          setDirection({\n            x: 1,\n            y: 0\n          });\n          break;\n        case ' ':\n          if (gameState === GAME_STATES.READY) {\n            setGameState(GAME_STATES.PLAYING);\n          } else if (gameState === GAME_STATES.PLAYING) {\n            setGameState(GAME_STATES.PAUSED);\n          } else if (gameState === GAME_STATES.PAUSED) {\n            setGameState(GAME_STATES.PLAYING);\n          }\n          break;\n        case 'r':\n          if (gameState === GAME_STATES.GAME_OVER) {\n            // Reiniciar juego\n            setShiroPosition({\n              x: 9,\n              y: 15\n            });\n            setMaze(MAZE);\n            setScore(0);\n            setLives(3);\n            setLevel(1);\n            setGameState(GAME_STATES.READY);\n            setDirection({\n              x: 0,\n              y: 0\n            });\n            setNextDirection({\n              x: 0,\n              y: 0\n            });\n            setPowerMode(false);\n            setPowerModeTimer(0);\n            setSpeedBoost(false);\n            setDoublePoints(false);\n            setFrozenGhosts(false);\n            setCombo(0);\n            setGhostsEaten(0);\n            setGameTime(0);\n            setDotsEaten(0);\n            setPowerUps([]);\n            setParticles([]);\n            setDeathAnimation(false);\n            setKillerGhost(null);\n            clearTimeout(deathTimeoutRef.current);\n            setGhosts([{\n              id: 'blinky',\n              x: 9,\n              y: 9,\n              direction: {\n                x: 1,\n                y: 0\n              },\n              type: GHOST_TYPES.BLINKY,\n              mode: 'chase',\n              lastMove: Date.now()\n            }, {\n              id: 'pinky',\n              x: 10,\n              y: 9,\n              direction: {\n                x: -1,\n                y: 0\n              },\n              type: GHOST_TYPES.PINKY,\n              mode: 'chase',\n              lastMove: Date.now()\n            }, {\n              id: 'inky',\n              x: 9,\n              y: 10,\n              direction: {\n                x: 0,\n                y: 1\n              },\n              type: GHOST_TYPES.INKY,\n              mode: 'chase',\n              lastMove: Date.now()\n            }, {\n              id: 'clyde',\n              x: 10,\n              y: 10,\n              direction: {\n                x: 0,\n                y: -1\n              },\n              type: GHOST_TYPES.CLYDE,\n              mode: 'chase',\n              lastMove: Date.now()\n            }]);\n          }\n          break;\n        case 'Enter':\n          if (gameState === GAME_STATES.DEATH_SCREEN) {\n            // Saltar la animación de muerte\n            clearTimeout(deathTimeoutRef.current);\n            setDeathAnimation(false);\n            setLives(l => l - 1);\n            if (lives <= 1) {\n              if (score > highScore) {\n                setHighScore(score);\n                localStorage.setItem('shiroNekoHighScore', score.toString());\n              }\n              setGameState(GAME_STATES.GAME_OVER);\n            } else {\n              setShiroPosition({\n                x: 9,\n                y: 15\n              });\n              setGhosts([{\n                id: 'blinky',\n                x: 9,\n                y: 9,\n                direction: {\n                  x: 1,\n                  y: 0\n                },\n                type: GHOST_TYPES.BLINKY,\n                mode: 'chase',\n                lastMove: Date.now()\n              }, {\n                id: 'pinky',\n                x: 10,\n                y: 9,\n                direction: {\n                  x: -1,\n                  y: 0\n                },\n                type: GHOST_TYPES.PINKY,\n                mode: 'chase',\n                lastMove: Date.now()\n              }, {\n                id: 'inky',\n                x: 9,\n                y: 10,\n                direction: {\n                  x: 0,\n                  y: 1\n                },\n                type: GHOST_TYPES.INKY,\n                mode: 'chase',\n                lastMove: Date.now()\n              }, {\n                id: 'clyde',\n                x: 10,\n                y: 10,\n                direction: {\n                  x: 0,\n                  y: -1\n                },\n                type: GHOST_TYPES.CLYDE,\n                mode: 'chase',\n                lastMove: Date.now()\n              }]);\n              setGameState(GAME_STATES.READY);\n              setKillerGhost(null);\n            }\n          }\n          break;\n        case 's':\n          setShowStats(!showStats);\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [gameState]);\n\n  // Game loop principal\n  useEffect(() => {\n    if (gameState === GAME_STATES.PLAYING) {\n      const speed = speedBoost ? 100 : 150; // Más rápido con speed boost\n      gameLoopRef.current = setInterval(() => {\n        if (direction.x !== 0 || direction.y !== 0) {\n          moveShiro(direction);\n        }\n        moveGhosts();\n      }, speed);\n    } else {\n      clearInterval(gameLoopRef.current);\n    }\n    return () => clearInterval(gameLoopRef.current);\n  }, [gameState, direction, moveShiro, moveGhosts, speedBoost]);\n\n  // Power mode timer\n  useEffect(() => {\n    if (powerMode && powerModeTimer > 0) {\n      powerModeRef.current = setTimeout(() => {\n        setPowerModeTimer(t => t - 100);\n      }, 100);\n    } else if (powerMode && powerModeTimer <= 0) {\n      setPowerMode(false);\n      setGhosts(prevGhosts => prevGhosts.map(ghost => ({\n        ...ghost,\n        mode: 'chase'\n      })));\n    }\n    return () => clearTimeout(powerModeRef.current);\n  }, [powerMode, powerModeTimer]);\n  const renderCell = (cell, x, y) => {\n    let className = 'cell';\n    let content = '';\n    if (cell === 1) {\n      className += ' wall';\n    } else if (cell === 2) {\n      content = '·';\n    } else if (cell === 3) {\n      content = '●';\n      className += ' power-pellet';\n    }\n\n    // Renderizar Shiro Neko con imagen personalizada\n    if (shiroPosition.x === x && shiroPosition.y === y) {\n      content = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: protagonistaImg,\n        alt: \"Shiro Neko\",\n        className: \"protagonist-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 17\n      }, this);\n      className += ' shiro';\n      if (powerMode) className += ' power-mode';\n      if (speedBoost) className += ' speed-boost';\n    }\n\n    // Renderizar power-ups\n    const powerUpAtPosition = powerUps.find(powerUp => powerUp.x === x && powerUp.y === y);\n    if (powerUpAtPosition && !(shiroPosition.x === x && shiroPosition.y === y)) {\n      content = powerUpAtPosition.emoji;\n      className += ' power-up';\n    }\n\n    // Renderizar fantasmas\n    const ghostAtPosition = ghosts.find(ghost => ghost.x === x && ghost.y === y);\n    if (ghostAtPosition && !(shiroPosition.x === x && shiroPosition.y === y)) {\n      content = ghostAtPosition.type.emoji;\n      className += ` ghost ${ghostAtPosition.mode}`;\n      if (ghostAtPosition.mode === 'frightened') {\n        className += ' frightened';\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: content\n    }, `${x}-${y}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 7\n    }, this);\n  };\n  const getGameStateMessage = () => {\n    switch (gameState) {\n      case GAME_STATES.READY:\n        return \"¡Presiona ESPACIO para comenzar!\";\n      case GAME_STATES.PAUSED:\n        return \"PAUSADO - Presiona ESPACIO para continuar\";\n      case GAME_STATES.DEATH_SCREEN:\n        return \"\";\n      case GAME_STATES.GAME_OVER:\n        return \"GAME OVER - Presiona R para reiniciar\";\n      case GAME_STATES.LEVEL_COMPLETE:\n        return \"¡NIVEL COMPLETADO! Preparando siguiente nivel...\";\n      default:\n        return \"\";\n    }\n  };\n\n  // Renderizar pantalla de muerte\n  const renderDeathScreen = () => {\n    if (gameState !== GAME_STATES.DEATH_SCREEN) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"death-screen-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"death-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"death-animation\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"death-explosion\",\n            children: \"\\uD83D\\uDCA5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: protagonistaImg,\n            alt: \"Shiro Neko\",\n            className: \"dying-protagonist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"death-effects\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"death-particle\",\n              children: \"\\u26A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"death-particle\",\n              children: \"\\uD83D\\uDC80\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 761,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"death-particle\",\n              children: \"\\uD83C\\uDF1F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 762,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"death-particle\",\n              children: \"\\uD83D\\uDCA5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"death-particle\",\n              children: \"\\uD83D\\uDE35\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 764,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"death-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"death-title\",\n            children: \"\\uD83D\\uDC80 \\xA1OH NO! \\uD83D\\uDC80\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 769,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"death-subtitle\",\n            children: killerGhost && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [killerGhost.type.emoji, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: killerGhost.type.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 773,\n                columnNumber: 44\n              }, this), \" te ha atrapado!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"death-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"death-stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Puntuaci\\xF3n Final:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: score.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 779,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"death-stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Nivel Alcanzado:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 784,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: level\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 783,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"death-stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Tiempo Jugado:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 788,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: formatTime(gameTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 789,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"death-stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Fantasmas Comidos:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 792,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: ghostsEaten\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 793,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 13\n          }, this), lives > 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"death-continue\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"lives-remaining\",\n              children: [\"Te quedan \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: lives - 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 800,\n                columnNumber: 29\n              }, this), \" vida\", lives - 1 !== 1 ? 's' : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"continue-instruction\",\n              children: [\"Presiona \", /*#__PURE__*/_jsxDEV(\"kbd\", {\n                children: \"ENTER\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 28\n              }, this), \" para continuar o espera...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"final-death\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"game-over-message\",\n              children: \"\\xA1Se acabaron las vidas!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 17\n            }, this), score > highScore && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"new-record\",\n              children: \"\\uD83C\\uDFC6 \\xA1NUEVO R\\xC9CORD! \\uD83C\\uDFC6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"death-countdown\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"countdown-bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 7\n    }, this);\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDC31 Shiro Neko Pacman \\uD83D\\uDC31\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score\",\n          children: [\"Puntuaci\\xF3n: \", score.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"high-score\",\n          children: [\"R\\xE9cord: \", highScore.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lives\",\n          children: [\"Vidas: \", '❤️'.repeat(lives)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"level\",\n          children: [\"Nivel: \", level]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time\",\n          children: [\"Tiempo: \", formatTime(gameTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 11\n        }, this), combo > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"combo\",\n          children: [\"Combo: x\", combo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"power-ups-status\",\n        children: [powerMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"power-timer\",\n          children: [\"\\uD83C\\uDF1F Power Mode: \", Math.ceil(powerModeTimer / 1000), \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 13\n        }, this), speedBoost && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-effect\",\n          children: \"\\u26A1 Speed Boost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 26\n        }, this), doublePoints && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-effect\",\n          children: \"\\uD83D\\uDC8E Double Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 28\n        }, this), frozenGhosts && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-effect\",\n          children: \"\\u2744\\uFE0F Frozen Ghosts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-state-message\",\n        children: getGameStateMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uD83C\\uDFAE Flechas: Mover | ESPACIO: Pausa | R: Reiniciar | S: Estad\\xEDsticas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Come todos los puntos, power-ups y evita los fantasmas!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 11\n        }, this), powerMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"power-info\",\n          children: \"\\xA1MODO PODER ACTIVO! \\xA1Come fantasmas para combos!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 832,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: [maze.map((row, y) => row.map((cell, x) => renderCell(cell, x, y))), particles.map(particle => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `particle ${particle.type}`,\n          style: {\n            left: `${particle.x * CELL_SIZE + 15}px`,\n            top: `${particle.y * CELL_SIZE + 15}px`,\n            opacity: particle.life / 1000\n          },\n          children: particle.text\n        }, particle.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 866,\n        columnNumber: 9\n      }, this), showStats && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCCA Estad\\xEDsticas del Juego\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [\"Puntos comidos: \", dotsEaten, \"/\", totalDots]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [\"Fantasmas comidos: \", ghostsEaten]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [\"Mejor combo: \", combo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [\"Tiempo jugado: \", formatTime(gameTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [\"Puntos por minuto: \", gameTime > 0 ? Math.round(score / (gameTime / 60)) : 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 865,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ghost-info\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ghost-legend\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ghost-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uD83D\\uDC7B \", GHOST_TYPES.BLINKY.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 903,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: GHOST_TYPES.BLINKY.personality\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 904,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 902,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ghost-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uD83D\\uDFE3 \", GHOST_TYPES.PINKY.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 907,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: GHOST_TYPES.PINKY.personality\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 908,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 906,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ghost-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uD83D\\uDD35 \", GHOST_TYPES.INKY.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 911,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: GHOST_TYPES.INKY.personality\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 912,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 910,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ghost-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uD83D\\uDFE0 \", GHOST_TYPES.CLYDE.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 915,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: GHOST_TYPES.CLYDE.personality\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 916,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 914,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"power-ups-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Power-ups Disponibles:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"power-up-legend\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u26A1 Speed Boost (+100pts)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 924,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDC96 Vida Extra (+500pts)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 925,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDC8E Puntos Dobles (+200pts)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 926,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u2744\\uFE0F Congelar Fantasmas (+150pts)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 927,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 899,\n      columnNumber: 7\n    }, this), renderDeathScreen()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 831,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tovUE/8Ki+Pz6auzEjYXD3EDsuU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","protagonistaImg","jsxDEV","_jsxDEV","GRID_SIZE","CELL_SIZE","SOUNDS","DOT","POWER_PELLET","GHOST_EATEN","DEATH","LEVEL_COMPLETE","GAME_START","MAZE","GHOST_TYPES","BLINKY","emoji","color","speed","name","personality","PINKY","INKY","CLYDE","POWER_UPS","SPEED_BOOST","points","duration","description","EXTRA_LIFE","effect","DOUBLE_POINTS","FREEZE_GHOSTS","FIRE_MODE","GHOST_MODE","TIME_SLOW","MAGNET","SHIELD","TORNADO","LIGHTNING","RAINBOW","GAME_STATES","READY","PLAYING","PAUSED","DEATH_SCREEN","GAME_OVER","POWER_MODE","App","_s","shiroPosition","setShiroPosition","x","y","maze","setMaze","score","setScore","highScore","setHighScore","parseInt","localStorage","getItem","lives","setLives","level","setLevel","gameState","setGameState","direction","setDirection","nextDirection","setNextDirection","powerMode","setPowerMode","powerModeTimer","setPowerModeTimer","speedBoost","setSpeedBoost","doublePoints","setDoublePoints","frozenGhosts","setFrozenGhosts","fireMode","setFireMode","ghostMode","setGhostMode","timeSlow","setTimeSlow","magnetMode","setMagnetMode","shieldActive","setShieldActive","tornadoMode","setTornadoMode","rainbowMode","setRainbowMode","screenShake","setScreenShake","flashEffect","setFlashEffect","activeEffects","setActiveEffects","combo","setCombo","ghostsEaten","setGhostsEaten","gameTime","setGameTime","ghosts","setGhosts","id","type","mode","lastMove","Date","now","totalDots","setTotalDots","dotsEaten","setDotsEaten","powerUps","setPowerUps","particles","setParticles","showStats","setShowStats","deathAnimation","setDeathAnimation","killerGhost","setKillerGhost","gameLoopRef","powerModeRef","gameTimeRef","deathTimeoutRef","dots","flat","filter","cell","length","playSound","soundType","console","log","particle","Math","random","text","life","prev","generatePowerUp","powerUpTypes","Object","keys","randomType","floor","newPowerUp","interval","setInterval","clearInterval","current","t","checkGhostCollision","position","some","ghost","moveShiro","newDirection","newX","newY","newPosition","powerUpAtPosition","find","powerUp","s","applyPowerUpEffect","triggerScreenEffect","createPowerUpAnimation","p","ghostPoints","c","g","prevGhosts","map","killer","i","setTimeout","l","setItem","toString","isPowerPellet","d","prevMaze","newMaze","levelBonus","moveGhosts","possibleMoves","move","nextMove","awayMoves","distance","abs","reduce","farthest","directMoves","closest","targetX","targetY","ambushMoves","inkyMoves","distanceToShiro","escapeMoves","chaseMoves","handleKeyPress","e","key","preventDefault","clearTimeout","window","addEventListener","removeEventListener","renderCell","className","content","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ghostAtPosition","children","getGameStateMessage","renderDeathScreen","toLocaleString","formatTime","seconds","mins","secs","padStart","repeat","ceil","row","style","left","top","opacity","round","_c","$RefreshReg$"],"sources":["C:/Users/usuario/Downloads/juego/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport './App.css';\r\nimport protagonistaImg from './protagonista.png';\r\n\r\nconst GRID_SIZE = 20;\r\nconst CELL_SIZE = 30;\r\n\r\n// Configuración de sonidos\r\nconst SOUNDS = {\r\n  DOT: '🔊 Chomp!',\r\n  POWER_PELLET: '🔊 Power Up!',\r\n  GHOST_EATEN: '🔊 Ghost Eaten!',\r\n  DEATH: '🔊 Oh no!',\r\n  LEVEL_COMPLETE: '🔊 Level Complete!',\r\n  GAME_START: '🔊 Game Start!'\r\n};\r\n\r\n// Laberinto mejorado\r\nconst MAZE = [\r\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n  [1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1],\r\n  [1, 3, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 3, 1],\r\n  [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],\r\n  [1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1],\r\n  [1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1],\r\n  [1, 1, 1, 1, 2, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 1],\r\n  [0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0],\r\n  [1, 1, 1, 1, 2, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 2, 1, 1, 1, 1],\r\n  [0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0],\r\n  [1, 1, 1, 1, 2, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 1],\r\n  [0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0],\r\n  [1, 1, 1, 1, 2, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 1],\r\n  [1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1],\r\n  [1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1],\r\n  [1, 3, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 3, 1],\r\n  [1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1],\r\n  [1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1],\r\n  [1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1],\r\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\r\n];\r\n\r\n// Tipos de enemigos con diferentes comportamientos y personalidades\r\nconst GHOST_TYPES = {\r\n  BLINKY: {\r\n    emoji: '👻',\r\n    color: '#ff0000',\r\n    speed: 180,\r\n    name: 'Blinky',\r\n    personality: 'Agresivo - Te persigue directamente'\r\n  },\r\n  PINKY: {\r\n    emoji: '🟣',\r\n    color: '#ffb8ff',\r\n    speed: 200,\r\n    name: 'Pinky',\r\n    personality: 'Estratégico - Intenta emboscarte'\r\n  },\r\n  INKY: {\r\n    emoji: '🔵',\r\n    color: '#00ffff',\r\n    speed: 220,\r\n    name: 'Inky',\r\n    personality: 'Impredecible - Movimientos erráticos'\r\n  },\r\n  CLYDE: {\r\n    emoji: '🟠',\r\n    color: '#ffb852',\r\n    speed: 240,\r\n    name: 'Clyde',\r\n    personality: 'Tímido - Huye cuando te acercas'\r\n  }\r\n};\r\n\r\n// Power-ups especiales expandidos\r\nconst POWER_UPS = {\r\n  SPEED_BOOST: { emoji: '⚡', points: 100, duration: 5000, name: 'Speed Boost', description: 'Velocidad aumentada' },\r\n  EXTRA_LIFE: { emoji: '💖', points: 500, effect: 'life', name: 'Vida Extra', description: 'Ganas una vida adicional' },\r\n  DOUBLE_POINTS: { emoji: '💎', points: 200, duration: 10000, name: 'Puntos Dobles', description: 'Duplica todos los puntos' },\r\n  FREEZE_GHOSTS: { emoji: '❄️', points: 150, duration: 3000, name: 'Congelar', description: 'Los fantasmas se quedan inmóviles' },\r\n  FIRE_MODE: { emoji: '🔥', points: 300, duration: 4000, name: 'Modo Fuego', description: 'Atraviesa paredes y quema fantasmas' },\r\n  GHOST_MODE: { emoji: '👻', points: 250, duration: 6000, name: 'Modo Fantasma', description: 'Eres invisible a los enemigos' },\r\n  TIME_SLOW: { emoji: '⏰', points: 200, duration: 5000, name: 'Tiempo Lento', description: 'Todo se mueve en cámara lenta' },\r\n  MAGNET: { emoji: '🧲', points: 150, duration: 8000, name: 'Imán', description: 'Atrae puntos automáticamente' },\r\n  SHIELD: { emoji: '🛡️', points: 400, effect: 'shield', name: 'Escudo', description: 'Protección contra 1 muerte' },\r\n  TORNADO: { emoji: '🌪️', points: 350, duration: 3000, name: 'Tornado', description: 'Aspira todos los puntos cercanos' },\r\n  LIGHTNING: { emoji: '⚡', points: 500, effect: 'instant', name: 'Rayo', description: 'Elimina todos los fantasmas temporalmente' },\r\n  RAINBOW: { emoji: '🌈', points: 1000, duration: 15000, name: 'Arcoíris', description: 'Todos los efectos activos' }\r\n};\r\n\r\n// Estados del juego\r\nconst GAME_STATES = {\r\n  READY: 'ready',\r\n  PLAYING: 'playing',\r\n  PAUSED: 'paused',\r\n  DEATH_SCREEN: 'death_screen',\r\n  GAME_OVER: 'game_over',\r\n  LEVEL_COMPLETE: 'level_complete',\r\n  POWER_MODE: 'power_mode'\r\n};\r\n\r\nfunction App() {\r\n  const [shiroPosition, setShiroPosition] = useState({ x: 9, y: 15 });\r\n  const [maze, setMaze] = useState(MAZE);\r\n  const [score, setScore] = useState(0);\r\n  const [highScore, setHighScore] = useState(parseInt(localStorage.getItem('shiroNekoHighScore') || '0'));\r\n  const [lives, setLives] = useState(3);\r\n  const [level, setLevel] = useState(1);\r\n  const [gameState, setGameState] = useState(GAME_STATES.READY);\r\n  const [direction, setDirection] = useState({ x: 0, y: 0 });\r\n  const [nextDirection, setNextDirection] = useState({ x: 0, y: 0 });\r\n  const [powerMode, setPowerMode] = useState(false);\r\n  const [powerModeTimer, setPowerModeTimer] = useState(0);\r\n  const [speedBoost, setSpeedBoost] = useState(false);\r\n  const [doublePoints, setDoublePoints] = useState(false);\r\n  const [frozenGhosts, setFrozenGhosts] = useState(false);\r\n  const [fireMode, setFireMode] = useState(false);\r\n  const [ghostMode, setGhostMode] = useState(false);\r\n  const [timeSlow, setTimeSlow] = useState(false);\r\n  const [magnetMode, setMagnetMode] = useState(false);\r\n  const [shieldActive, setShieldActive] = useState(false);\r\n  const [tornadoMode, setTornadoMode] = useState(false);\r\n  const [rainbowMode, setRainbowMode] = useState(false);\r\n  const [screenShake, setScreenShake] = useState(0);\r\n  const [flashEffect, setFlashEffect] = useState('');\r\n  const [activeEffects, setActiveEffects] = useState([]);\r\n  const [combo, setCombo] = useState(0);\r\n  const [ghostsEaten, setGhostsEaten] = useState(0);\r\n  const [gameTime, setGameTime] = useState(0);\r\n  const [ghosts, setGhosts] = useState([\r\n    { id: 'blinky', x: 9, y: 9, direction: { x: 1, y: 0 }, type: GHOST_TYPES.BLINKY, mode: 'chase', lastMove: Date.now() },\r\n    { id: 'pinky', x: 10, y: 9, direction: { x: -1, y: 0 }, type: GHOST_TYPES.PINKY, mode: 'chase', lastMove: Date.now() },\r\n    { id: 'inky', x: 9, y: 10, direction: { x: 0, y: 1 }, type: GHOST_TYPES.INKY, mode: 'chase', lastMove: Date.now() },\r\n    { id: 'clyde', x: 10, y: 10, direction: { x: 0, y: -1 }, type: GHOST_TYPES.CLYDE, mode: 'chase', lastMove: Date.now() }\r\n  ]);\r\n  const [totalDots, setTotalDots] = useState(0);\r\n  const [dotsEaten, setDotsEaten] = useState(0);\r\n  const [powerUps, setPowerUps] = useState([]);\r\n  const [particles, setParticles] = useState([]);\r\n  const [showStats, setShowStats] = useState(false);\r\n  const [deathAnimation, setDeathAnimation] = useState(false);\r\n  const [killerGhost, setKillerGhost] = useState(null);\r\n  const gameLoopRef = useRef();\r\n  const powerModeRef = useRef();\r\n  const gameTimeRef = useRef();\r\n  const deathTimeoutRef = useRef();\r\n\r\n  // Inicializar el juego\r\n  useEffect(() => {\r\n    const dots = MAZE.flat().filter(cell => cell === 2 || cell === 3).length;\r\n    setTotalDots(dots);\r\n  }, []);\r\n\r\n  // Función para reproducir sonidos y mostrar notificaciones\r\n  const playSound = useCallback((soundType) => {\r\n    console.log(SOUNDS[soundType] || `🔊 ${soundType}`);\r\n\r\n    // Crear partícula de sonido visual\r\n    const particle = {\r\n      id: Date.now() + Math.random(),\r\n      x: shiroPosition.x,\r\n      y: shiroPosition.y,\r\n      text: SOUNDS[soundType] || soundType,\r\n      type: 'sound',\r\n      life: 1000\r\n    };\r\n    setParticles(prev => [...prev, particle]);\r\n  }, [shiroPosition]);\r\n\r\n  // Generar power-ups aleatoriamente\r\n  const generatePowerUp = useCallback(() => {\r\n    if (Math.random() < 0.1 && powerUps.length < 2) { // 10% de probabilidad\r\n      const powerUpTypes = Object.keys(POWER_UPS);\r\n      const randomType = powerUpTypes[Math.floor(Math.random() * powerUpTypes.length)];\r\n\r\n      // Encontrar posición vacía\r\n      let x, y;\r\n      do {\r\n        x = Math.floor(Math.random() * GRID_SIZE);\r\n        y = Math.floor(Math.random() * GRID_SIZE);\r\n      } while (maze[y][x] !== 0 || (x === shiroPosition.x && y === shiroPosition.y));\r\n\r\n      const newPowerUp = {\r\n        id: Date.now(),\r\n        x, y,\r\n        type: randomType,\r\n        ...POWER_UPS[randomType]\r\n      };\r\n\r\n      setPowerUps(prev => [...prev, newPowerUp]);\r\n    }\r\n  }, [maze, shiroPosition, powerUps.length]);\r\n\r\n  // Actualizar partículas\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setParticles(prev => prev.filter(particle => {\r\n        particle.life -= 50;\r\n        return particle.life > 0;\r\n      }));\r\n    }, 50);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Timer del juego\r\n  useEffect(() => {\r\n    if (gameState === GAME_STATES.PLAYING) {\r\n      gameTimeRef.current = setInterval(() => {\r\n        setGameTime(t => t + 1);\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(gameTimeRef.current);\r\n    }\r\n\r\n    return () => clearInterval(gameTimeRef.current);\r\n  }, [gameState]);\r\n\r\n  // Verificar colisiones con fantasmas\r\n  const checkGhostCollision = useCallback((position) => {\r\n    return ghosts.some(ghost => ghost.x === position.x && ghost.y === position.y);\r\n  }, [ghosts]);\r\n\r\n  // Mover Shiro Neko\r\n  const moveShiro = useCallback((newDirection) => {\r\n    if (gameState !== GAME_STATES.PLAYING) return;\r\n\r\n    setShiroPosition(prev => {\r\n      const newX = prev.x + newDirection.x;\r\n      const newY = prev.y + newDirection.y;\r\n\r\n      // Verificar límites y paredes\r\n      if (newX < 0 || newX >= GRID_SIZE || newY < 0 || newY >= GRID_SIZE) {\r\n        return prev;\r\n      }\r\n\r\n      if (maze[newY][newX] === 1) {\r\n        return prev;\r\n      }\r\n\r\n      const newPosition = { x: newX, y: newY };\r\n\r\n      // Verificar colisión con power-ups\r\n      const powerUpAtPosition = powerUps.find(powerUp => powerUp.x === newX && powerUp.y === newY);\r\n      if (powerUpAtPosition) {\r\n        const points = doublePoints ? powerUpAtPosition.points * 2 : powerUpAtPosition.points;\r\n        setScore(s => s + points);\r\n\r\n        // Aplicar efecto del power-up con animaciones\r\n        applyPowerUpEffect(powerUpAtPosition.type, powerUpAtPosition.duration);\r\n        \r\n        // Efecto visual de recolección\r\n        triggerScreenEffect('powerup-collected');\r\n        createPowerUpAnimation(newX, newY, powerUpAtPosition.emoji);\r\n\r\n        // Remover power-up\r\n        setPowerUps(prev => prev.filter(p => p.id !== powerUpAtPosition.id));\r\n\r\n        // Crear partícula de efecto\r\n        const particle = {\r\n          id: Date.now() + Math.random(),\r\n          x: newX,\r\n          y: newY,\r\n          text: `+${points}`,\r\n          type: 'points',\r\n          life: 1500\r\n        };\r\n        setParticles(prev => [...prev, particle]);\r\n      }\r\n\r\n      // Verificar colisión con fantasmas\r\n      if (checkGhostCollision(newPosition)) {\r\n        if (powerMode) {\r\n          // Comer fantasma\r\n          playSound('GHOST_EATEN');\r\n          const ghostPoints = 200 * (combo + 1);\r\n          setScore(s => s + (doublePoints ? ghostPoints * 2 : ghostPoints));\r\n          setCombo(c => c + 1);\r\n          setGhostsEaten(g => g + 1);\r\n\r\n          // Resetear fantasma comido\r\n          setGhosts(prevGhosts =>\r\n            prevGhosts.map(ghost =>\r\n              ghost.x === newX && ghost.y === newY\r\n                ? { ...ghost, x: 9, y: 9, mode: 'frightened' }\r\n                : ghost\r\n            )\r\n          );\r\n\r\n          // Crear partícula de combo\r\n          const particle = {\r\n            id: Date.now() + Math.random(),\r\n            x: newX,\r\n            y: newY,\r\n            text: `COMBO x${combo + 1}!`,\r\n            type: 'combo',\r\n            life: 2000\r\n          };\r\n          setParticles(prev => [...prev, particle]);\r\n        } else {\r\n          // Encontrar el fantasma que mató a Shiro\r\n          const killer = ghosts.find(ghost => ghost.x === newX && ghost.y === newY);\r\n          setKillerGhost(killer);\r\n          \r\n          // Activar animación de muerte\r\n          setDeathAnimation(true);\r\n          playSound('DEATH');\r\n          setCombo(0); // Reset combo\r\n          \r\n          // Cambiar a pantalla de muerte\r\n          setGameState(GAME_STATES.DEATH_SCREEN);\r\n          \r\n          // Crear partículas de muerte\r\n          for (let i = 0; i < 10; i++) {\r\n            const particle = {\r\n              id: Date.now() + Math.random() + i,\r\n              x: newX + (Math.random() - 0.5) * 3,\r\n              y: newY + (Math.random() - 0.5) * 3,\r\n              text: ['💀', '⚡', '💥', '😵', '🌟'][Math.floor(Math.random() * 5)],\r\n              type: 'death',\r\n              life: 2000 + Math.random() * 1000\r\n            };\r\n            setParticles(prev => [...prev, particle]);\r\n          }\r\n          \r\n          // Después de 3 segundos, decidir si game over o continuar\r\n          deathTimeoutRef.current = setTimeout(() => {\r\n            setDeathAnimation(false);\r\n            setLives(l => l - 1);\r\n            \r\n            if (lives <= 1) {\r\n              // Actualizar high score\r\n              if (score > highScore) {\r\n                setHighScore(score);\r\n                localStorage.setItem('shiroNekoHighScore', score.toString());\r\n              }\r\n              setGameState(GAME_STATES.GAME_OVER);\r\n            } else {\r\n              // Resetear posiciones para continuar\r\n              setShiroPosition({ x: 9, y: 15 });\r\n              setGhosts([\r\n                { id: 'blinky', x: 9, y: 9, direction: { x: 1, y: 0 }, type: GHOST_TYPES.BLINKY, mode: 'chase', lastMove: Date.now() },\r\n                { id: 'pinky', x: 10, y: 9, direction: { x: -1, y: 0 }, type: GHOST_TYPES.PINKY, mode: 'chase', lastMove: Date.now() },\r\n                { id: 'inky', x: 9, y: 10, direction: { x: 0, y: 1 }, type: GHOST_TYPES.INKY, mode: 'chase', lastMove: Date.now() },\r\n                { id: 'clyde', x: 10, y: 10, direction: { x: 0, y: -1 }, type: GHOST_TYPES.CLYDE, mode: 'chase', lastMove: Date.now() }\r\n              ]);\r\n              setGameState(GAME_STATES.READY);\r\n              setKillerGhost(null);\r\n            }\r\n          }, 3000);\r\n          \r\n          return prev;\r\n        }\r\n      }\r\n\r\n      // Comer comida\r\n      if (maze[newY][newX] === 2 || maze[newY][newX] === 3) {\r\n        const isPowerPellet = maze[newY][newX] === 3;\r\n        let points = isPowerPellet ? 50 : 10;\r\n        if (doublePoints) points *= 2;\r\n\r\n        playSound(isPowerPellet ? 'POWER_PELLET' : 'DOT');\r\n        setScore(s => s + points);\r\n        setDotsEaten(d => d + 1);\r\n\r\n        // Generar power-up ocasionalmente\r\n        generatePowerUp();\r\n\r\n        if (isPowerPellet) {\r\n          setPowerMode(true);\r\n          setPowerModeTimer(8000); // 8 segundos\r\n          setCombo(0); // Reset combo para nuevo power mode\r\n          setGhosts(prevGhosts =>\r\n            prevGhosts.map(ghost => ({ ...ghost, mode: 'frightened' }))\r\n          );\r\n        }\r\n\r\n        setMaze(prevMaze => {\r\n          const newMaze = [...prevMaze];\r\n          newMaze[newY] = [...newMaze[newY]];\r\n          newMaze[newY][newX] = 0;\r\n          return newMaze;\r\n        });\r\n\r\n        // Verificar si se completó el nivel\r\n        if (dotsEaten + 1 >= totalDots) {\r\n          setLevel(l => l + 1);\r\n          setGameState(GAME_STATES.LEVEL_COMPLETE);\r\n          playSound('LEVEL_COMPLETE');\r\n\r\n          // Bonus por completar nivel\r\n          const levelBonus = level * 1000;\r\n          setScore(s => s + levelBonus);\r\n\r\n          // Resetear para siguiente nivel\r\n          setTimeout(() => {\r\n            setMaze(MAZE);\r\n            setDotsEaten(0);\r\n            setShiroPosition({ x: 9, y: 15 });\r\n            setPowerUps([]);\r\n            setGameState(GAME_STATES.READY);\r\n          }, 3000);\r\n        }\r\n      }\r\n\r\n      return newPosition;\r\n    });\r\n  }, [gameState, maze, ghosts, powerMode, lives, checkGhostCollision, playSound, dotsEaten, totalDots, powerUps, doublePoints, combo, score, highScore, level, generatePowerUp]);\r\n\r\n  // Mover fantasmas con IA mejorada\r\n  const moveGhosts = useCallback(() => {\r\n    if (gameState !== GAME_STATES.PLAYING || frozenGhosts) return;\r\n\r\n    setGhosts(prevGhosts =>\r\n      prevGhosts.map(ghost => {\r\n        // Verificar si es tiempo de mover este fantasma (diferentes velocidades)\r\n        const now = Date.now();\r\n        if (now - ghost.lastMove < ghost.type.speed) {\r\n          return ghost;\r\n        }\r\n\r\n        const possibleMoves = [\r\n          { x: 0, y: -1 }, // Arriba\r\n          { x: 0, y: 1 },  // Abajo\r\n          { x: -1, y: 0 }, // Izquierda\r\n          { x: 1, y: 0 }   // Derecha\r\n        ].filter(move => {\r\n          const newX = ghost.x + move.x;\r\n          const newY = ghost.y + move.y;\r\n          return newX >= 0 && newX < GRID_SIZE &&\r\n            newY >= 0 && newY < GRID_SIZE &&\r\n            maze[newY][newX] !== 1;\r\n        });\r\n\r\n        if (possibleMoves.length === 0) return ghost;\r\n\r\n        let nextMove;\r\n\r\n        if (ghost.mode === 'frightened') {\r\n          // Movimiento aleatorio cuando están asustados (huyen)\r\n          const awayMoves = possibleMoves.map(move => {\r\n            const newX = ghost.x + move.x;\r\n            const newY = ghost.y + move.y;\r\n            return {\r\n              move,\r\n              distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\r\n            };\r\n          });\r\n\r\n          // Elegir el movimiento que los aleje más de Shiro\r\n          nextMove = awayMoves.reduce((farthest, current) =>\r\n            current.distance > farthest.distance ? current : farthest\r\n          ).move;\r\n        } else {\r\n          // IA específica por tipo de fantasma\r\n          switch (ghost.id) {\r\n            case 'blinky': // Agresivo - persigue directamente\r\n              const directMoves = possibleMoves.map(move => {\r\n                const newX = ghost.x + move.x;\r\n                const newY = ghost.y + move.y;\r\n                return {\r\n                  move,\r\n                  distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\r\n                };\r\n              });\r\n              nextMove = directMoves.reduce((closest, current) =>\r\n                current.distance < closest.distance ? current : closest\r\n              ).move;\r\n              break;\r\n\r\n            case 'pinky': // Estratégico - intenta emboscar\r\n              const targetX = shiroPosition.x + direction.x * 4;\r\n              const targetY = shiroPosition.y + direction.y * 4;\r\n              const ambushMoves = possibleMoves.map(move => {\r\n                const newX = ghost.x + move.x;\r\n                const newY = ghost.y + move.y;\r\n                return {\r\n                  move,\r\n                  distance: Math.abs(newX - targetX) + Math.abs(newY - targetY)\r\n                };\r\n              });\r\n              nextMove = ambushMoves.reduce((closest, current) =>\r\n                current.distance < closest.distance ? current : closest\r\n              ).move;\r\n              break;\r\n\r\n            case 'inky': // Impredecible\r\n              if (Math.random() < 0.3) {\r\n                nextMove = possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\r\n              } else {\r\n                const inkyMoves = possibleMoves.map(move => {\r\n                  const newX = ghost.x + move.x;\r\n                  const newY = ghost.y + move.y;\r\n                  return {\r\n                    move,\r\n                    distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\r\n                  };\r\n                });\r\n                nextMove = inkyMoves.reduce((closest, current) =>\r\n                  current.distance < closest.distance ? current : closest\r\n                ).move;\r\n              }\r\n              break;\r\n\r\n            case 'clyde': // Tímido - huye si está muy cerca\r\n              const distanceToShiro = Math.abs(ghost.x - shiroPosition.x) + Math.abs(ghost.y - shiroPosition.y);\r\n              if (distanceToShiro < 8) {\r\n                // Huir si está muy cerca\r\n                const escapeMoves = possibleMoves.map(move => {\r\n                  const newX = ghost.x + move.x;\r\n                  const newY = ghost.y + move.y;\r\n                  return {\r\n                    move,\r\n                    distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\r\n                  };\r\n                });\r\n                nextMove = escapeMoves.reduce((farthest, current) =>\r\n                  current.distance > farthest.distance ? current : farthest\r\n                ).move;\r\n              } else {\r\n                // Perseguir si está lejos\r\n                const chaseMoves = possibleMoves.map(move => {\r\n                  const newX = ghost.x + move.x;\r\n                  const newY = ghost.y + move.y;\r\n                  return {\r\n                    move,\r\n                    distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\r\n                  };\r\n                });\r\n                nextMove = chaseMoves.reduce((closest, current) =>\r\n                  current.distance < closest.distance ? current : closest\r\n                ).move;\r\n              }\r\n              break;\r\n\r\n            default:\r\n              nextMove = possibleMoves[0];\r\n          }\r\n        }\r\n\r\n        return {\r\n          ...ghost,\r\n          x: ghost.x + nextMove.x,\r\n          y: ghost.y + nextMove.y,\r\n          direction: nextMove,\r\n          lastMove: now\r\n        };\r\n      })\r\n    );\r\n  }, [gameState, maze, shiroPosition, direction, frozenGhosts]);\r\n\r\n  // Controles del teclado\r\n  useEffect(() => {\r\n    const handleKeyPress = (e) => {\r\n      if (!e || !e.key) return;\r\n      e.preventDefault();\r\n\r\n      switch (e.key) {\r\n        case 'ArrowUp':\r\n          setDirection({ x: 0, y: -1 });\r\n          break;\r\n        case 'ArrowDown':\r\n          setDirection({ x: 0, y: 1 });\r\n          break;\r\n        case 'ArrowLeft':\r\n          setDirection({ x: -1, y: 0 });\r\n          break;\r\n        case 'ArrowRight':\r\n          setDirection({ x: 1, y: 0 });\r\n          break;\r\n        case ' ':\r\n          if (gameState === GAME_STATES.READY) {\r\n            setGameState(GAME_STATES.PLAYING);\r\n          } else if (gameState === GAME_STATES.PLAYING) {\r\n            setGameState(GAME_STATES.PAUSED);\r\n          } else if (gameState === GAME_STATES.PAUSED) {\r\n            setGameState(GAME_STATES.PLAYING);\r\n          }\r\n          break;\r\n        case 'r':\r\n          if (gameState === GAME_STATES.GAME_OVER) {\r\n            // Reiniciar juego\r\n            setShiroPosition({ x: 9, y: 15 });\r\n            setMaze(MAZE);\r\n            setScore(0);\r\n            setLives(3);\r\n            setLevel(1);\r\n            setGameState(GAME_STATES.READY);\r\n            setDirection({ x: 0, y: 0 });\r\n            setNextDirection({ x: 0, y: 0 });\r\n            setPowerMode(false);\r\n            setPowerModeTimer(0);\r\n            setSpeedBoost(false);\r\n            setDoublePoints(false);\r\n            setFrozenGhosts(false);\r\n            setCombo(0);\r\n            setGhostsEaten(0);\r\n            setGameTime(0);\r\n            setDotsEaten(0);\r\n            setPowerUps([]);\r\n            setParticles([]);\r\n            setDeathAnimation(false);\r\n            setKillerGhost(null);\r\n            clearTimeout(deathTimeoutRef.current);\r\n            setGhosts([\r\n              { id: 'blinky', x: 9, y: 9, direction: { x: 1, y: 0 }, type: GHOST_TYPES.BLINKY, mode: 'chase', lastMove: Date.now() },\r\n              { id: 'pinky', x: 10, y: 9, direction: { x: -1, y: 0 }, type: GHOST_TYPES.PINKY, mode: 'chase', lastMove: Date.now() },\r\n              { id: 'inky', x: 9, y: 10, direction: { x: 0, y: 1 }, type: GHOST_TYPES.INKY, mode: 'chase', lastMove: Date.now() },\r\n              { id: 'clyde', x: 10, y: 10, direction: { x: 0, y: -1 }, type: GHOST_TYPES.CLYDE, mode: 'chase', lastMove: Date.now() }\r\n            ]);\r\n          }\r\n          break;\r\n        case 'Enter':\r\n          if (gameState === GAME_STATES.DEATH_SCREEN) {\r\n            // Saltar la animación de muerte\r\n            clearTimeout(deathTimeoutRef.current);\r\n            setDeathAnimation(false);\r\n            setLives(l => l - 1);\r\n            \r\n            if (lives <= 1) {\r\n              if (score > highScore) {\r\n                setHighScore(score);\r\n                localStorage.setItem('shiroNekoHighScore', score.toString());\r\n              }\r\n              setGameState(GAME_STATES.GAME_OVER);\r\n            } else {\r\n              setShiroPosition({ x: 9, y: 15 });\r\n              setGhosts([\r\n                { id: 'blinky', x: 9, y: 9, direction: { x: 1, y: 0 }, type: GHOST_TYPES.BLINKY, mode: 'chase', lastMove: Date.now() },\r\n                { id: 'pinky', x: 10, y: 9, direction: { x: -1, y: 0 }, type: GHOST_TYPES.PINKY, mode: 'chase', lastMove: Date.now() },\r\n                { id: 'inky', x: 9, y: 10, direction: { x: 0, y: 1 }, type: GHOST_TYPES.INKY, mode: 'chase', lastMove: Date.now() },\r\n                { id: 'clyde', x: 10, y: 10, direction: { x: 0, y: -1 }, type: GHOST_TYPES.CLYDE, mode: 'chase', lastMove: Date.now() }\r\n              ]);\r\n              setGameState(GAME_STATES.READY);\r\n              setKillerGhost(null);\r\n            }\r\n          }\r\n          break;\r\n        case 's':\r\n          setShowStats(!showStats);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyPress);\r\n    return () => window.removeEventListener('keydown', handleKeyPress);\r\n  }, [gameState]);\r\n\r\n  // Game loop principal\r\n  useEffect(() => {\r\n    if (gameState === GAME_STATES.PLAYING) {\r\n      const speed = speedBoost ? 100 : 150; // Más rápido con speed boost\r\n      gameLoopRef.current = setInterval(() => {\r\n        if (direction.x !== 0 || direction.y !== 0) {\r\n          moveShiro(direction);\r\n        }\r\n        moveGhosts();\r\n      }, speed);\r\n    } else {\r\n      clearInterval(gameLoopRef.current);\r\n    }\r\n\r\n    return () => clearInterval(gameLoopRef.current);\r\n  }, [gameState, direction, moveShiro, moveGhosts, speedBoost]);\r\n\r\n  // Power mode timer\r\n  useEffect(() => {\r\n    if (powerMode && powerModeTimer > 0) {\r\n      powerModeRef.current = setTimeout(() => {\r\n        setPowerModeTimer(t => t - 100);\r\n      }, 100);\r\n    } else if (powerMode && powerModeTimer <= 0) {\r\n      setPowerMode(false);\r\n      setGhosts(prevGhosts =>\r\n        prevGhosts.map(ghost => ({ ...ghost, mode: 'chase' }))\r\n      );\r\n    }\r\n\r\n    return () => clearTimeout(powerModeRef.current);\r\n  }, [powerMode, powerModeTimer]);\r\n\r\n  const renderCell = (cell, x, y) => {\r\n    let className = 'cell';\r\n    let content = '';\r\n\r\n    if (cell === 1) {\r\n      className += ' wall';\r\n    } else if (cell === 2) {\r\n      content = '·';\r\n    } else if (cell === 3) {\r\n      content = '●';\r\n      className += ' power-pellet';\r\n    }\r\n\r\n    // Renderizar Shiro Neko con imagen personalizada\r\n    if (shiroPosition.x === x && shiroPosition.y === y) {\r\n      content = <img src={protagonistaImg} alt=\"Shiro Neko\" className=\"protagonist-img\" />;\r\n      className += ' shiro';\r\n      if (powerMode) className += ' power-mode';\r\n      if (speedBoost) className += ' speed-boost';\r\n    }\r\n\r\n    // Renderizar power-ups\r\n    const powerUpAtPosition = powerUps.find(powerUp => powerUp.x === x && powerUp.y === y);\r\n    if (powerUpAtPosition && !(shiroPosition.x === x && shiroPosition.y === y)) {\r\n      content = powerUpAtPosition.emoji;\r\n      className += ' power-up';\r\n    }\r\n\r\n    // Renderizar fantasmas\r\n    const ghostAtPosition = ghosts.find(ghost => ghost.x === x && ghost.y === y);\r\n    if (ghostAtPosition && !(shiroPosition.x === x && shiroPosition.y === y)) {\r\n      content = ghostAtPosition.type.emoji;\r\n      className += ` ghost ${ghostAtPosition.mode}`;\r\n      if (ghostAtPosition.mode === 'frightened') {\r\n        className += ' frightened';\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div key={`${x}-${y}`} className={className}>\r\n        {content}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getGameStateMessage = () => {\r\n    switch (gameState) {\r\n      case GAME_STATES.READY:\r\n        return \"¡Presiona ESPACIO para comenzar!\";\r\n      case GAME_STATES.PAUSED:\r\n        return \"PAUSADO - Presiona ESPACIO para continuar\";\r\n      case GAME_STATES.DEATH_SCREEN:\r\n        return \"\";\r\n      case GAME_STATES.GAME_OVER:\r\n        return \"GAME OVER - Presiona R para reiniciar\";\r\n      case GAME_STATES.LEVEL_COMPLETE:\r\n        return \"¡NIVEL COMPLETADO! Preparando siguiente nivel...\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  // Renderizar pantalla de muerte\r\n  const renderDeathScreen = () => {\r\n    if (gameState !== GAME_STATES.DEATH_SCREEN) return null;\r\n\r\n    return (\r\n      <div className=\"death-screen-overlay\">\r\n        <div className=\"death-screen\">\r\n          <div className=\"death-animation\">\r\n            <div className=\"death-explosion\">💥</div>\r\n            <img \r\n              src={protagonistaImg} \r\n              alt=\"Shiro Neko\" \r\n              className=\"dying-protagonist\" \r\n            />\r\n            <div className=\"death-effects\">\r\n              <div className=\"death-particle\">⚡</div>\r\n              <div className=\"death-particle\">💀</div>\r\n              <div className=\"death-particle\">🌟</div>\r\n              <div className=\"death-particle\">💥</div>\r\n              <div className=\"death-particle\">😵</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"death-message\">\r\n            <h2 className=\"death-title\">💀 ¡OH NO! 💀</h2>\r\n            <div className=\"death-subtitle\">\r\n              {killerGhost && (\r\n                <p>\r\n                  {killerGhost.type.emoji} <strong>{killerGhost.type.name}</strong> te ha atrapado!\r\n                </p>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"death-stats\">\r\n              <div className=\"death-stat\">\r\n                <span className=\"stat-label\">Puntuación Final:</span>\r\n                <span className=\"stat-value\">{score.toLocaleString()}</span>\r\n              </div>\r\n              <div className=\"death-stat\">\r\n                <span className=\"stat-label\">Nivel Alcanzado:</span>\r\n                <span className=\"stat-value\">{level}</span>\r\n              </div>\r\n              <div className=\"death-stat\">\r\n                <span className=\"stat-label\">Tiempo Jugado:</span>\r\n                <span className=\"stat-value\">{formatTime(gameTime)}</span>\r\n              </div>\r\n              <div className=\"death-stat\">\r\n                <span className=\"stat-label\">Fantasmas Comidos:</span>\r\n                <span className=\"stat-value\">{ghostsEaten}</span>\r\n              </div>\r\n            </div>\r\n\r\n            {lives > 1 ? (\r\n              <div className=\"death-continue\">\r\n                <p className=\"lives-remaining\">\r\n                  Te quedan <strong>{lives - 1}</strong> vida{lives - 1 !== 1 ? 's' : ''}\r\n                </p>\r\n                <p className=\"continue-instruction\">\r\n                  Presiona <kbd>ENTER</kbd> para continuar o espera...\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"final-death\">\r\n                <p className=\"game-over-message\">¡Se acabaron las vidas!</p>\r\n                {score > highScore && (\r\n                  <p className=\"new-record\">🏆 ¡NUEVO RÉCORD! 🏆</p>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"death-countdown\">\r\n            <div className=\"countdown-bar\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"game-info\">\r\n        <h1>🐱 Shiro Neko Pacman 🐱</h1>\r\n        <div className=\"game-stats\">\r\n          <div className=\"score\">Puntuación: {score.toLocaleString()}</div>\r\n          <div className=\"high-score\">Récord: {highScore.toLocaleString()}</div>\r\n          <div className=\"lives\">Vidas: {'❤️'.repeat(lives)}</div>\r\n          <div className=\"level\">Nivel: {level}</div>\r\n          <div className=\"time\">Tiempo: {formatTime(gameTime)}</div>\r\n          {combo > 0 && <div className=\"combo\">Combo: x{combo}</div>}\r\n        </div>\r\n\r\n        <div className=\"power-ups-status\">\r\n          {powerMode && (\r\n            <div className=\"power-timer\">\r\n              🌟 Power Mode: {Math.ceil(powerModeTimer / 1000)}s\r\n            </div>\r\n          )}\r\n          {speedBoost && <div className=\"status-effect\">⚡ Speed Boost</div>}\r\n          {doublePoints && <div className=\"status-effect\">💎 Double Points</div>}\r\n          {frozenGhosts && <div className=\"status-effect\">❄️ Frozen Ghosts</div>}\r\n        </div>\r\n\r\n        <div className=\"game-state-message\">\r\n          {getGameStateMessage()}\r\n        </div>\r\n\r\n        <div className=\"controls\">\r\n          <div>🎮 Flechas: Mover | ESPACIO: Pausa | R: Reiniciar | S: Estadísticas</div>\r\n          <div>Come todos los puntos, power-ups y evita los fantasmas!</div>\r\n          {powerMode && <div className=\"power-info\">¡MODO PODER ACTIVO! ¡Come fantasmas para combos!</div>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"game-container\">\r\n        <div className=\"game-board\">\r\n          {maze.map((row, y) =>\r\n            row.map((cell, x) => renderCell(cell, x, y))\r\n          )}\r\n\r\n          {/* Renderizar partículas */}\r\n          {particles.map(particle => (\r\n            <div\r\n              key={particle.id}\r\n              className={`particle ${particle.type}`}\r\n              style={{\r\n                left: `${particle.x * CELL_SIZE + 15}px`,\r\n                top: `${particle.y * CELL_SIZE + 15}px`,\r\n                opacity: particle.life / 1000\r\n              }}\r\n            >\r\n              {particle.text}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {showStats && (\r\n          <div className=\"stats-panel\">\r\n            <h3>📊 Estadísticas del Juego</h3>\r\n            <div className=\"stat-item\">Puntos comidos: {dotsEaten}/{totalDots}</div>\r\n            <div className=\"stat-item\">Fantasmas comidos: {ghostsEaten}</div>\r\n            <div className=\"stat-item\">Mejor combo: {combo}</div>\r\n            <div className=\"stat-item\">Tiempo jugado: {formatTime(gameTime)}</div>\r\n            <div className=\"stat-item\">Puntos por minuto: {gameTime > 0 ? Math.round(score / (gameTime / 60)) : 0}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"game-footer\">\r\n        <div className=\"ghost-info\">\r\n          <div className=\"ghost-legend\">\r\n            <div className=\"ghost-card\">\r\n              <span>👻 {GHOST_TYPES.BLINKY.name}</span>\r\n              <small>{GHOST_TYPES.BLINKY.personality}</small>\r\n            </div>\r\n            <div className=\"ghost-card\">\r\n              <span>🟣 {GHOST_TYPES.PINKY.name}</span>\r\n              <small>{GHOST_TYPES.PINKY.personality}</small>\r\n            </div>\r\n            <div className=\"ghost-card\">\r\n              <span>🔵 {GHOST_TYPES.INKY.name}</span>\r\n              <small>{GHOST_TYPES.INKY.personality}</small>\r\n            </div>\r\n            <div className=\"ghost-card\">\r\n              <span>🟠 {GHOST_TYPES.CLYDE.name}</span>\r\n              <small>{GHOST_TYPES.CLYDE.personality}</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"power-ups-info\">\r\n          <h4>Power-ups Disponibles:</h4>\r\n          <div className=\"power-up-legend\">\r\n            <span>⚡ Speed Boost (+100pts)</span>\r\n            <span>💖 Vida Extra (+500pts)</span>\r\n            <span>💎 Puntos Dobles (+200pts)</span>\r\n            <span>❄️ Congelar Fantasmas (+150pts)</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Pantalla de muerte */}\r\n      {renderDeathScreen()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,OAAO,WAAW;AAClB,OAAOC,eAAe,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,SAAS,GAAG,EAAE;AACpB,MAAMC,SAAS,GAAG,EAAE;;AAEpB;AACA,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,WAAW;EAChBC,YAAY,EAAE,cAAc;EAC5BC,WAAW,EAAE,iBAAiB;EAC9BC,KAAK,EAAE,WAAW;EAClBC,cAAc,EAAE,oBAAoB;EACpCC,UAAU,EAAE;AACd,CAAC;;AAED;AACA,MAAMC,IAAI,GAAG,CACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}