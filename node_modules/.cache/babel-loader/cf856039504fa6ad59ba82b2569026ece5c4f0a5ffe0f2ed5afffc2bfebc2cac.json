{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\Downloads\\\\juego\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './App.css';\nimport protagonistaImg from './protagonista.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 20;\nconst CELL_SIZE = 30;\n\n// Configuraci√≥n de sonidos\nconst SOUNDS = {\n  DOT: 'üîä Chomp!',\n  POWER_PELLET: 'üîä Power Up!',\n  GHOST_EATEN: 'üîä Ghost Eaten!',\n  DEATH: 'üîä Oh no!',\n  LEVEL_COMPLETE: 'üîä Level Complete!',\n  GAME_START: 'üîä Game Start!'\n};\n\n// Laberinto mejorado\nconst MAZE = [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1], [1, 3, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 3, 1], [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1], [1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1], [1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1], [1, 1, 1, 1, 2, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 1], [0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0], [1, 1, 1, 1, 2, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 2, 1, 1, 1, 1], [0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0], [1, 1, 1, 1, 2, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 1], [0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0], [1, 1, 1, 1, 2, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 1], [1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1], [1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1], [1, 3, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 3, 1], [1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1], [1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1], [1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]];\n\n// Tipos de enemigos con diferentes comportamientos y personalidades\nconst GHOST_TYPES = {\n  BLINKY: {\n    emoji: 'üëª',\n    color: '#ff0000',\n    speed: 180,\n    name: 'Blinky',\n    personality: 'Agresivo - Te persigue directamente'\n  },\n  PINKY: {\n    emoji: 'üü£',\n    color: '#ffb8ff',\n    speed: 200,\n    name: 'Pinky',\n    personality: 'Estrat√©gico - Intenta emboscarte'\n  },\n  INKY: {\n    emoji: 'üîµ',\n    color: '#00ffff',\n    speed: 220,\n    name: 'Inky',\n    personality: 'Impredecible - Movimientos err√°ticos'\n  },\n  CLYDE: {\n    emoji: 'üü†',\n    color: '#ffb852',\n    speed: 240,\n    name: 'Clyde',\n    personality: 'T√≠mido - Huye cuando te acercas'\n  }\n};\n\n// Power-ups especiales\nconst POWER_UPS = {\n  SPEED_BOOST: {\n    emoji: '‚ö°',\n    points: 100,\n    duration: 5000\n  },\n  EXTRA_LIFE: {\n    emoji: 'üíñ',\n    points: 500,\n    effect: 'life'\n  },\n  DOUBLE_POINTS: {\n    emoji: 'üíé',\n    points: 200,\n    duration: 10000\n  },\n  FREEZE_GHOSTS: {\n    emoji: '‚ùÑÔ∏è',\n    points: 150,\n    duration: 3000\n  }\n};\n\n// Estados del juego\nconst GAME_STATES = {\n  READY: 'ready',\n  PLAYING: 'playing',\n  PAUSED: 'paused',\n  GAME_OVER: 'game_over',\n  LEVEL_COMPLETE: 'level_complete',\n  POWER_MODE: 'power_mode'\n};\nfunction App() {\n  _s();\n  const [shiroPosition, setShiroPosition] = useState({\n    x: 9,\n    y: 15\n  });\n  const [maze, setMaze] = useState(MAZE);\n  const [score, setScore] = useState(0);\n  const [lives, setLives] = useState(3);\n  const [level, setLevel] = useState(1);\n  const [gameState, setGameState] = useState(GAME_STATES.READY);\n  const [direction, setDirection] = useState({\n    x: 0,\n    y: 0\n  });\n  const [powerMode, setPowerMode] = useState(false);\n  const [powerModeTimer, setPowerModeTimer] = useState(0);\n  const [ghosts, setGhosts] = useState([{\n    id: 'blinky',\n    x: 9,\n    y: 9,\n    direction: {\n      x: 1,\n      y: 0\n    },\n    type: GHOST_TYPES.BLINKY,\n    mode: 'chase'\n  }, {\n    id: 'pinky',\n    x: 10,\n    y: 9,\n    direction: {\n      x: -1,\n      y: 0\n    },\n    type: GHOST_TYPES.PINKY,\n    mode: 'chase'\n  }, {\n    id: 'inky',\n    x: 9,\n    y: 10,\n    direction: {\n      x: 0,\n      y: 1\n    },\n    type: GHOST_TYPES.INKY,\n    mode: 'chase'\n  }, {\n    id: 'clyde',\n    x: 10,\n    y: 10,\n    direction: {\n      x: 0,\n      y: -1\n    },\n    type: GHOST_TYPES.CLYDE,\n    mode: 'chase'\n  }]);\n  const [totalDots, setTotalDots] = useState(0);\n  const [dotsEaten, setDotsEaten] = useState(0);\n  const gameLoopRef = useRef();\n  const powerModeRef = useRef();\n\n  // Inicializar el juego\n  useEffect(() => {\n    const dots = MAZE.flat().filter(cell => cell === 2 || cell === 3).length;\n    setTotalDots(dots);\n  }, []);\n\n  // Funci√≥n para reproducir sonidos (simulados con console.log)\n  const playSound = useCallback(soundType => {\n    // En una implementaci√≥n real, aqu√≠ reproducir√≠as sonidos\n    console.log(`üîä ${soundType}`);\n  }, []);\n\n  // Verificar colisiones con fantasmas\n  const checkGhostCollision = useCallback(position => {\n    return ghosts.some(ghost => ghost.x === position.x && ghost.y === position.y);\n  }, [ghosts]);\n\n  // Mover Shiro Neko\n  const moveShiro = useCallback(newDirection => {\n    if (gameState !== GAME_STATES.PLAYING) return;\n    setShiroPosition(prev => {\n      const newX = prev.x + newDirection.x;\n      const newY = prev.y + newDirection.y;\n\n      // Verificar l√≠mites y paredes\n      if (newX < 0 || newX >= GRID_SIZE || newY < 0 || newY >= GRID_SIZE) {\n        return prev;\n      }\n      if (maze[newY][newX] === 1) {\n        return prev;\n      }\n      const newPosition = {\n        x: newX,\n        y: newY\n      };\n\n      // Verificar colisi√≥n con fantasmas\n      if (checkGhostCollision(newPosition)) {\n        if (powerMode) {\n          // Comer fantasma\n          playSound('GHOST_EATEN');\n          setScore(s => s + 200);\n          // Resetear fantasma comido\n          setGhosts(prevGhosts => prevGhosts.map(ghost => ghost.x === newX && ghost.y === newY ? {\n            ...ghost,\n            x: 9,\n            y: 9,\n            mode: 'frightened'\n          } : ghost));\n        } else {\n          // Perder vida\n          playSound('DEATH');\n          setLives(l => l - 1);\n          if (lives <= 1) {\n            setGameState(GAME_STATES.GAME_OVER);\n          } else {\n            // Resetear posiciones\n            setShiroPosition({\n              x: 9,\n              y: 15\n            });\n            setGhosts([{\n              id: 'blinky',\n              x: 9,\n              y: 9,\n              direction: {\n                x: 1,\n                y: 0\n              },\n              type: GHOST_TYPES.BLINKY,\n              mode: 'chase'\n            }, {\n              id: 'pinky',\n              x: 10,\n              y: 9,\n              direction: {\n                x: -1,\n                y: 0\n              },\n              type: GHOST_TYPES.PINKY,\n              mode: 'chase'\n            }, {\n              id: 'inky',\n              x: 9,\n              y: 10,\n              direction: {\n                x: 0,\n                y: 1\n              },\n              type: GHOST_TYPES.INKY,\n              mode: 'chase'\n            }, {\n              id: 'clyde',\n              x: 10,\n              y: 10,\n              direction: {\n                x: 0,\n                y: -1\n              },\n              type: GHOST_TYPES.CLYDE,\n              mode: 'chase'\n            }]);\n          }\n          return prev;\n        }\n      }\n\n      // Comer comida\n      if (maze[newY][newX] === 2 || maze[newY][newX] === 3) {\n        const isPowerPellet = maze[newY][newX] === 3;\n        const points = isPowerPellet ? 50 : 10;\n        playSound(isPowerPellet ? 'POWER_PELLET' : 'DOT');\n        setScore(s => s + points);\n        setDotsEaten(d => d + 1);\n        if (isPowerPellet) {\n          setPowerMode(true);\n          setPowerModeTimer(8000); // 8 segundos\n          setGhosts(prevGhosts => prevGhosts.map(ghost => ({\n            ...ghost,\n            mode: 'frightened'\n          })));\n        }\n        setMaze(prevMaze => {\n          const newMaze = [...prevMaze];\n          newMaze[newY] = [...newMaze[newY]];\n          newMaze[newY][newX] = 0;\n          return newMaze;\n        });\n\n        // Verificar si se complet√≥ el nivel\n        if (dotsEaten + 1 >= totalDots) {\n          setGameState(GAME_STATES.LEVEL_COMPLETE);\n          playSound('LEVEL_COMPLETE');\n        }\n      }\n      return newPosition;\n    });\n  }, [gameState, maze, ghosts, powerMode, lives, checkGhostCollision, playSound, dotsEaten, totalDots]);\n\n  // Mover fantasmas con IA\n  const moveGhosts = useCallback(() => {\n    if (gameState !== GAME_STATES.PLAYING) return;\n    setGhosts(prevGhosts => prevGhosts.map(ghost => {\n      const possibleMoves = [{\n        x: 0,\n        y: -1\n      },\n      // Arriba\n      {\n        x: 0,\n        y: 1\n      },\n      // Abajo\n      {\n        x: -1,\n        y: 0\n      },\n      // Izquierda\n      {\n        x: 1,\n        y: 0\n      } // Derecha\n      ].filter(move => {\n        const newX = ghost.x + move.x;\n        const newY = ghost.y + move.y;\n        return newX >= 0 && newX < GRID_SIZE && newY >= 0 && newY < GRID_SIZE && maze[newY][newX] !== 1;\n      });\n      if (possibleMoves.length === 0) return ghost;\n      let nextMove;\n      if (ghost.mode === 'frightened') {\n        // Movimiento aleatorio cuando est√°n asustados\n        nextMove = possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\n      } else {\n        // IA b√°sica: perseguir a Shiro Neko\n        const distanceToShiro = possibleMoves.map(move => {\n          const newX = ghost.x + move.x;\n          const newY = ghost.y + move.y;\n          return {\n            move,\n            distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\n          };\n        });\n        nextMove = distanceToShiro.reduce((closest, current) => current.distance < closest.distance ? current : closest).move;\n      }\n      return {\n        ...ghost,\n        x: ghost.x + nextMove.x,\n        y: ghost.y + nextMove.y,\n        direction: nextMove\n      };\n    }));\n  }, [gameState, maze, shiroPosition]);\n\n  // Controles del teclado\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (!e || !e.key) return;\n      e.preventDefault();\n      switch (e.key) {\n        case 'ArrowUp':\n          setDirection({\n            x: 0,\n            y: -1\n          });\n          break;\n        case 'ArrowDown':\n          setDirection({\n            x: 0,\n            y: 1\n          });\n          break;\n        case 'ArrowLeft':\n          setDirection({\n            x: -1,\n            y: 0\n          });\n          break;\n        case 'ArrowRight':\n          setDirection({\n            x: 1,\n            y: 0\n          });\n          break;\n        case ' ':\n          if (gameState === GAME_STATES.READY) {\n            setGameState(GAME_STATES.PLAYING);\n          } else if (gameState === GAME_STATES.PLAYING) {\n            setGameState(GAME_STATES.PAUSED);\n          } else if (gameState === GAME_STATES.PAUSED) {\n            setGameState(GAME_STATES.PLAYING);\n          }\n          break;\n        case 'r':\n          if (gameState === GAME_STATES.GAME_OVER) {\n            // Reiniciar juego\n            setShiroPosition({\n              x: 9,\n              y: 15\n            });\n            setMaze(MAZE);\n            setScore(0);\n            setLives(3);\n            setLevel(1);\n            setGameState(GAME_STATES.READY);\n            setDirection({\n              x: 0,\n              y: 0\n            });\n            setPowerMode(false);\n            setPowerModeTimer(0);\n            setDotsEaten(0);\n            setGhosts([{\n              id: 'blinky',\n              x: 9,\n              y: 9,\n              direction: {\n                x: 1,\n                y: 0\n              },\n              type: GHOST_TYPES.BLINKY,\n              mode: 'chase'\n            }, {\n              id: 'pinky',\n              x: 10,\n              y: 9,\n              direction: {\n                x: -1,\n                y: 0\n              },\n              type: GHOST_TYPES.PINKY,\n              mode: 'chase'\n            }, {\n              id: 'inky',\n              x: 9,\n              y: 10,\n              direction: {\n                x: 0,\n                y: 1\n              },\n              type: GHOST_TYPES.INKY,\n              mode: 'chase'\n            }, {\n              id: 'clyde',\n              x: 10,\n              y: 10,\n              direction: {\n                x: 0,\n                y: -1\n              },\n              type: GHOST_TYPES.CLYDE,\n              mode: 'chase'\n            }]);\n          }\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [gameState]);\n\n  // Game loop principal\n  useEffect(() => {\n    if (gameState === GAME_STATES.PLAYING) {\n      gameLoopRef.current = setInterval(() => {\n        if (direction.x !== 0 || direction.y !== 0) {\n          moveShiro(direction);\n        }\n        moveGhosts();\n      }, 150);\n    } else {\n      clearInterval(gameLoopRef.current);\n    }\n    return () => clearInterval(gameLoopRef.current);\n  }, [gameState, direction, moveShiro, moveGhosts]);\n\n  // Power mode timer\n  useEffect(() => {\n    if (powerMode && powerModeTimer > 0) {\n      powerModeRef.current = setTimeout(() => {\n        setPowerModeTimer(t => t - 100);\n      }, 100);\n    } else if (powerMode && powerModeTimer <= 0) {\n      setPowerMode(false);\n      setGhosts(prevGhosts => prevGhosts.map(ghost => ({\n        ...ghost,\n        mode: 'chase'\n      })));\n    }\n    return () => clearTimeout(powerModeRef.current);\n  }, [powerMode, powerModeTimer]);\n  const renderCell = (cell, x, y) => {\n    let className = 'cell';\n    let content = '';\n    if (cell === 1) {\n      className += ' wall';\n    } else if (cell === 2) {\n      content = '¬∑';\n    } else if (cell === 3) {\n      content = '‚óè';\n      className += ' power-pellet';\n    }\n\n    // Renderizar Shiro Neko\n    if (shiroPosition.x === x && shiroPosition.y === y) {\n      content = 'üê±';\n      className += ' shiro';\n      if (powerMode) className += ' power-mode';\n    }\n\n    // Renderizar fantasmas\n    const ghostAtPosition = ghosts.find(ghost => ghost.x === x && ghost.y === y);\n    if (ghostAtPosition && !(shiroPosition.x === x && shiroPosition.y === y)) {\n      content = ghostAtPosition.type.emoji;\n      className += ` ghost ${ghostAtPosition.mode}`;\n      if (ghostAtPosition.mode === 'frightened') {\n        className += ' frightened';\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: content\n    }, `${x}-${y}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this);\n  };\n  const getGameStateMessage = () => {\n    switch (gameState) {\n      case GAME_STATES.READY:\n        return \"¬°Presiona ESPACIO para comenzar!\";\n      case GAME_STATES.PAUSED:\n        return \"PAUSADO - Presiona ESPACIO para continuar\";\n      case GAME_STATES.GAME_OVER:\n        return \"GAME OVER - Presiona R para reiniciar\";\n      case GAME_STATES.LEVEL_COMPLETE:\n        return \"¬°NIVEL COMPLETADO! Preparando siguiente nivel...\";\n      default:\n        return \"\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDC31 Shiro Neko Pacman \\uD83D\\uDC31\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score\",\n          children: [\"Puntuaci\\xF3n: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lives\",\n          children: [\"Vidas: \", '‚ù§Ô∏è'.repeat(lives)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"level\",\n          children: [\"Nivel: \", level]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), powerMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"power-timer\",\n          children: [\"Power Mode: \", Math.ceil(powerModeTimer / 1000), \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-state-message\",\n        children: getGameStateMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uD83C\\uDFAE Flechas: Mover | ESPACIO: Pausa | R: Reiniciar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Come todos los puntos y evita los fantasmas!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), powerMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"power-info\",\n          children: \"\\xA1MODO PODER ACTIVO! \\xA1Come fantasmas!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: maze.map((row, y) => row.map((cell, x) => renderCell(cell, x, y)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ghost-info\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ghost-legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83D\\uDC7B Blinky\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83D\\uDFE3 Pinky\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83D\\uDD35 Inky\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83D\\uDFE0 Clyde\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 413,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"u9HvkuZGMdZLk7tf4lYko6tT0AE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","protagonistaImg","jsxDEV","_jsxDEV","GRID_SIZE","CELL_SIZE","SOUNDS","DOT","POWER_PELLET","GHOST_EATEN","DEATH","LEVEL_COMPLETE","GAME_START","MAZE","GHOST_TYPES","BLINKY","emoji","color","speed","name","personality","PINKY","INKY","CLYDE","POWER_UPS","SPEED_BOOST","points","duration","EXTRA_LIFE","effect","DOUBLE_POINTS","FREEZE_GHOSTS","GAME_STATES","READY","PLAYING","PAUSED","GAME_OVER","POWER_MODE","App","_s","shiroPosition","setShiroPosition","x","y","maze","setMaze","score","setScore","lives","setLives","level","setLevel","gameState","setGameState","direction","setDirection","powerMode","setPowerMode","powerModeTimer","setPowerModeTimer","ghosts","setGhosts","id","type","mode","totalDots","setTotalDots","dotsEaten","setDotsEaten","gameLoopRef","powerModeRef","dots","flat","filter","cell","length","playSound","soundType","console","log","checkGhostCollision","position","some","ghost","moveShiro","newDirection","prev","newX","newY","newPosition","s","prevGhosts","map","l","isPowerPellet","d","prevMaze","newMaze","moveGhosts","possibleMoves","move","nextMove","Math","floor","random","distanceToShiro","distance","abs","reduce","closest","current","handleKeyPress","e","key","preventDefault","window","addEventListener","removeEventListener","setInterval","clearInterval","setTimeout","t","clearTimeout","renderCell","className","content","ghostAtPosition","find","children","fileName","_jsxFileName","lineNumber","columnNumber","getGameStateMessage","repeat","ceil","row","_c","$RefreshReg$"],"sources":["C:/Users/usuario/Downloads/juego/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport './App.css';\r\nimport protagonistaImg from './protagonista.png';\r\n\r\nconst GRID_SIZE = 20;\r\nconst CELL_SIZE = 30;\r\n\r\n// Configuraci√≥n de sonidos\r\nconst SOUNDS = {\r\n  DOT: 'üîä Chomp!',\r\n  POWER_PELLET: 'üîä Power Up!',\r\n  GHOST_EATEN: 'üîä Ghost Eaten!',\r\n  DEATH: 'üîä Oh no!',\r\n  LEVEL_COMPLETE: 'üîä Level Complete!',\r\n  GAME_START: 'üîä Game Start!'\r\n};\r\n\r\n// Laberinto mejorado\r\nconst MAZE = [\r\n  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\r\n  [1,2,2,2,2,2,2,2,2,1,1,2,2,2,2,2,2,2,2,1],\r\n  [1,3,1,1,2,1,1,1,2,1,1,2,1,1,1,2,1,1,3,1],\r\n  [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],\r\n  [1,2,1,1,2,1,2,1,1,1,1,1,1,2,1,2,1,1,2,1],\r\n  [1,2,2,2,2,1,2,2,2,1,1,2,2,2,1,2,2,2,2,1],\r\n  [1,1,1,1,2,1,1,1,0,1,1,0,1,1,1,2,1,1,1,1],\r\n  [0,0,0,1,2,1,0,0,0,0,0,0,0,0,1,2,1,0,0,0],\r\n  [1,1,1,1,2,1,0,1,1,0,0,1,1,0,1,2,1,1,1,1],\r\n  [0,0,0,0,2,0,0,1,0,0,0,0,1,0,0,2,0,0,0,0],\r\n  [1,1,1,1,2,1,0,1,1,1,1,1,1,0,1,2,1,1,1,1],\r\n  [0,0,0,1,2,1,0,0,0,0,0,0,0,0,1,2,1,0,0,0],\r\n  [1,1,1,1,2,1,1,1,0,1,1,0,1,1,1,2,1,1,1,1],\r\n  [1,2,2,2,2,2,2,2,2,1,1,2,2,2,2,2,2,2,2,1],\r\n  [1,2,1,1,2,1,1,1,2,1,1,2,1,1,1,2,1,1,2,1],\r\n  [1,3,2,1,2,2,2,2,2,2,2,2,2,2,2,2,1,2,3,1],\r\n  [1,1,2,1,2,1,2,1,1,1,1,1,1,2,1,2,1,2,1,1],\r\n  [1,2,2,2,2,1,2,2,2,1,1,2,2,2,1,2,2,2,2,1],\r\n  [1,2,1,1,1,1,1,1,2,1,1,2,1,1,1,1,1,1,2,1],\r\n  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]\r\n];\r\n\r\n// Tipos de enemigos con diferentes comportamientos y personalidades\r\nconst GHOST_TYPES = {\r\n  BLINKY: { \r\n    emoji: 'üëª', \r\n    color: '#ff0000', \r\n    speed: 180, \r\n    name: 'Blinky',\r\n    personality: 'Agresivo - Te persigue directamente'\r\n  },\r\n  PINKY: { \r\n    emoji: 'üü£', \r\n    color: '#ffb8ff', \r\n    speed: 200, \r\n    name: 'Pinky',\r\n    personality: 'Estrat√©gico - Intenta emboscarte'\r\n  },\r\n  INKY: { \r\n    emoji: 'üîµ', \r\n    color: '#00ffff', \r\n    speed: 220, \r\n    name: 'Inky',\r\n    personality: 'Impredecible - Movimientos err√°ticos'\r\n  },\r\n  CLYDE: { \r\n    emoji: 'üü†', \r\n    color: '#ffb852', \r\n    speed: 240, \r\n    name: 'Clyde',\r\n    personality: 'T√≠mido - Huye cuando te acercas'\r\n  }\r\n};\r\n\r\n// Power-ups especiales\r\nconst POWER_UPS = {\r\n  SPEED_BOOST: { emoji: '‚ö°', points: 100, duration: 5000 },\r\n  EXTRA_LIFE: { emoji: 'üíñ', points: 500, effect: 'life' },\r\n  DOUBLE_POINTS: { emoji: 'üíé', points: 200, duration: 10000 },\r\n  FREEZE_GHOSTS: { emoji: '‚ùÑÔ∏è', points: 150, duration: 3000 }\r\n};\r\n\r\n// Estados del juego\r\nconst GAME_STATES = {\r\n  READY: 'ready',\r\n  PLAYING: 'playing',\r\n  PAUSED: 'paused',\r\n  GAME_OVER: 'game_over',\r\n  LEVEL_COMPLETE: 'level_complete',\r\n  POWER_MODE: 'power_mode'\r\n};\r\n\r\nfunction App() {\r\n  const [shiroPosition, setShiroPosition] = useState({ x: 9, y: 15 });\r\n  const [maze, setMaze] = useState(MAZE);\r\n  const [score, setScore] = useState(0);\r\n  const [lives, setLives] = useState(3);\r\n  const [level, setLevel] = useState(1);\r\n  const [gameState, setGameState] = useState(GAME_STATES.READY);\r\n  const [direction, setDirection] = useState({ x: 0, y: 0 });\r\n  const [powerMode, setPowerMode] = useState(false);\r\n  const [powerModeTimer, setPowerModeTimer] = useState(0);\r\n  const [ghosts, setGhosts] = useState([\r\n    { id: 'blinky', x: 9, y: 9, direction: { x: 1, y: 0 }, type: GHOST_TYPES.BLINKY, mode: 'chase' },\r\n    { id: 'pinky', x: 10, y: 9, direction: { x: -1, y: 0 }, type: GHOST_TYPES.PINKY, mode: 'chase' },\r\n    { id: 'inky', x: 9, y: 10, direction: { x: 0, y: 1 }, type: GHOST_TYPES.INKY, mode: 'chase' },\r\n    { id: 'clyde', x: 10, y: 10, direction: { x: 0, y: -1 }, type: GHOST_TYPES.CLYDE, mode: 'chase' }\r\n  ]);\r\n  const [totalDots, setTotalDots] = useState(0);\r\n  const [dotsEaten, setDotsEaten] = useState(0);\r\n  const gameLoopRef = useRef();\r\n  const powerModeRef = useRef();\r\n\r\n  // Inicializar el juego\r\n  useEffect(() => {\r\n    const dots = MAZE.flat().filter(cell => cell === 2 || cell === 3).length;\r\n    setTotalDots(dots);\r\n  }, []);\r\n\r\n  // Funci√≥n para reproducir sonidos (simulados con console.log)\r\n  const playSound = useCallback((soundType) => {\r\n    // En una implementaci√≥n real, aqu√≠ reproducir√≠as sonidos\r\n    console.log(`üîä ${soundType}`);\r\n  }, []);\r\n\r\n  // Verificar colisiones con fantasmas\r\n  const checkGhostCollision = useCallback((position) => {\r\n    return ghosts.some(ghost => ghost.x === position.x && ghost.y === position.y);\r\n  }, [ghosts]);\r\n\r\n  // Mover Shiro Neko\r\n  const moveShiro = useCallback((newDirection) => {\r\n    if (gameState !== GAME_STATES.PLAYING) return;\r\n    \r\n    setShiroPosition(prev => {\r\n      const newX = prev.x + newDirection.x;\r\n      const newY = prev.y + newDirection.y;\r\n      \r\n      // Verificar l√≠mites y paredes\r\n      if (newX < 0 || newX >= GRID_SIZE || newY < 0 || newY >= GRID_SIZE) {\r\n        return prev;\r\n      }\r\n      \r\n      if (maze[newY][newX] === 1) {\r\n        return prev;\r\n      }\r\n      \r\n      const newPosition = { x: newX, y: newY };\r\n      \r\n      // Verificar colisi√≥n con fantasmas\r\n      if (checkGhostCollision(newPosition)) {\r\n        if (powerMode) {\r\n          // Comer fantasma\r\n          playSound('GHOST_EATEN');\r\n          setScore(s => s + 200);\r\n          // Resetear fantasma comido\r\n          setGhosts(prevGhosts => \r\n            prevGhosts.map(ghost => \r\n              ghost.x === newX && ghost.y === newY \r\n                ? { ...ghost, x: 9, y: 9, mode: 'frightened' }\r\n                : ghost\r\n            )\r\n          );\r\n        } else {\r\n          // Perder vida\r\n          playSound('DEATH');\r\n          setLives(l => l - 1);\r\n          if (lives <= 1) {\r\n            setGameState(GAME_STATES.GAME_OVER);\r\n          } else {\r\n            // Resetear posiciones\r\n            setShiroPosition({ x: 9, y: 15 });\r\n            setGhosts([\r\n              { id: 'blinky', x: 9, y: 9, direction: { x: 1, y: 0 }, type: GHOST_TYPES.BLINKY, mode: 'chase' },\r\n              { id: 'pinky', x: 10, y: 9, direction: { x: -1, y: 0 }, type: GHOST_TYPES.PINKY, mode: 'chase' },\r\n              { id: 'inky', x: 9, y: 10, direction: { x: 0, y: 1 }, type: GHOST_TYPES.INKY, mode: 'chase' },\r\n              { id: 'clyde', x: 10, y: 10, direction: { x: 0, y: -1 }, type: GHOST_TYPES.CLYDE, mode: 'chase' }\r\n            ]);\r\n          }\r\n          return prev;\r\n        }\r\n      }\r\n      \r\n      // Comer comida\r\n      if (maze[newY][newX] === 2 || maze[newY][newX] === 3) {\r\n        const isPowerPellet = maze[newY][newX] === 3;\r\n        const points = isPowerPellet ? 50 : 10;\r\n        \r\n        playSound(isPowerPellet ? 'POWER_PELLET' : 'DOT');\r\n        setScore(s => s + points);\r\n        setDotsEaten(d => d + 1);\r\n        \r\n        if (isPowerPellet) {\r\n          setPowerMode(true);\r\n          setPowerModeTimer(8000); // 8 segundos\r\n          setGhosts(prevGhosts => \r\n            prevGhosts.map(ghost => ({ ...ghost, mode: 'frightened' }))\r\n          );\r\n        }\r\n        \r\n        setMaze(prevMaze => {\r\n          const newMaze = [...prevMaze];\r\n          newMaze[newY] = [...newMaze[newY]];\r\n          newMaze[newY][newX] = 0;\r\n          return newMaze;\r\n        });\r\n        \r\n        // Verificar si se complet√≥ el nivel\r\n        if (dotsEaten + 1 >= totalDots) {\r\n          setGameState(GAME_STATES.LEVEL_COMPLETE);\r\n          playSound('LEVEL_COMPLETE');\r\n        }\r\n      }\r\n      \r\n      return newPosition;\r\n    });\r\n  }, [gameState, maze, ghosts, powerMode, lives, checkGhostCollision, playSound, dotsEaten, totalDots]);\r\n\r\n  // Mover fantasmas con IA\r\n  const moveGhosts = useCallback(() => {\r\n    if (gameState !== GAME_STATES.PLAYING) return;\r\n    \r\n    setGhosts(prevGhosts => \r\n      prevGhosts.map(ghost => {\r\n        const possibleMoves = [\r\n          { x: 0, y: -1 }, // Arriba\r\n          { x: 0, y: 1 },  // Abajo\r\n          { x: -1, y: 0 }, // Izquierda\r\n          { x: 1, y: 0 }   // Derecha\r\n        ].filter(move => {\r\n          const newX = ghost.x + move.x;\r\n          const newY = ghost.y + move.y;\r\n          return newX >= 0 && newX < GRID_SIZE && \r\n                 newY >= 0 && newY < GRID_SIZE && \r\n                 maze[newY][newX] !== 1;\r\n        });\r\n        \r\n        if (possibleMoves.length === 0) return ghost;\r\n        \r\n        let nextMove;\r\n        \r\n        if (ghost.mode === 'frightened') {\r\n          // Movimiento aleatorio cuando est√°n asustados\r\n          nextMove = possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\r\n        } else {\r\n          // IA b√°sica: perseguir a Shiro Neko\r\n          const distanceToShiro = possibleMoves.map(move => {\r\n            const newX = ghost.x + move.x;\r\n            const newY = ghost.y + move.y;\r\n            return {\r\n              move,\r\n              distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\r\n            };\r\n          });\r\n          \r\n          nextMove = distanceToShiro.reduce((closest, current) => \r\n            current.distance < closest.distance ? current : closest\r\n          ).move;\r\n        }\r\n        \r\n        return {\r\n          ...ghost,\r\n          x: ghost.x + nextMove.x,\r\n          y: ghost.y + nextMove.y,\r\n          direction: nextMove\r\n        };\r\n      })\r\n    );\r\n  }, [gameState, maze, shiroPosition]);\r\n\r\n  // Controles del teclado\r\n  useEffect(() => {\r\n    const handleKeyPress = (e) => {\r\n      if (!e || !e.key) return;\r\n      e.preventDefault();\r\n      \r\n      switch(e.key) {\r\n        case 'ArrowUp':\r\n          setDirection({ x: 0, y: -1 });\r\n          break;\r\n        case 'ArrowDown':\r\n          setDirection({ x: 0, y: 1 });\r\n          break;\r\n        case 'ArrowLeft':\r\n          setDirection({ x: -1, y: 0 });\r\n          break;\r\n        case 'ArrowRight':\r\n          setDirection({ x: 1, y: 0 });\r\n          break;\r\n        case ' ':\r\n          if (gameState === GAME_STATES.READY) {\r\n            setGameState(GAME_STATES.PLAYING);\r\n          } else if (gameState === GAME_STATES.PLAYING) {\r\n            setGameState(GAME_STATES.PAUSED);\r\n          } else if (gameState === GAME_STATES.PAUSED) {\r\n            setGameState(GAME_STATES.PLAYING);\r\n          }\r\n          break;\r\n        case 'r':\r\n          if (gameState === GAME_STATES.GAME_OVER) {\r\n            // Reiniciar juego\r\n            setShiroPosition({ x: 9, y: 15 });\r\n            setMaze(MAZE);\r\n            setScore(0);\r\n            setLives(3);\r\n            setLevel(1);\r\n            setGameState(GAME_STATES.READY);\r\n            setDirection({ x: 0, y: 0 });\r\n            setPowerMode(false);\r\n            setPowerModeTimer(0);\r\n            setDotsEaten(0);\r\n            setGhosts([\r\n              { id: 'blinky', x: 9, y: 9, direction: { x: 1, y: 0 }, type: GHOST_TYPES.BLINKY, mode: 'chase' },\r\n              { id: 'pinky', x: 10, y: 9, direction: { x: -1, y: 0 }, type: GHOST_TYPES.PINKY, mode: 'chase' },\r\n              { id: 'inky', x: 9, y: 10, direction: { x: 0, y: 1 }, type: GHOST_TYPES.INKY, mode: 'chase' },\r\n              { id: 'clyde', x: 10, y: 10, direction: { x: 0, y: -1 }, type: GHOST_TYPES.CLYDE, mode: 'chase' }\r\n            ]);\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyPress);\r\n    return () => window.removeEventListener('keydown', handleKeyPress);\r\n  }, [gameState]);\r\n\r\n  // Game loop principal\r\n  useEffect(() => {\r\n    if (gameState === GAME_STATES.PLAYING) {\r\n      gameLoopRef.current = setInterval(() => {\r\n        if (direction.x !== 0 || direction.y !== 0) {\r\n          moveShiro(direction);\r\n        }\r\n        moveGhosts();\r\n      }, 150);\r\n    } else {\r\n      clearInterval(gameLoopRef.current);\r\n    }\r\n\r\n    return () => clearInterval(gameLoopRef.current);\r\n  }, [gameState, direction, moveShiro, moveGhosts]);\r\n\r\n  // Power mode timer\r\n  useEffect(() => {\r\n    if (powerMode && powerModeTimer > 0) {\r\n      powerModeRef.current = setTimeout(() => {\r\n        setPowerModeTimer(t => t - 100);\r\n      }, 100);\r\n    } else if (powerMode && powerModeTimer <= 0) {\r\n      setPowerMode(false);\r\n      setGhosts(prevGhosts => \r\n        prevGhosts.map(ghost => ({ ...ghost, mode: 'chase' }))\r\n      );\r\n    }\r\n\r\n    return () => clearTimeout(powerModeRef.current);\r\n  }, [powerMode, powerModeTimer]);\r\n\r\n  const renderCell = (cell, x, y) => {\r\n    let className = 'cell';\r\n    let content = '';\r\n    \r\n    if (cell === 1) {\r\n      className += ' wall';\r\n    } else if (cell === 2) {\r\n      content = '¬∑';\r\n    } else if (cell === 3) {\r\n      content = '‚óè';\r\n      className += ' power-pellet';\r\n    }\r\n    \r\n    // Renderizar Shiro Neko\r\n    if (shiroPosition.x === x && shiroPosition.y === y) {\r\n      content = 'üê±';\r\n      className += ' shiro';\r\n      if (powerMode) className += ' power-mode';\r\n    }\r\n    \r\n    // Renderizar fantasmas\r\n    const ghostAtPosition = ghosts.find(ghost => ghost.x === x && ghost.y === y);\r\n    if (ghostAtPosition && !(shiroPosition.x === x && shiroPosition.y === y)) {\r\n      content = ghostAtPosition.type.emoji;\r\n      className += ` ghost ${ghostAtPosition.mode}`;\r\n      if (ghostAtPosition.mode === 'frightened') {\r\n        className += ' frightened';\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div key={`${x}-${y}`} className={className}>\r\n        {content}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getGameStateMessage = () => {\r\n    switch(gameState) {\r\n      case GAME_STATES.READY:\r\n        return \"¬°Presiona ESPACIO para comenzar!\";\r\n      case GAME_STATES.PAUSED:\r\n        return \"PAUSADO - Presiona ESPACIO para continuar\";\r\n      case GAME_STATES.GAME_OVER:\r\n        return \"GAME OVER - Presiona R para reiniciar\";\r\n      case GAME_STATES.LEVEL_COMPLETE:\r\n        return \"¬°NIVEL COMPLETADO! Preparando siguiente nivel...\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"game-info\">\r\n        <h1>üê± Shiro Neko Pacman üê±</h1>\r\n        <div className=\"game-stats\">\r\n          <div className=\"score\">Puntuaci√≥n: {score}</div>\r\n          <div className=\"lives\">Vidas: {'‚ù§Ô∏è'.repeat(lives)}</div>\r\n          <div className=\"level\">Nivel: {level}</div>\r\n          {powerMode && (\r\n            <div className=\"power-timer\">\r\n              Power Mode: {Math.ceil(powerModeTimer / 1000)}s\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"game-state-message\">\r\n          {getGameStateMessage()}\r\n        </div>\r\n        <div className=\"controls\">\r\n          <div>üéÆ Flechas: Mover | ESPACIO: Pausa | R: Reiniciar</div>\r\n          <div>Come todos los puntos y evita los fantasmas!</div>\r\n          {powerMode && <div className=\"power-info\">¬°MODO PODER ACTIVO! ¬°Come fantasmas!</div>}\r\n        </div>\r\n      </div>\r\n      <div className=\"game-board\">\r\n        {maze.map((row, y) =>\r\n          row.map((cell, x) => renderCell(cell, x, y))\r\n        )}\r\n      </div>\r\n      <div className=\"ghost-info\">\r\n        <div className=\"ghost-legend\">\r\n          <span>üëª Blinky</span>\r\n          <span>üü£ Pinky</span>\r\n          <span>üîµ Inky</span>\r\n          <span>üü† Clyde</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,OAAO,WAAW;AAClB,OAAOC,eAAe,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,SAAS,GAAG,EAAE;AACpB,MAAMC,SAAS,GAAG,EAAE;;AAEpB;AACA,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,WAAW;EAChBC,YAAY,EAAE,cAAc;EAC5BC,WAAW,EAAE,iBAAiB;EAC9BC,KAAK,EAAE,WAAW;EAClBC,cAAc,EAAE,oBAAoB;EACpCC,UAAU,EAAE;AACd,CAAC;;AAED;AACA,MAAMC,IAAI,GAAG,CACX,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}