{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { GAME_STATES } from '../constants/gameConstants';\nexport const useGameEffects = ({\n  gameState,\n  direction,\n  moveShiro,\n  moveGhosts,\n  powerMode,\n  powerModeTimer,\n  setPowerMode,\n  setPowerModeTimer,\n  setGhosts,\n  setGameTime,\n  gameLoopRef,\n  powerModeRef,\n  ghostLoopRef\n}) => {\n  _s();\n  // Game loop principal\n  useEffect(() => {\n    if (gameState === GAME_STATES.PLAYING) {\n      gameLoopRef.current = setInterval(() => {\n        if (direction.x !== 0 || direction.y !== 0) {\n          moveShiro(direction);\n        }\n      }, 150);\n    } else {\n      clearInterval(gameLoopRef.current);\n    }\n    return () => clearInterval(gameLoopRef.current);\n  }, [gameState, direction, moveShiro, gameLoopRef]);\n\n  // Game loop para fantasmas\n  useEffect(() => {\n    if (gameState === GAME_STATES.PLAYING) {\n      ghostLoopRef.current = setInterval(() => {\n        moveGhosts();\n      }, 300); // Los fantasmas se mueven más lento que el jugador\n    } else {\n      clearInterval(ghostLoopRef.current);\n    }\n    return () => clearInterval(ghostLoopRef.current);\n  }, [gameState, moveGhosts, ghostLoopRef]);\n\n  // Timer del juego\n  useEffect(() => {\n    if (gameState === GAME_STATES.PLAYING) {\n      const timer = setInterval(() => setGameTime(t => t + 1), 1000);\n      return () => clearInterval(timer);\n    }\n  }, [gameState, setGameTime]);\n\n  // Timer del modo poder\n  useEffect(() => {\n    if (powerMode && powerModeTimer > 0) {\n      powerModeRef.current = setTimeout(() => {\n        setPowerModeTimer(t => t - 100);\n      }, 100);\n    } else if (powerMode && powerModeTimer <= 0) {\n      setPowerMode(false);\n      setGhosts(prevGhosts => prevGhosts.map(ghost => ({\n        ...ghost,\n        mode: 'chase'\n      })));\n    }\n    return () => clearTimeout(powerModeRef.current);\n  }, [powerMode, powerModeTimer, setPowerMode, setPowerModeTimer, setGhosts, powerModeRef]);\n};\n_s(useGameEffects, \"0cIHaRPT5AsNp+tu70IQfhS7pBY=\");","map":{"version":3,"names":["useEffect","GAME_STATES","useGameEffects","gameState","direction","moveShiro","moveGhosts","powerMode","powerModeTimer","setPowerMode","setPowerModeTimer","setGhosts","setGameTime","gameLoopRef","powerModeRef","ghostLoopRef","_s","PLAYING","current","setInterval","x","y","clearInterval","timer","t","setTimeout","prevGhosts","map","ghost","mode","clearTimeout"],"sources":["C:/Users/usuario/Downloads/juego/src/hooks/useGameEffects.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { GAME_STATES } from '../constants/gameConstants';\n\nexport const useGameEffects = ({\n  gameState,\n  direction,\n  moveShiro,\n  moveGhosts,\n  powerMode,\n  powerModeTimer,\n  setPowerMode,\n  setPowerModeTimer,\n  setGhosts,\n  setGameTime,\n  gameLoopRef,\n  powerModeRef,\n  ghostLoopRef\n}) => {\n  // Game loop principal\n  useEffect(() => {\n    if (gameState === GAME_STATES.PLAYING) {\n      gameLoopRef.current = setInterval(() => {\n        if (direction.x !== 0 || direction.y !== 0) {\n          moveShiro(direction);\n        }\n      }, 150);\n    } else {\n      clearInterval(gameLoopRef.current);\n    }\n    return () => clearInterval(gameLoopRef.current);\n  }, [gameState, direction, moveShiro, gameLoopRef]);\n\n  // Game loop para fantasmas\n  useEffect(() => {\n    if (gameState === GAME_STATES.PLAYING) {\n      ghostLoopRef.current = setInterval(() => {\n        moveGhosts();\n      }, 300); // Los fantasmas se mueven más lento que el jugador\n    } else {\n      clearInterval(ghostLoopRef.current);\n    }\n    return () => clearInterval(ghostLoopRef.current);\n  }, [gameState, moveGhosts, ghostLoopRef]);\n\n  // Timer del juego\n  useEffect(() => {\n    if (gameState === GAME_STATES.PLAYING) {\n      const timer = setInterval(() => setGameTime(t => t + 1), 1000);\n      return () => clearInterval(timer);\n    }\n  }, [gameState, setGameTime]);\n\n  // Timer del modo poder\n  useEffect(() => {\n    if (powerMode && powerModeTimer > 0) {\n      powerModeRef.current = setTimeout(() => {\n        setPowerModeTimer(t => t - 100);\n      }, 100);\n    } else if (powerMode && powerModeTimer <= 0) {\n      setPowerMode(false);\n      setGhosts(prevGhosts => \n        prevGhosts.map(ghost => ({ ...ghost, mode: 'chase' }))\n      );\n    }\n    return () => clearTimeout(powerModeRef.current);\n  }, [powerMode, powerModeTimer, setPowerMode, setPowerModeTimer, setGhosts, powerModeRef]);\n};"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,4BAA4B;AAExD,OAAO,MAAMC,cAAc,GAAGA,CAAC;EAC7BC,SAAS;EACTC,SAAS;EACTC,SAAS;EACTC,UAAU;EACVC,SAAS;EACTC,cAAc;EACdC,YAAY;EACZC,iBAAiB;EACjBC,SAAS;EACTC,WAAW;EACXC,WAAW;EACXC,YAAY;EACZC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ;EACAhB,SAAS,CAAC,MAAM;IACd,IAAIG,SAAS,KAAKF,WAAW,CAACgB,OAAO,EAAE;MACrCJ,WAAW,CAACK,OAAO,GAAGC,WAAW,CAAC,MAAM;QACtC,IAAIf,SAAS,CAACgB,CAAC,KAAK,CAAC,IAAIhB,SAAS,CAACiB,CAAC,KAAK,CAAC,EAAE;UAC1ChB,SAAS,CAACD,SAAS,CAAC;QACtB;MACF,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,MAAM;MACLkB,aAAa,CAACT,WAAW,CAACK,OAAO,CAAC;IACpC;IACA,OAAO,MAAMI,aAAa,CAACT,WAAW,CAACK,OAAO,CAAC;EACjD,CAAC,EAAE,CAACf,SAAS,EAAEC,SAAS,EAAEC,SAAS,EAAEQ,WAAW,CAAC,CAAC;;EAElD;EACAb,SAAS,CAAC,MAAM;IACd,IAAIG,SAAS,KAAKF,WAAW,CAACgB,OAAO,EAAE;MACrCF,YAAY,CAACG,OAAO,GAAGC,WAAW,CAAC,MAAM;QACvCb,UAAU,CAAC,CAAC;MACd,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACX,CAAC,MAAM;MACLgB,aAAa,CAACP,YAAY,CAACG,OAAO,CAAC;IACrC;IACA,OAAO,MAAMI,aAAa,CAACP,YAAY,CAACG,OAAO,CAAC;EAClD,CAAC,EAAE,CAACf,SAAS,EAAEG,UAAU,EAAES,YAAY,CAAC,CAAC;;EAEzC;EACAf,SAAS,CAAC,MAAM;IACd,IAAIG,SAAS,KAAKF,WAAW,CAACgB,OAAO,EAAE;MACrC,MAAMM,KAAK,GAAGJ,WAAW,CAAC,MAAMP,WAAW,CAACY,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;MAC9D,OAAO,MAAMF,aAAa,CAACC,KAAK,CAAC;IACnC;EACF,CAAC,EAAE,CAACpB,SAAS,EAAES,WAAW,CAAC,CAAC;;EAE5B;EACAZ,SAAS,CAAC,MAAM;IACd,IAAIO,SAAS,IAAIC,cAAc,GAAG,CAAC,EAAE;MACnCM,YAAY,CAACI,OAAO,GAAGO,UAAU,CAAC,MAAM;QACtCf,iBAAiB,CAACc,CAAC,IAAIA,CAAC,GAAG,GAAG,CAAC;MACjC,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,MAAM,IAAIjB,SAAS,IAAIC,cAAc,IAAI,CAAC,EAAE;MAC3CC,YAAY,CAAC,KAAK,CAAC;MACnBE,SAAS,CAACe,UAAU,IAClBA,UAAU,CAACC,GAAG,CAACC,KAAK,KAAK;QAAE,GAAGA,KAAK;QAAEC,IAAI,EAAE;MAAQ,CAAC,CAAC,CACvD,CAAC;IACH;IACA,OAAO,MAAMC,YAAY,CAAChB,YAAY,CAACI,OAAO,CAAC;EACjD,CAAC,EAAE,CAACX,SAAS,EAAEC,cAAc,EAAEC,YAAY,EAAEC,iBAAiB,EAAEC,SAAS,EAAEG,YAAY,CAAC,CAAC;AAC3F,CAAC;AAACE,EAAA,CA/DWd,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}