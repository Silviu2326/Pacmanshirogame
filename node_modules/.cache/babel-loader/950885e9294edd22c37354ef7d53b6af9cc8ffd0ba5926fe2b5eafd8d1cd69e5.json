{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\Downloads\\\\juego\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './App.css';\nimport protagonistaImg from './protagonista.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 20;\nconst CELL_SIZE = 30;\n\n// Configuraci√≥n de sonidos\nconst SOUNDS = {\n  DOT: 'üîä Chomp!',\n  POWER_PELLET: 'üîä Power Up!',\n  GHOST_EATEN: 'üîä Ghost Eaten!',\n  DEATH: 'üîä Oh no!',\n  LEVEL_COMPLETE: 'üîä Level Complete!',\n  GAME_START: 'üîä Game Start!'\n};\n\n// Laberinto mejorado\nconst MAZE = [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1], [1, 3, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 3, 1], [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1], [1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1], [1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1], [1, 1, 1, 1, 2, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 1], [0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0], [1, 1, 1, 1, 2, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 2, 1, 1, 1, 1], [0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0], [1, 1, 1, 1, 2, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 1], [0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0], [1, 1, 1, 1, 2, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 1], [1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1], [1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1], [1, 3, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 3, 1], [1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1], [1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1], [1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]];\n\n// Tipos de enemigos con diferentes comportamientos y personalidades\nconst GHOST_TYPES = {\n  BLINKY: {\n    emoji: 'üëª',\n    color: '#ff0000',\n    speed: 180,\n    name: 'Blinky',\n    personality: 'Agresivo - Te persigue directamente'\n  },\n  PINKY: {\n    emoji: 'üü£',\n    color: '#ffb8ff',\n    speed: 200,\n    name: 'Pinky',\n    personality: 'Estrat√©gico - Intenta emboscarte'\n  },\n  INKY: {\n    emoji: 'üîµ',\n    color: '#00ffff',\n    speed: 220,\n    name: 'Inky',\n    personality: 'Impredecible - Movimientos err√°ticos'\n  },\n  CLYDE: {\n    emoji: 'üü†',\n    color: '#ffb852',\n    speed: 240,\n    name: 'Clyde',\n    personality: 'T√≠mido - Huye cuando te acercas'\n  }\n};\n\n// Power-ups especiales\nconst POWER_UPS = {\n  SPEED_BOOST: {\n    emoji: '‚ö°',\n    points: 100,\n    duration: 5000\n  },\n  EXTRA_LIFE: {\n    emoji: 'üíñ',\n    points: 500,\n    effect: 'life'\n  },\n  DOUBLE_POINTS: {\n    emoji: 'üíé',\n    points: 200,\n    duration: 10000\n  },\n  FREEZE_GHOSTS: {\n    emoji: '‚ùÑÔ∏è',\n    points: 150,\n    duration: 3000\n  }\n};\n\n// Estados del juego\nconst GAME_STATES = {\n  READY: 'ready',\n  PLAYING: 'playing',\n  PAUSED: 'paused',\n  GAME_OVER: 'game_over',\n  LEVEL_COMPLETE: 'level_complete',\n  POWER_MODE: 'power_mode'\n};\nfunction App() {\n  _s();\n  const [shiroPosition, setShiroPosition] = useState({\n    x: 9,\n    y: 15\n  });\n  const [maze, setMaze] = useState(MAZE);\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(parseInt(localStorage.getItem('shiroNekoHighScore') || '0'));\n  const [lives, setLives] = useState(3);\n  const [level, setLevel] = useState(1);\n  const [gameState, setGameState] = useState(GAME_STATES.READY);\n  const [direction, setDirection] = useState({\n    x: 0,\n    y: 0\n  });\n  const [nextDirection, setNextDirection] = useState({\n    x: 0,\n    y: 0\n  });\n  const [powerMode, setPowerMode] = useState(false);\n  const [powerModeTimer, setPowerModeTimer] = useState(0);\n  const [speedBoost, setSpeedBoost] = useState(false);\n  const [doublePoints, setDoublePoints] = useState(false);\n  const [frozenGhosts, setFrozenGhosts] = useState(false);\n  const [combo, setCombo] = useState(0);\n  const [ghostsEaten, setGhostsEaten] = useState(0);\n  const [gameTime, setGameTime] = useState(0);\n  const [ghosts, setGhosts] = useState([{\n    id: 'blinky',\n    x: 9,\n    y: 9,\n    direction: {\n      x: 1,\n      y: 0\n    },\n    type: GHOST_TYPES.BLINKY,\n    mode: 'chase',\n    lastMove: Date.now()\n  }, {\n    id: 'pinky',\n    x: 10,\n    y: 9,\n    direction: {\n      x: -1,\n      y: 0\n    },\n    type: GHOST_TYPES.PINKY,\n    mode: 'chase',\n    lastMove: Date.now()\n  }, {\n    id: 'inky',\n    x: 9,\n    y: 10,\n    direction: {\n      x: 0,\n      y: 1\n    },\n    type: GHOST_TYPES.INKY,\n    mode: 'chase',\n    lastMove: Date.now()\n  }, {\n    id: 'clyde',\n    x: 10,\n    y: 10,\n    direction: {\n      x: 0,\n      y: -1\n    },\n    type: GHOST_TYPES.CLYDE,\n    mode: 'chase',\n    lastMove: Date.now()\n  }]);\n  const [totalDots, setTotalDots] = useState(0);\n  const [dotsEaten, setDotsEaten] = useState(0);\n  const [powerUps, setPowerUps] = useState([]);\n  const [particles, setParticles] = useState([]);\n  const [showStats, setShowStats] = useState(false);\n  const gameLoopRef = useRef();\n  const powerModeRef = useRef();\n  const gameTimeRef = useRef();\n\n  // Inicializar el juego\n  useEffect(() => {\n    const dots = MAZE.flat().filter(cell => cell === 2 || cell === 3).length;\n    setTotalDots(dots);\n  }, []);\n\n  // Funci√≥n para reproducir sonidos y mostrar notificaciones\n  const playSound = useCallback(soundType => {\n    console.log(SOUNDS[soundType] || `üîä ${soundType}`);\n\n    // Crear part√≠cula de sonido visual\n    const particle = {\n      id: Date.now() + Math.random(),\n      x: shiroPosition.x,\n      y: shiroPosition.y,\n      text: SOUNDS[soundType] || soundType,\n      type: 'sound',\n      life: 1000\n    };\n    setParticles(prev => [...prev, particle]);\n  }, [shiroPosition]);\n\n  // Generar power-ups aleatoriamente\n  const generatePowerUp = useCallback(() => {\n    if (Math.random() < 0.1 && powerUps.length < 2) {\n      // 10% de probabilidad\n      const powerUpTypes = Object.keys(POWER_UPS);\n      const randomType = powerUpTypes[Math.floor(Math.random() * powerUpTypes.length)];\n\n      // Encontrar posici√≥n vac√≠a\n      let x, y;\n      do {\n        x = Math.floor(Math.random() * GRID_SIZE);\n        y = Math.floor(Math.random() * GRID_SIZE);\n      } while (maze[y][x] !== 0 || x === shiroPosition.x && y === shiroPosition.y);\n      const newPowerUp = {\n        id: Date.now(),\n        x,\n        y,\n        type: randomType,\n        ...POWER_UPS[randomType]\n      };\n      setPowerUps(prev => [...prev, newPowerUp]);\n    }\n  }, [maze, shiroPosition, powerUps.length]);\n\n  // Actualizar part√≠culas\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setParticles(prev => prev.filter(particle => {\n        particle.life -= 50;\n        return particle.life > 0;\n      }));\n    }, 50);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Timer del juego\n  useEffect(() => {\n    if (gameState === GAME_STATES.PLAYING) {\n      gameTimeRef.current = setInterval(() => {\n        setGameTime(t => t + 1);\n      }, 1000);\n    } else {\n      clearInterval(gameTimeRef.current);\n    }\n    return () => clearInterval(gameTimeRef.current);\n  }, [gameState]);\n\n  // Verificar colisiones con fantasmas\n  const checkGhostCollision = useCallback(position => {\n    return ghosts.some(ghost => ghost.x === position.x && ghost.y === position.y);\n  }, [ghosts]);\n\n  // Mover Shiro Neko\n  const moveShiro = useCallback(newDirection => {\n    if (gameState !== GAME_STATES.PLAYING) return;\n    setShiroPosition(prev => {\n      const newX = prev.x + newDirection.x;\n      const newY = prev.y + newDirection.y;\n\n      // Verificar l√≠mites y paredes\n      if (newX < 0 || newX >= GRID_SIZE || newY < 0 || newY >= GRID_SIZE) {\n        return prev;\n      }\n      if (maze[newY][newX] === 1) {\n        return prev;\n      }\n      const newPosition = {\n        x: newX,\n        y: newY\n      };\n\n      // Verificar colisi√≥n con power-ups\n      const powerUpAtPosition = powerUps.find(powerUp => powerUp.x === newX && powerUp.y === newY);\n      if (powerUpAtPosition) {\n        const points = doublePoints ? powerUpAtPosition.points * 2 : powerUpAtPosition.points;\n        setScore(s => s + points);\n\n        // Aplicar efecto del power-up\n        switch (powerUpAtPosition.type) {\n          case 'SPEED_BOOST':\n            setSpeedBoost(true);\n            setTimeout(() => setSpeedBoost(false), powerUpAtPosition.duration);\n            break;\n          case 'EXTRA_LIFE':\n            setLives(l => l + 1);\n            break;\n          case 'DOUBLE_POINTS':\n            setDoublePoints(true);\n            setTimeout(() => setDoublePoints(false), powerUpAtPosition.duration);\n            break;\n          case 'FREEZE_GHOSTS':\n            setFrozenGhosts(true);\n            setTimeout(() => setFrozenGhosts(false), powerUpAtPosition.duration);\n            break;\n        }\n\n        // Remover power-up\n        setPowerUps(prev => prev.filter(p => p.id !== powerUpAtPosition.id));\n\n        // Crear part√≠cula de efecto\n        const particle = {\n          id: Date.now() + Math.random(),\n          x: newX,\n          y: newY,\n          text: `+${points}`,\n          type: 'points',\n          life: 1500\n        };\n        setParticles(prev => [...prev, particle]);\n      }\n\n      // Verificar colisi√≥n con fantasmas\n      if (checkGhostCollision(newPosition)) {\n        if (powerMode) {\n          // Comer fantasma\n          playSound('GHOST_EATEN');\n          const ghostPoints = 200 * (combo + 1);\n          setScore(s => s + (doublePoints ? ghostPoints * 2 : ghostPoints));\n          setCombo(c => c + 1);\n          setGhostsEaten(g => g + 1);\n\n          // Resetear fantasma comido\n          setGhosts(prevGhosts => prevGhosts.map(ghost => ghost.x === newX && ghost.y === newY ? {\n            ...ghost,\n            x: 9,\n            y: 9,\n            mode: 'frightened'\n          } : ghost));\n\n          // Crear part√≠cula de combo\n          const particle = {\n            id: Date.now() + Math.random(),\n            x: newX,\n            y: newY,\n            text: `COMBO x${combo + 1}!`,\n            type: 'combo',\n            life: 2000\n          };\n          setParticles(prev => [...prev, particle]);\n        } else {\n          // Perder vida\n          playSound('DEATH');\n          setLives(l => l - 1);\n          setCombo(0); // Reset combo\n\n          if (lives <= 1) {\n            // Actualizar high score\n            if (score > highScore) {\n              setHighScore(score);\n              localStorage.setItem('shiroNekoHighScore', score.toString());\n            }\n            setGameState(GAME_STATES.GAME_OVER);\n          } else {\n            // Resetear posiciones\n            setShiroPosition({\n              x: 9,\n              y: 15\n            });\n            setGhosts([{\n              id: 'blinky',\n              x: 9,\n              y: 9,\n              direction: {\n                x: 1,\n                y: 0\n              },\n              type: GHOST_TYPES.BLINKY,\n              mode: 'chase',\n              lastMove: Date.now()\n            }, {\n              id: 'pinky',\n              x: 10,\n              y: 9,\n              direction: {\n                x: -1,\n                y: 0\n              },\n              type: GHOST_TYPES.PINKY,\n              mode: 'chase',\n              lastMove: Date.now()\n            }, {\n              id: 'inky',\n              x: 9,\n              y: 10,\n              direction: {\n                x: 0,\n                y: 1\n              },\n              type: GHOST_TYPES.INKY,\n              mode: 'chase',\n              lastMove: Date.now()\n            }, {\n              id: 'clyde',\n              x: 10,\n              y: 10,\n              direction: {\n                x: 0,\n                y: -1\n              },\n              type: GHOST_TYPES.CLYDE,\n              mode: 'chase',\n              lastMove: Date.now()\n            }]);\n          }\n          return prev;\n        }\n      }\n\n      // Comer comida\n      if (maze[newY][newX] === 2 || maze[newY][newX] === 3) {\n        const isPowerPellet = maze[newY][newX] === 3;\n        let points = isPowerPellet ? 50 : 10;\n        if (doublePoints) points *= 2;\n        playSound(isPowerPellet ? 'POWER_PELLET' : 'DOT');\n        setScore(s => s + points);\n        setDotsEaten(d => d + 1);\n\n        // Generar power-up ocasionalmente\n        generatePowerUp();\n        if (isPowerPellet) {\n          setPowerMode(true);\n          setPowerModeTimer(8000); // 8 segundos\n          setCombo(0); // Reset combo para nuevo power mode\n          setGhosts(prevGhosts => prevGhosts.map(ghost => ({\n            ...ghost,\n            mode: 'frightened'\n          })));\n        }\n        setMaze(prevMaze => {\n          const newMaze = [...prevMaze];\n          newMaze[newY] = [...newMaze[newY]];\n          newMaze[newY][newX] = 0;\n          return newMaze;\n        });\n\n        // Verificar si se complet√≥ el nivel\n        if (dotsEaten + 1 >= totalDots) {\n          setLevel(l => l + 1);\n          setGameState(GAME_STATES.LEVEL_COMPLETE);\n          playSound('LEVEL_COMPLETE');\n\n          // Bonus por completar nivel\n          const levelBonus = level * 1000;\n          setScore(s => s + levelBonus);\n\n          // Resetear para siguiente nivel\n          setTimeout(() => {\n            setMaze(MAZE);\n            setDotsEaten(0);\n            setShiroPosition({\n              x: 9,\n              y: 15\n            });\n            setPowerUps([]);\n            setGameState(GAME_STATES.READY);\n          }, 3000);\n        }\n      }\n      return newPosition;\n    });\n  }, [gameState, maze, ghosts, powerMode, lives, checkGhostCollision, playSound, dotsEaten, totalDots, powerUps, doublePoints, combo, score, highScore, level, generatePowerUp]);\n\n  // Mover fantasmas con IA mejorada\n  const moveGhosts = useCallback(() => {\n    if (gameState !== GAME_STATES.PLAYING || frozenGhosts) return;\n    setGhosts(prevGhosts => prevGhosts.map(ghost => {\n      // Verificar si es tiempo de mover este fantasma (diferentes velocidades)\n      const now = Date.now();\n      if (now - ghost.lastMove < ghost.type.speed) {\n        return ghost;\n      }\n      const possibleMoves = [{\n        x: 0,\n        y: -1\n      },\n      // Arriba\n      {\n        x: 0,\n        y: 1\n      },\n      // Abajo\n      {\n        x: -1,\n        y: 0\n      },\n      // Izquierda\n      {\n        x: 1,\n        y: 0\n      } // Derecha\n      ].filter(move => {\n        const newX = ghost.x + move.x;\n        const newY = ghost.y + move.y;\n        return newX >= 0 && newX < GRID_SIZE && newY >= 0 && newY < GRID_SIZE && maze[newY][newX] !== 1;\n      });\n      if (possibleMoves.length === 0) return ghost;\n      let nextMove;\n      if (ghost.mode === 'frightened') {\n        // Movimiento aleatorio cuando est√°n asustados (huyen)\n        const awayMoves = possibleMoves.map(move => {\n          const newX = ghost.x + move.x;\n          const newY = ghost.y + move.y;\n          return {\n            move,\n            distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\n          };\n        });\n\n        // Elegir el movimiento que los aleje m√°s de Shiro\n        nextMove = awayMoves.reduce((farthest, current) => current.distance > farthest.distance ? current : farthest).move;\n      } else {\n        // IA espec√≠fica por tipo de fantasma\n        switch (ghost.id) {\n          case 'blinky':\n            // Agresivo - persigue directamente\n            const directMoves = possibleMoves.map(move => {\n              const newX = ghost.x + move.x;\n              const newY = ghost.y + move.y;\n              return {\n                move,\n                distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\n              };\n            });\n            nextMove = directMoves.reduce((closest, current) => current.distance < closest.distance ? current : closest).move;\n            break;\n          case 'pinky':\n            // Estrat√©gico - intenta emboscar\n            const targetX = shiroPosition.x + direction.x * 4;\n            const targetY = shiroPosition.y + direction.y * 4;\n            const ambushMoves = possibleMoves.map(move => {\n              const newX = ghost.x + move.x;\n              const newY = ghost.y + move.y;\n              return {\n                move,\n                distance: Math.abs(newX - targetX) + Math.abs(newY - targetY)\n              };\n            });\n            nextMove = ambushMoves.reduce((closest, current) => current.distance < closest.distance ? current : closest).move;\n            break;\n          case 'inky':\n            // Impredecible\n            if (Math.random() < 0.3) {\n              nextMove = possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\n            } else {\n              const inkyMoves = possibleMoves.map(move => {\n                const newX = ghost.x + move.x;\n                const newY = ghost.y + move.y;\n                return {\n                  move,\n                  distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\n                };\n              });\n              nextMove = inkyMoves.reduce((closest, current) => current.distance < closest.distance ? current : closest).move;\n            }\n            break;\n          case 'clyde':\n            // T√≠mido - huye si est√° muy cerca\n            const distanceToShiro = Math.abs(ghost.x - shiroPosition.x) + Math.abs(ghost.y - shiroPosition.y);\n            if (distanceToShiro < 8) {\n              // Huir si est√° muy cerca\n              const escapeMoves = possibleMoves.map(move => {\n                const newX = ghost.x + move.x;\n                const newY = ghost.y + move.y;\n                return {\n                  move,\n                  distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\n                };\n              });\n              nextMove = escapeMoves.reduce((farthest, current) => current.distance > farthest.distance ? current : farthest).move;\n            } else {\n              // Perseguir si est√° lejos\n              const chaseMoves = possibleMoves.map(move => {\n                const newX = ghost.x + move.x;\n                const newY = ghost.y + move.y;\n                return {\n                  move,\n                  distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\n                };\n              });\n              nextMove = chaseMoves.reduce((closest, current) => current.distance < closest.distance ? current : closest).move;\n            }\n            break;\n          default:\n            nextMove = possibleMoves[0];\n        }\n      }\n      return {\n        ...ghost,\n        x: ghost.x + nextMove.x,\n        y: ghost.y + nextMove.y,\n        direction: nextMove,\n        lastMove: now\n      };\n    }));\n  }, [gameState, maze, shiroPosition, direction, frozenGhosts]);\n\n  // Controles del teclado\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (!e || !e.key) return;\n      e.preventDefault();\n      switch (e.key) {\n        case 'ArrowUp':\n          setDirection({\n            x: 0,\n            y: -1\n          });\n          break;\n        case 'ArrowDown':\n          setDirection({\n            x: 0,\n            y: 1\n          });\n          break;\n        case 'ArrowLeft':\n          setDirection({\n            x: -1,\n            y: 0\n          });\n          break;\n        case 'ArrowRight':\n          setDirection({\n            x: 1,\n            y: 0\n          });\n          break;\n        case ' ':\n          if (gameState === GAME_STATES.READY) {\n            setGameState(GAME_STATES.PLAYING);\n          } else if (gameState === GAME_STATES.PLAYING) {\n            setGameState(GAME_STATES.PAUSED);\n          } else if (gameState === GAME_STATES.PAUSED) {\n            setGameState(GAME_STATES.PLAYING);\n          }\n          break;\n        case 'r':\n          if (gameState === GAME_STATES.GAME_OVER) {\n            // Reiniciar juego\n            setShiroPosition({\n              x: 9,\n              y: 15\n            });\n            setMaze(MAZE);\n            setScore(0);\n            setLives(3);\n            setLevel(1);\n            setGameState(GAME_STATES.READY);\n            setDirection({\n              x: 0,\n              y: 0\n            });\n            setNextDirection({\n              x: 0,\n              y: 0\n            });\n            setPowerMode(false);\n            setPowerModeTimer(0);\n            setSpeedBoost(false);\n            setDoublePoints(false);\n            setFrozenGhosts(false);\n            setCombo(0);\n            setGhostsEaten(0);\n            setGameTime(0);\n            setDotsEaten(0);\n            setPowerUps([]);\n            setParticles([]);\n            setGhosts([{\n              id: 'blinky',\n              x: 9,\n              y: 9,\n              direction: {\n                x: 1,\n                y: 0\n              },\n              type: GHOST_TYPES.BLINKY,\n              mode: 'chase',\n              lastMove: Date.now()\n            }, {\n              id: 'pinky',\n              x: 10,\n              y: 9,\n              direction: {\n                x: -1,\n                y: 0\n              },\n              type: GHOST_TYPES.PINKY,\n              mode: 'chase',\n              lastMove: Date.now()\n            }, {\n              id: 'inky',\n              x: 9,\n              y: 10,\n              direction: {\n                x: 0,\n                y: 1\n              },\n              type: GHOST_TYPES.INKY,\n              mode: 'chase',\n              lastMove: Date.now()\n            }, {\n              id: 'clyde',\n              x: 10,\n              y: 10,\n              direction: {\n                x: 0,\n                y: -1\n              },\n              type: GHOST_TYPES.CLYDE,\n              mode: 'chase',\n              lastMove: Date.now()\n            }]);\n          }\n          break;\n        case 's':\n          setShowStats(!showStats);\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [gameState]);\n\n  // Game loop principal\n  useEffect(() => {\n    if (gameState === GAME_STATES.PLAYING) {\n      const speed = speedBoost ? 100 : 150; // M√°s r√°pido con speed boost\n      gameLoopRef.current = setInterval(() => {\n        if (direction.x !== 0 || direction.y !== 0) {\n          moveShiro(direction);\n        }\n        moveGhosts();\n      }, speed);\n    } else {\n      clearInterval(gameLoopRef.current);\n    }\n    return () => clearInterval(gameLoopRef.current);\n  }, [gameState, direction, moveShiro, moveGhosts, speedBoost]);\n\n  // Power mode timer\n  useEffect(() => {\n    if (powerMode && powerModeTimer > 0) {\n      powerModeRef.current = setTimeout(() => {\n        setPowerModeTimer(t => t - 100);\n      }, 100);\n    } else if (powerMode && powerModeTimer <= 0) {\n      setPowerMode(false);\n      setGhosts(prevGhosts => prevGhosts.map(ghost => ({\n        ...ghost,\n        mode: 'chase'\n      })));\n    }\n    return () => clearTimeout(powerModeRef.current);\n  }, [powerMode, powerModeTimer]);\n  const renderCell = (cell, x, y) => {\n    let className = 'cell';\n    let content = '';\n    if (cell === 1) {\n      className += ' wall';\n    } else if (cell === 2) {\n      content = '¬∑';\n    } else if (cell === 3) {\n      content = '‚óè';\n      className += ' power-pellet';\n    }\n\n    // Renderizar Shiro Neko con imagen personalizada\n    if (shiroPosition.x === x && shiroPosition.y === y) {\n      content = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: protagonistaImg,\n        alt: \"Shiro Neko\",\n        className: \"protagonist-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 17\n      }, this);\n      className += ' shiro';\n      if (powerMode) className += ' power-mode';\n      if (speedBoost) className += ' speed-boost';\n    }\n\n    // Renderizar power-ups\n    const powerUpAtPosition = powerUps.find(powerUp => powerUp.x === x && powerUp.y === y);\n    if (powerUpAtPosition && !(shiroPosition.x === x && shiroPosition.y === y)) {\n      content = powerUpAtPosition.emoji;\n      className += ' power-up';\n    }\n\n    // Renderizar fantasmas\n    const ghostAtPosition = ghosts.find(ghost => ghost.x === x && ghost.y === y);\n    if (ghostAtPosition && !(shiroPosition.x === x && shiroPosition.y === y)) {\n      content = ghostAtPosition.type.emoji;\n      className += ` ghost ${ghostAtPosition.mode}`;\n      if (ghostAtPosition.mode === 'frightened') {\n        className += ' frightened';\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: content\n    }, `${x}-${y}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 7\n    }, this);\n  };\n  const getGameStateMessage = () => {\n    switch (gameState) {\n      case GAME_STATES.READY:\n        return \"¬°Presiona ESPACIO para comenzar!\";\n      case GAME_STATES.PAUSED:\n        return \"PAUSADO - Presiona ESPACIO para continuar\";\n      case GAME_STATES.GAME_OVER:\n        return \"GAME OVER - Presiona R para reiniciar\";\n      case GAME_STATES.LEVEL_COMPLETE:\n        return \"¬°NIVEL COMPLETADO! Preparando siguiente nivel...\";\n      default:\n        return \"\";\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDC31 Shiro Neko Pacman \\uD83D\\uDC31\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score\",\n          children: [\"Puntuaci\\xF3n: \", score.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"high-score\",\n          children: [\"R\\xE9cord: \", highScore.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lives\",\n          children: [\"Vidas: \", '‚ù§Ô∏è'.repeat(lives)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"level\",\n          children: [\"Nivel: \", level]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time\",\n          children: [\"Tiempo: \", formatTime(gameTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 11\n        }, this), combo > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"combo\",\n          children: [\"Combo: x\", combo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"power-ups-status\",\n        children: [powerMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"power-timer\",\n          children: [\"\\uD83C\\uDF1F Power Mode: \", Math.ceil(powerModeTimer / 1000), \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 13\n        }, this), speedBoost && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-effect\",\n          children: \"\\u26A1 Speed Boost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 26\n        }, this), doublePoints && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-effect\",\n          children: \"\\uD83D\\uDC8E Double Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 28\n        }, this), frozenGhosts && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-effect\",\n          children: \"\\u2744\\uFE0F Frozen Ghosts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-state-message\",\n        children: getGameStateMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uD83C\\uDFAE Flechas: Mover | ESPACIO: Pausa | R: Reiniciar | S: Estad\\xEDsticas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Come todos los puntos, power-ups y evita los fantasmas!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 11\n        }, this), powerMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"power-info\",\n          children: \"\\xA1MODO PODER ACTIVO! \\xA1Come fantasmas para combos!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: [maze.map((row, y) => row.map((cell, x) => renderCell(cell, x, y))), particles.map(particle => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `particle ${particle.type}`,\n          style: {\n            left: `${particle.x * CELL_SIZE + 15}px`,\n            top: `${particle.y * CELL_SIZE + 15}px`,\n            opacity: particle.life / 1000\n          },\n          children: particle.text\n        }, particle.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 9\n      }, this), showStats && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCCA Estad\\xEDsticas del Juego\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [\"Puntos comidos: \", dotsEaten, \"/\", totalDots]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [\"Fantasmas comidos: \", ghostsEaten]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [\"Mejor combo: \", combo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [\"Tiempo jugado: \", formatTime(gameTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [\"Puntos por minuto: \", gameTime > 0 ? Math.round(score / (gameTime / 60)) : 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ghost-info\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ghost-legend\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ghost-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uD83D\\uDC7B \", GHOST_TYPES.BLINKY.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: GHOST_TYPES.BLINKY.personality\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ghost-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uD83D\\uDFE3 \", GHOST_TYPES.PINKY.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: GHOST_TYPES.PINKY.personality\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 759,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ghost-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uD83D\\uDD35 \", GHOST_TYPES.INKY.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 762,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: GHOST_TYPES.INKY.personality\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ghost-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uD83D\\uDFE0 \", GHOST_TYPES.CLYDE.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: GHOST_TYPES.CLYDE.personality\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"power-ups-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Power-ups Disponibles:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"power-up-legend\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u26A1 Speed Boost (+100pts)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 775,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDC96 Vida Extra (+500pts)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDC8E Puntos Dobles (+200pts)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u2744\\uFE0F Congelar Fantasmas (+150pts)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 682,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NpikzHYtmWU5+kBz6EErJdKM7NM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","protagonistaImg","jsxDEV","_jsxDEV","GRID_SIZE","CELL_SIZE","SOUNDS","DOT","POWER_PELLET","GHOST_EATEN","DEATH","LEVEL_COMPLETE","GAME_START","MAZE","GHOST_TYPES","BLINKY","emoji","color","speed","name","personality","PINKY","INKY","CLYDE","POWER_UPS","SPEED_BOOST","points","duration","EXTRA_LIFE","effect","DOUBLE_POINTS","FREEZE_GHOSTS","GAME_STATES","READY","PLAYING","PAUSED","GAME_OVER","POWER_MODE","App","_s","shiroPosition","setShiroPosition","x","y","maze","setMaze","score","setScore","highScore","setHighScore","parseInt","localStorage","getItem","lives","setLives","level","setLevel","gameState","setGameState","direction","setDirection","nextDirection","setNextDirection","powerMode","setPowerMode","powerModeTimer","setPowerModeTimer","speedBoost","setSpeedBoost","doublePoints","setDoublePoints","frozenGhosts","setFrozenGhosts","combo","setCombo","ghostsEaten","setGhostsEaten","gameTime","setGameTime","ghosts","setGhosts","id","type","mode","lastMove","Date","now","totalDots","setTotalDots","dotsEaten","setDotsEaten","powerUps","setPowerUps","particles","setParticles","showStats","setShowStats","gameLoopRef","powerModeRef","gameTimeRef","dots","flat","filter","cell","length","playSound","soundType","console","log","particle","Math","random","text","life","prev","generatePowerUp","powerUpTypes","Object","keys","randomType","floor","newPowerUp","interval","setInterval","clearInterval","current","t","checkGhostCollision","position","some","ghost","moveShiro","newDirection","newX","newY","newPosition","powerUpAtPosition","find","powerUp","s","setTimeout","l","p","ghostPoints","c","g","prevGhosts","map","setItem","toString","isPowerPellet","d","prevMaze","newMaze","levelBonus","moveGhosts","possibleMoves","move","nextMove","awayMoves","distance","abs","reduce","farthest","directMoves","closest","targetX","targetY","ambushMoves","inkyMoves","distanceToShiro","escapeMoves","chaseMoves","handleKeyPress","e","key","preventDefault","window","addEventListener","removeEventListener","clearTimeout","renderCell","className","content","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ghostAtPosition","children","getGameStateMessage","formatTime","seconds","mins","secs","padStart","toLocaleString","repeat","ceil","row","style","left","top","opacity","round","_c","$RefreshReg$"],"sources":["C:/Users/usuario/Downloads/juego/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport './App.css';\r\nimport protagonistaImg from './protagonista.png';\r\n\r\nconst GRID_SIZE = 20;\r\nconst CELL_SIZE = 30;\r\n\r\n// Configuraci√≥n de sonidos\r\nconst SOUNDS = {\r\n  DOT: 'üîä Chomp!',\r\n  POWER_PELLET: 'üîä Power Up!',\r\n  GHOST_EATEN: 'üîä Ghost Eaten!',\r\n  DEATH: 'üîä Oh no!',\r\n  LEVEL_COMPLETE: 'üîä Level Complete!',\r\n  GAME_START: 'üîä Game Start!'\r\n};\r\n\r\n// Laberinto mejorado\r\nconst MAZE = [\r\n  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\r\n  [1,2,2,2,2,2,2,2,2,1,1,2,2,2,2,2,2,2,2,1],\r\n  [1,3,1,1,2,1,1,1,2,1,1,2,1,1,1,2,1,1,3,1],\r\n  [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],\r\n  [1,2,1,1,2,1,2,1,1,1,1,1,1,2,1,2,1,1,2,1],\r\n  [1,2,2,2,2,1,2,2,2,1,1,2,2,2,1,2,2,2,2,1],\r\n  [1,1,1,1,2,1,1,1,0,1,1,0,1,1,1,2,1,1,1,1],\r\n  [0,0,0,1,2,1,0,0,0,0,0,0,0,0,1,2,1,0,0,0],\r\n  [1,1,1,1,2,1,0,1,1,0,0,1,1,0,1,2,1,1,1,1],\r\n  [0,0,0,0,2,0,0,1,0,0,0,0,1,0,0,2,0,0,0,0],\r\n  [1,1,1,1,2,1,0,1,1,1,1,1,1,0,1,2,1,1,1,1],\r\n  [0,0,0,1,2,1,0,0,0,0,0,0,0,0,1,2,1,0,0,0],\r\n  [1,1,1,1,2,1,1,1,0,1,1,0,1,1,1,2,1,1,1,1],\r\n  [1,2,2,2,2,2,2,2,2,1,1,2,2,2,2,2,2,2,2,1],\r\n  [1,2,1,1,2,1,1,1,2,1,1,2,1,1,1,2,1,1,2,1],\r\n  [1,3,2,1,2,2,2,2,2,2,2,2,2,2,2,2,1,2,3,1],\r\n  [1,1,2,1,2,1,2,1,1,1,1,1,1,2,1,2,1,2,1,1],\r\n  [1,2,2,2,2,1,2,2,2,1,1,2,2,2,1,2,2,2,2,1],\r\n  [1,2,1,1,1,1,1,1,2,1,1,2,1,1,1,1,1,1,2,1],\r\n  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]\r\n];\r\n\r\n// Tipos de enemigos con diferentes comportamientos y personalidades\r\nconst GHOST_TYPES = {\r\n  BLINKY: { \r\n    emoji: 'üëª', \r\n    color: '#ff0000', \r\n    speed: 180, \r\n    name: 'Blinky',\r\n    personality: 'Agresivo - Te persigue directamente'\r\n  },\r\n  PINKY: { \r\n    emoji: 'üü£', \r\n    color: '#ffb8ff', \r\n    speed: 200, \r\n    name: 'Pinky',\r\n    personality: 'Estrat√©gico - Intenta emboscarte'\r\n  },\r\n  INKY: { \r\n    emoji: 'üîµ', \r\n    color: '#00ffff', \r\n    speed: 220, \r\n    name: 'Inky',\r\n    personality: 'Impredecible - Movimientos err√°ticos'\r\n  },\r\n  CLYDE: { \r\n    emoji: 'üü†', \r\n    color: '#ffb852', \r\n    speed: 240, \r\n    name: 'Clyde',\r\n    personality: 'T√≠mido - Huye cuando te acercas'\r\n  }\r\n};\r\n\r\n// Power-ups especiales\r\nconst POWER_UPS = {\r\n  SPEED_BOOST: { emoji: '‚ö°', points: 100, duration: 5000 },\r\n  EXTRA_LIFE: { emoji: 'üíñ', points: 500, effect: 'life' },\r\n  DOUBLE_POINTS: { emoji: 'üíé', points: 200, duration: 10000 },\r\n  FREEZE_GHOSTS: { emoji: '‚ùÑÔ∏è', points: 150, duration: 3000 }\r\n};\r\n\r\n// Estados del juego\r\nconst GAME_STATES = {\r\n  READY: 'ready',\r\n  PLAYING: 'playing',\r\n  PAUSED: 'paused',\r\n  GAME_OVER: 'game_over',\r\n  LEVEL_COMPLETE: 'level_complete',\r\n  POWER_MODE: 'power_mode'\r\n};\r\n\r\nfunction App() {\r\n  const [shiroPosition, setShiroPosition] = useState({ x: 9, y: 15 });\r\n  const [maze, setMaze] = useState(MAZE);\r\n  const [score, setScore] = useState(0);\r\n  const [highScore, setHighScore] = useState(parseInt(localStorage.getItem('shiroNekoHighScore') || '0'));\r\n  const [lives, setLives] = useState(3);\r\n  const [level, setLevel] = useState(1);\r\n  const [gameState, setGameState] = useState(GAME_STATES.READY);\r\n  const [direction, setDirection] = useState({ x: 0, y: 0 });\r\n  const [nextDirection, setNextDirection] = useState({ x: 0, y: 0 });\r\n  const [powerMode, setPowerMode] = useState(false);\r\n  const [powerModeTimer, setPowerModeTimer] = useState(0);\r\n  const [speedBoost, setSpeedBoost] = useState(false);\r\n  const [doublePoints, setDoublePoints] = useState(false);\r\n  const [frozenGhosts, setFrozenGhosts] = useState(false);\r\n  const [combo, setCombo] = useState(0);\r\n  const [ghostsEaten, setGhostsEaten] = useState(0);\r\n  const [gameTime, setGameTime] = useState(0);\r\n  const [ghosts, setGhosts] = useState([\r\n    { id: 'blinky', x: 9, y: 9, direction: { x: 1, y: 0 }, type: GHOST_TYPES.BLINKY, mode: 'chase', lastMove: Date.now() },\r\n    { id: 'pinky', x: 10, y: 9, direction: { x: -1, y: 0 }, type: GHOST_TYPES.PINKY, mode: 'chase', lastMove: Date.now() },\r\n    { id: 'inky', x: 9, y: 10, direction: { x: 0, y: 1 }, type: GHOST_TYPES.INKY, mode: 'chase', lastMove: Date.now() },\r\n    { id: 'clyde', x: 10, y: 10, direction: { x: 0, y: -1 }, type: GHOST_TYPES.CLYDE, mode: 'chase', lastMove: Date.now() }\r\n  ]);\r\n  const [totalDots, setTotalDots] = useState(0);\r\n  const [dotsEaten, setDotsEaten] = useState(0);\r\n  const [powerUps, setPowerUps] = useState([]);\r\n  const [particles, setParticles] = useState([]);\r\n  const [showStats, setShowStats] = useState(false);\r\n  const gameLoopRef = useRef();\r\n  const powerModeRef = useRef();\r\n  const gameTimeRef = useRef();\r\n\r\n  // Inicializar el juego\r\n  useEffect(() => {\r\n    const dots = MAZE.flat().filter(cell => cell === 2 || cell === 3).length;\r\n    setTotalDots(dots);\r\n  }, []);\r\n\r\n  // Funci√≥n para reproducir sonidos y mostrar notificaciones\r\n  const playSound = useCallback((soundType) => {\r\n    console.log(SOUNDS[soundType] || `üîä ${soundType}`);\r\n    \r\n    // Crear part√≠cula de sonido visual\r\n    const particle = {\r\n      id: Date.now() + Math.random(),\r\n      x: shiroPosition.x,\r\n      y: shiroPosition.y,\r\n      text: SOUNDS[soundType] || soundType,\r\n      type: 'sound',\r\n      life: 1000\r\n    };\r\n    setParticles(prev => [...prev, particle]);\r\n  }, [shiroPosition]);\r\n\r\n  // Generar power-ups aleatoriamente\r\n  const generatePowerUp = useCallback(() => {\r\n    if (Math.random() < 0.1 && powerUps.length < 2) { // 10% de probabilidad\r\n      const powerUpTypes = Object.keys(POWER_UPS);\r\n      const randomType = powerUpTypes[Math.floor(Math.random() * powerUpTypes.length)];\r\n      \r\n      // Encontrar posici√≥n vac√≠a\r\n      let x, y;\r\n      do {\r\n        x = Math.floor(Math.random() * GRID_SIZE);\r\n        y = Math.floor(Math.random() * GRID_SIZE);\r\n      } while (maze[y][x] !== 0 || (x === shiroPosition.x && y === shiroPosition.y));\r\n      \r\n      const newPowerUp = {\r\n        id: Date.now(),\r\n        x, y,\r\n        type: randomType,\r\n        ...POWER_UPS[randomType]\r\n      };\r\n      \r\n      setPowerUps(prev => [...prev, newPowerUp]);\r\n    }\r\n  }, [maze, shiroPosition, powerUps.length]);\r\n\r\n  // Actualizar part√≠culas\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setParticles(prev => prev.filter(particle => {\r\n        particle.life -= 50;\r\n        return particle.life > 0;\r\n      }));\r\n    }, 50);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Timer del juego\r\n  useEffect(() => {\r\n    if (gameState === GAME_STATES.PLAYING) {\r\n      gameTimeRef.current = setInterval(() => {\r\n        setGameTime(t => t + 1);\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(gameTimeRef.current);\r\n    }\r\n    \r\n    return () => clearInterval(gameTimeRef.current);\r\n  }, [gameState]);\r\n\r\n  // Verificar colisiones con fantasmas\r\n  const checkGhostCollision = useCallback((position) => {\r\n    return ghosts.some(ghost => ghost.x === position.x && ghost.y === position.y);\r\n  }, [ghosts]);\r\n\r\n  // Mover Shiro Neko\r\n  const moveShiro = useCallback((newDirection) => {\r\n    if (gameState !== GAME_STATES.PLAYING) return;\r\n    \r\n    setShiroPosition(prev => {\r\n      const newX = prev.x + newDirection.x;\r\n      const newY = prev.y + newDirection.y;\r\n      \r\n      // Verificar l√≠mites y paredes\r\n      if (newX < 0 || newX >= GRID_SIZE || newY < 0 || newY >= GRID_SIZE) {\r\n        return prev;\r\n      }\r\n      \r\n      if (maze[newY][newX] === 1) {\r\n        return prev;\r\n      }\r\n      \r\n      const newPosition = { x: newX, y: newY };\r\n      \r\n      // Verificar colisi√≥n con power-ups\r\n      const powerUpAtPosition = powerUps.find(powerUp => powerUp.x === newX && powerUp.y === newY);\r\n      if (powerUpAtPosition) {\r\n        const points = doublePoints ? powerUpAtPosition.points * 2 : powerUpAtPosition.points;\r\n        setScore(s => s + points);\r\n        \r\n        // Aplicar efecto del power-up\r\n        switch(powerUpAtPosition.type) {\r\n          case 'SPEED_BOOST':\r\n            setSpeedBoost(true);\r\n            setTimeout(() => setSpeedBoost(false), powerUpAtPosition.duration);\r\n            break;\r\n          case 'EXTRA_LIFE':\r\n            setLives(l => l + 1);\r\n            break;\r\n          case 'DOUBLE_POINTS':\r\n            setDoublePoints(true);\r\n            setTimeout(() => setDoublePoints(false), powerUpAtPosition.duration);\r\n            break;\r\n          case 'FREEZE_GHOSTS':\r\n            setFrozenGhosts(true);\r\n            setTimeout(() => setFrozenGhosts(false), powerUpAtPosition.duration);\r\n            break;\r\n        }\r\n        \r\n        // Remover power-up\r\n        setPowerUps(prev => prev.filter(p => p.id !== powerUpAtPosition.id));\r\n        \r\n        // Crear part√≠cula de efecto\r\n        const particle = {\r\n          id: Date.now() + Math.random(),\r\n          x: newX,\r\n          y: newY,\r\n          text: `+${points}`,\r\n          type: 'points',\r\n          life: 1500\r\n        };\r\n        setParticles(prev => [...prev, particle]);\r\n      }\r\n      \r\n      // Verificar colisi√≥n con fantasmas\r\n      if (checkGhostCollision(newPosition)) {\r\n        if (powerMode) {\r\n          // Comer fantasma\r\n          playSound('GHOST_EATEN');\r\n          const ghostPoints = 200 * (combo + 1);\r\n          setScore(s => s + (doublePoints ? ghostPoints * 2 : ghostPoints));\r\n          setCombo(c => c + 1);\r\n          setGhostsEaten(g => g + 1);\r\n          \r\n          // Resetear fantasma comido\r\n          setGhosts(prevGhosts => \r\n            prevGhosts.map(ghost => \r\n              ghost.x === newX && ghost.y === newY \r\n                ? { ...ghost, x: 9, y: 9, mode: 'frightened' }\r\n                : ghost\r\n            )\r\n          );\r\n          \r\n          // Crear part√≠cula de combo\r\n          const particle = {\r\n            id: Date.now() + Math.random(),\r\n            x: newX,\r\n            y: newY,\r\n            text: `COMBO x${combo + 1}!`,\r\n            type: 'combo',\r\n            life: 2000\r\n          };\r\n          setParticles(prev => [...prev, particle]);\r\n        } else {\r\n          // Perder vida\r\n          playSound('DEATH');\r\n          setLives(l => l - 1);\r\n          setCombo(0); // Reset combo\r\n          \r\n          if (lives <= 1) {\r\n            // Actualizar high score\r\n            if (score > highScore) {\r\n              setHighScore(score);\r\n              localStorage.setItem('shiroNekoHighScore', score.toString());\r\n            }\r\n            setGameState(GAME_STATES.GAME_OVER);\r\n          } else {\r\n            // Resetear posiciones\r\n            setShiroPosition({ x: 9, y: 15 });\r\n            setGhosts([\r\n              { id: 'blinky', x: 9, y: 9, direction: { x: 1, y: 0 }, type: GHOST_TYPES.BLINKY, mode: 'chase', lastMove: Date.now() },\r\n              { id: 'pinky', x: 10, y: 9, direction: { x: -1, y: 0 }, type: GHOST_TYPES.PINKY, mode: 'chase', lastMove: Date.now() },\r\n              { id: 'inky', x: 9, y: 10, direction: { x: 0, y: 1 }, type: GHOST_TYPES.INKY, mode: 'chase', lastMove: Date.now() },\r\n              { id: 'clyde', x: 10, y: 10, direction: { x: 0, y: -1 }, type: GHOST_TYPES.CLYDE, mode: 'chase', lastMove: Date.now() }\r\n            ]);\r\n          }\r\n          return prev;\r\n        }\r\n      }\r\n      \r\n      // Comer comida\r\n      if (maze[newY][newX] === 2 || maze[newY][newX] === 3) {\r\n        const isPowerPellet = maze[newY][newX] === 3;\r\n        let points = isPowerPellet ? 50 : 10;\r\n        if (doublePoints) points *= 2;\r\n        \r\n        playSound(isPowerPellet ? 'POWER_PELLET' : 'DOT');\r\n        setScore(s => s + points);\r\n        setDotsEaten(d => d + 1);\r\n        \r\n        // Generar power-up ocasionalmente\r\n        generatePowerUp();\r\n        \r\n        if (isPowerPellet) {\r\n          setPowerMode(true);\r\n          setPowerModeTimer(8000); // 8 segundos\r\n          setCombo(0); // Reset combo para nuevo power mode\r\n          setGhosts(prevGhosts => \r\n            prevGhosts.map(ghost => ({ ...ghost, mode: 'frightened' }))\r\n          );\r\n        }\r\n        \r\n        setMaze(prevMaze => {\r\n          const newMaze = [...prevMaze];\r\n          newMaze[newY] = [...newMaze[newY]];\r\n          newMaze[newY][newX] = 0;\r\n          return newMaze;\r\n        });\r\n        \r\n        // Verificar si se complet√≥ el nivel\r\n        if (dotsEaten + 1 >= totalDots) {\r\n          setLevel(l => l + 1);\r\n          setGameState(GAME_STATES.LEVEL_COMPLETE);\r\n          playSound('LEVEL_COMPLETE');\r\n          \r\n          // Bonus por completar nivel\r\n          const levelBonus = level * 1000;\r\n          setScore(s => s + levelBonus);\r\n          \r\n          // Resetear para siguiente nivel\r\n          setTimeout(() => {\r\n            setMaze(MAZE);\r\n            setDotsEaten(0);\r\n            setShiroPosition({ x: 9, y: 15 });\r\n            setPowerUps([]);\r\n            setGameState(GAME_STATES.READY);\r\n          }, 3000);\r\n        }\r\n      }\r\n      \r\n      return newPosition;\r\n    });\r\n  }, [gameState, maze, ghosts, powerMode, lives, checkGhostCollision, playSound, dotsEaten, totalDots, powerUps, doublePoints, combo, score, highScore, level, generatePowerUp]);\r\n\r\n  // Mover fantasmas con IA mejorada\r\n  const moveGhosts = useCallback(() => {\r\n    if (gameState !== GAME_STATES.PLAYING || frozenGhosts) return;\r\n    \r\n    setGhosts(prevGhosts => \r\n      prevGhosts.map(ghost => {\r\n        // Verificar si es tiempo de mover este fantasma (diferentes velocidades)\r\n        const now = Date.now();\r\n        if (now - ghost.lastMove < ghost.type.speed) {\r\n          return ghost;\r\n        }\r\n        \r\n        const possibleMoves = [\r\n          { x: 0, y: -1 }, // Arriba\r\n          { x: 0, y: 1 },  // Abajo\r\n          { x: -1, y: 0 }, // Izquierda\r\n          { x: 1, y: 0 }   // Derecha\r\n        ].filter(move => {\r\n          const newX = ghost.x + move.x;\r\n          const newY = ghost.y + move.y;\r\n          return newX >= 0 && newX < GRID_SIZE && \r\n                 newY >= 0 && newY < GRID_SIZE && \r\n                 maze[newY][newX] !== 1;\r\n        });\r\n        \r\n        if (possibleMoves.length === 0) return ghost;\r\n        \r\n        let nextMove;\r\n        \r\n        if (ghost.mode === 'frightened') {\r\n          // Movimiento aleatorio cuando est√°n asustados (huyen)\r\n          const awayMoves = possibleMoves.map(move => {\r\n            const newX = ghost.x + move.x;\r\n            const newY = ghost.y + move.y;\r\n            return {\r\n              move,\r\n              distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\r\n            };\r\n          });\r\n          \r\n          // Elegir el movimiento que los aleje m√°s de Shiro\r\n          nextMove = awayMoves.reduce((farthest, current) => \r\n            current.distance > farthest.distance ? current : farthest\r\n          ).move;\r\n        } else {\r\n          // IA espec√≠fica por tipo de fantasma\r\n          switch(ghost.id) {\r\n            case 'blinky': // Agresivo - persigue directamente\r\n              const directMoves = possibleMoves.map(move => {\r\n                const newX = ghost.x + move.x;\r\n                const newY = ghost.y + move.y;\r\n                return {\r\n                  move,\r\n                  distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\r\n                };\r\n              });\r\n              nextMove = directMoves.reduce((closest, current) => \r\n                current.distance < closest.distance ? current : closest\r\n              ).move;\r\n              break;\r\n              \r\n            case 'pinky': // Estrat√©gico - intenta emboscar\r\n              const targetX = shiroPosition.x + direction.x * 4;\r\n              const targetY = shiroPosition.y + direction.y * 4;\r\n              const ambushMoves = possibleMoves.map(move => {\r\n                const newX = ghost.x + move.x;\r\n                const newY = ghost.y + move.y;\r\n                return {\r\n                  move,\r\n                  distance: Math.abs(newX - targetX) + Math.abs(newY - targetY)\r\n                };\r\n              });\r\n              nextMove = ambushMoves.reduce((closest, current) => \r\n                current.distance < closest.distance ? current : closest\r\n              ).move;\r\n              break;\r\n              \r\n            case 'inky': // Impredecible\r\n              if (Math.random() < 0.3) {\r\n                nextMove = possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\r\n              } else {\r\n                const inkyMoves = possibleMoves.map(move => {\r\n                  const newX = ghost.x + move.x;\r\n                  const newY = ghost.y + move.y;\r\n                  return {\r\n                    move,\r\n                    distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\r\n                  };\r\n                });\r\n                nextMove = inkyMoves.reduce((closest, current) => \r\n                  current.distance < closest.distance ? current : closest\r\n                ).move;\r\n              }\r\n              break;\r\n              \r\n            case 'clyde': // T√≠mido - huye si est√° muy cerca\r\n              const distanceToShiro = Math.abs(ghost.x - shiroPosition.x) + Math.abs(ghost.y - shiroPosition.y);\r\n              if (distanceToShiro < 8) {\r\n                // Huir si est√° muy cerca\r\n                const escapeMoves = possibleMoves.map(move => {\r\n                  const newX = ghost.x + move.x;\r\n                  const newY = ghost.y + move.y;\r\n                  return {\r\n                    move,\r\n                    distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\r\n                  };\r\n                });\r\n                nextMove = escapeMoves.reduce((farthest, current) => \r\n                  current.distance > farthest.distance ? current : farthest\r\n                ).move;\r\n              } else {\r\n                // Perseguir si est√° lejos\r\n                const chaseMoves = possibleMoves.map(move => {\r\n                  const newX = ghost.x + move.x;\r\n                  const newY = ghost.y + move.y;\r\n                  return {\r\n                    move,\r\n                    distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\r\n                  };\r\n                });\r\n                nextMove = chaseMoves.reduce((closest, current) => \r\n                  current.distance < closest.distance ? current : closest\r\n                ).move;\r\n              }\r\n              break;\r\n              \r\n            default:\r\n              nextMove = possibleMoves[0];\r\n          }\r\n        }\r\n        \r\n        return {\r\n          ...ghost,\r\n          x: ghost.x + nextMove.x,\r\n          y: ghost.y + nextMove.y,\r\n          direction: nextMove,\r\n          lastMove: now\r\n        };\r\n      })\r\n    );\r\n  }, [gameState, maze, shiroPosition, direction, frozenGhosts]);\r\n\r\n  // Controles del teclado\r\n  useEffect(() => {\r\n    const handleKeyPress = (e) => {\r\n      if (!e || !e.key) return;\r\n      e.preventDefault();\r\n      \r\n      switch(e.key) {\r\n        case 'ArrowUp':\r\n          setDirection({ x: 0, y: -1 });\r\n          break;\r\n        case 'ArrowDown':\r\n          setDirection({ x: 0, y: 1 });\r\n          break;\r\n        case 'ArrowLeft':\r\n          setDirection({ x: -1, y: 0 });\r\n          break;\r\n        case 'ArrowRight':\r\n          setDirection({ x: 1, y: 0 });\r\n          break;\r\n        case ' ':\r\n          if (gameState === GAME_STATES.READY) {\r\n            setGameState(GAME_STATES.PLAYING);\r\n          } else if (gameState === GAME_STATES.PLAYING) {\r\n            setGameState(GAME_STATES.PAUSED);\r\n          } else if (gameState === GAME_STATES.PAUSED) {\r\n            setGameState(GAME_STATES.PLAYING);\r\n          }\r\n          break;\r\n        case 'r':\r\n          if (gameState === GAME_STATES.GAME_OVER) {\r\n            // Reiniciar juego\r\n            setShiroPosition({ x: 9, y: 15 });\r\n            setMaze(MAZE);\r\n            setScore(0);\r\n            setLives(3);\r\n            setLevel(1);\r\n            setGameState(GAME_STATES.READY);\r\n            setDirection({ x: 0, y: 0 });\r\n            setNextDirection({ x: 0, y: 0 });\r\n            setPowerMode(false);\r\n            setPowerModeTimer(0);\r\n            setSpeedBoost(false);\r\n            setDoublePoints(false);\r\n            setFrozenGhosts(false);\r\n            setCombo(0);\r\n            setGhostsEaten(0);\r\n            setGameTime(0);\r\n            setDotsEaten(0);\r\n            setPowerUps([]);\r\n            setParticles([]);\r\n            setGhosts([\r\n              { id: 'blinky', x: 9, y: 9, direction: { x: 1, y: 0 }, type: GHOST_TYPES.BLINKY, mode: 'chase', lastMove: Date.now() },\r\n              { id: 'pinky', x: 10, y: 9, direction: { x: -1, y: 0 }, type: GHOST_TYPES.PINKY, mode: 'chase', lastMove: Date.now() },\r\n              { id: 'inky', x: 9, y: 10, direction: { x: 0, y: 1 }, type: GHOST_TYPES.INKY, mode: 'chase', lastMove: Date.now() },\r\n              { id: 'clyde', x: 10, y: 10, direction: { x: 0, y: -1 }, type: GHOST_TYPES.CLYDE, mode: 'chase', lastMove: Date.now() }\r\n            ]);\r\n          }\r\n          break;\r\n        case 's':\r\n          setShowStats(!showStats);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyPress);\r\n    return () => window.removeEventListener('keydown', handleKeyPress);\r\n  }, [gameState]);\r\n\r\n  // Game loop principal\r\n  useEffect(() => {\r\n    if (gameState === GAME_STATES.PLAYING) {\r\n      const speed = speedBoost ? 100 : 150; // M√°s r√°pido con speed boost\r\n      gameLoopRef.current = setInterval(() => {\r\n        if (direction.x !== 0 || direction.y !== 0) {\r\n          moveShiro(direction);\r\n        }\r\n        moveGhosts();\r\n      }, speed);\r\n    } else {\r\n      clearInterval(gameLoopRef.current);\r\n    }\r\n\r\n    return () => clearInterval(gameLoopRef.current);\r\n  }, [gameState, direction, moveShiro, moveGhosts, speedBoost]);\r\n\r\n  // Power mode timer\r\n  useEffect(() => {\r\n    if (powerMode && powerModeTimer > 0) {\r\n      powerModeRef.current = setTimeout(() => {\r\n        setPowerModeTimer(t => t - 100);\r\n      }, 100);\r\n    } else if (powerMode && powerModeTimer <= 0) {\r\n      setPowerMode(false);\r\n      setGhosts(prevGhosts => \r\n        prevGhosts.map(ghost => ({ ...ghost, mode: 'chase' }))\r\n      );\r\n    }\r\n\r\n    return () => clearTimeout(powerModeRef.current);\r\n  }, [powerMode, powerModeTimer]);\r\n\r\n  const renderCell = (cell, x, y) => {\r\n    let className = 'cell';\r\n    let content = '';\r\n    \r\n    if (cell === 1) {\r\n      className += ' wall';\r\n    } else if (cell === 2) {\r\n      content = '¬∑';\r\n    } else if (cell === 3) {\r\n      content = '‚óè';\r\n      className += ' power-pellet';\r\n    }\r\n    \r\n    // Renderizar Shiro Neko con imagen personalizada\r\n    if (shiroPosition.x === x && shiroPosition.y === y) {\r\n      content = <img src={protagonistaImg} alt=\"Shiro Neko\" className=\"protagonist-img\" />;\r\n      className += ' shiro';\r\n      if (powerMode) className += ' power-mode';\r\n      if (speedBoost) className += ' speed-boost';\r\n    }\r\n    \r\n    // Renderizar power-ups\r\n    const powerUpAtPosition = powerUps.find(powerUp => powerUp.x === x && powerUp.y === y);\r\n    if (powerUpAtPosition && !(shiroPosition.x === x && shiroPosition.y === y)) {\r\n      content = powerUpAtPosition.emoji;\r\n      className += ' power-up';\r\n    }\r\n    \r\n    // Renderizar fantasmas\r\n    const ghostAtPosition = ghosts.find(ghost => ghost.x === x && ghost.y === y);\r\n    if (ghostAtPosition && !(shiroPosition.x === x && shiroPosition.y === y)) {\r\n      content = ghostAtPosition.type.emoji;\r\n      className += ` ghost ${ghostAtPosition.mode}`;\r\n      if (ghostAtPosition.mode === 'frightened') {\r\n        className += ' frightened';\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div key={`${x}-${y}`} className={className}>\r\n        {content}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getGameStateMessage = () => {\r\n    switch(gameState) {\r\n      case GAME_STATES.READY:\r\n        return \"¬°Presiona ESPACIO para comenzar!\";\r\n      case GAME_STATES.PAUSED:\r\n        return \"PAUSADO - Presiona ESPACIO para continuar\";\r\n      case GAME_STATES.GAME_OVER:\r\n        return \"GAME OVER - Presiona R para reiniciar\";\r\n      case GAME_STATES.LEVEL_COMPLETE:\r\n        return \"¬°NIVEL COMPLETADO! Preparando siguiente nivel...\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"game-info\">\r\n        <h1>üê± Shiro Neko Pacman üê±</h1>\r\n        <div className=\"game-stats\">\r\n          <div className=\"score\">Puntuaci√≥n: {score.toLocaleString()}</div>\r\n          <div className=\"high-score\">R√©cord: {highScore.toLocaleString()}</div>\r\n          <div className=\"lives\">Vidas: {'‚ù§Ô∏è'.repeat(lives)}</div>\r\n          <div className=\"level\">Nivel: {level}</div>\r\n          <div className=\"time\">Tiempo: {formatTime(gameTime)}</div>\r\n          {combo > 0 && <div className=\"combo\">Combo: x{combo}</div>}\r\n        </div>\r\n        \r\n        <div className=\"power-ups-status\">\r\n          {powerMode && (\r\n            <div className=\"power-timer\">\r\n              üåü Power Mode: {Math.ceil(powerModeTimer / 1000)}s\r\n            </div>\r\n          )}\r\n          {speedBoost && <div className=\"status-effect\">‚ö° Speed Boost</div>}\r\n          {doublePoints && <div className=\"status-effect\">üíé Double Points</div>}\r\n          {frozenGhosts && <div className=\"status-effect\">‚ùÑÔ∏è Frozen Ghosts</div>}\r\n        </div>\r\n        \r\n        <div className=\"game-state-message\">\r\n          {getGameStateMessage()}\r\n        </div>\r\n        \r\n        <div className=\"controls\">\r\n          <div>üéÆ Flechas: Mover | ESPACIO: Pausa | R: Reiniciar | S: Estad√≠sticas</div>\r\n          <div>Come todos los puntos, power-ups y evita los fantasmas!</div>\r\n          {powerMode && <div className=\"power-info\">¬°MODO PODER ACTIVO! ¬°Come fantasmas para combos!</div>}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"game-container\">\r\n        <div className=\"game-board\">\r\n          {maze.map((row, y) =>\r\n            row.map((cell, x) => renderCell(cell, x, y))\r\n          )}\r\n          \r\n          {/* Renderizar part√≠culas */}\r\n          {particles.map(particle => (\r\n            <div\r\n              key={particle.id}\r\n              className={`particle ${particle.type}`}\r\n              style={{\r\n                left: `${particle.x * CELL_SIZE + 15}px`,\r\n                top: `${particle.y * CELL_SIZE + 15}px`,\r\n                opacity: particle.life / 1000\r\n              }}\r\n            >\r\n              {particle.text}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        \r\n        {showStats && (\r\n          <div className=\"stats-panel\">\r\n            <h3>üìä Estad√≠sticas del Juego</h3>\r\n            <div className=\"stat-item\">Puntos comidos: {dotsEaten}/{totalDots}</div>\r\n            <div className=\"stat-item\">Fantasmas comidos: {ghostsEaten}</div>\r\n            <div className=\"stat-item\">Mejor combo: {combo}</div>\r\n            <div className=\"stat-item\">Tiempo jugado: {formatTime(gameTime)}</div>\r\n            <div className=\"stat-item\">Puntos por minuto: {gameTime > 0 ? Math.round(score / (gameTime / 60)) : 0}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"game-footer\">\r\n        <div className=\"ghost-info\">\r\n          <div className=\"ghost-legend\">\r\n            <div className=\"ghost-card\">\r\n              <span>üëª {GHOST_TYPES.BLINKY.name}</span>\r\n              <small>{GHOST_TYPES.BLINKY.personality}</small>\r\n            </div>\r\n            <div className=\"ghost-card\">\r\n              <span>üü£ {GHOST_TYPES.PINKY.name}</span>\r\n              <small>{GHOST_TYPES.PINKY.personality}</small>\r\n            </div>\r\n            <div className=\"ghost-card\">\r\n              <span>üîµ {GHOST_TYPES.INKY.name}</span>\r\n              <small>{GHOST_TYPES.INKY.personality}</small>\r\n            </div>\r\n            <div className=\"ghost-card\">\r\n              <span>üü† {GHOST_TYPES.CLYDE.name}</span>\r\n              <small>{GHOST_TYPES.CLYDE.personality}</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"power-ups-info\">\r\n          <h4>Power-ups Disponibles:</h4>\r\n          <div className=\"power-up-legend\">\r\n            <span>‚ö° Speed Boost (+100pts)</span>\r\n            <span>üíñ Vida Extra (+500pts)</span>\r\n            <span>üíé Puntos Dobles (+200pts)</span>\r\n            <span>‚ùÑÔ∏è Congelar Fantasmas (+150pts)</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,OAAO,WAAW;AAClB,OAAOC,eAAe,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,SAAS,GAAG,EAAE;AACpB,MAAMC,SAAS,GAAG,EAAE;;AAEpB;AACA,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,WAAW;EAChBC,YAAY,EAAE,cAAc;EAC5BC,WAAW,EAAE,iBAAiB;EAC9BC,KAAK,EAAE,WAAW;EAClBC,cAAc,EAAE,oBAAoB;EACpCC,UAAU,EAAE;AACd,CAAC;;AAED;AACA,MAAMC,IAAI,GAAG,CACX,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}