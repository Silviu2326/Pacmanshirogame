{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\Downloads\\\\juego\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './App.css';\nimport protagonistaImg from './protagonista.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 20;\nconst CELL_SIZE = 30;\n\n// Configuración de sonidos\nconst SOUNDS = {\n  DOT: '🔊 Chomp!',\n  POWER_PELLET: '🔊 Power Up!',\n  GHOST_EATEN: '🔊 Ghost Eaten!',\n  DEATH: '🔊 Oh no!',\n  LEVEL_COMPLETE: '🔊 Level Complete!',\n  GAME_START: '🔊 Game Start!'\n};\n\n// Laberinto mejorado\nconst MAZE = [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1], [1, 3, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 3, 1], [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1], [1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1], [1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1], [1, 1, 1, 1, 2, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 1], [0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0], [1, 1, 1, 1, 2, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 2, 1, 1, 1, 1], [0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0], [1, 1, 1, 1, 2, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 1], [0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0], [1, 1, 1, 1, 2, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 1], [1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1], [1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1], [1, 3, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 3, 1], [1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1], [1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1], [1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]];\n\n// Tipos de enemigos con diferentes comportamientos y personalidades\nconst GHOST_TYPES = {\n  BLINKY: {\n    emoji: '👻',\n    color: '#ff0000',\n    speed: 180,\n    name: 'Blinky',\n    personality: 'Agresivo - Te persigue directamente'\n  },\n  PINKY: {\n    emoji: '🟣',\n    color: '#ffb8ff',\n    speed: 200,\n    name: 'Pinky',\n    personality: 'Estratégico - Intenta emboscarte'\n  },\n  INKY: {\n    emoji: '🔵',\n    color: '#00ffff',\n    speed: 220,\n    name: 'Inky',\n    personality: 'Impredecible - Movimientos erráticos'\n  },\n  CLYDE: {\n    emoji: '🟠',\n    color: '#ffb852',\n    speed: 240,\n    name: 'Clyde',\n    personality: 'Tímido - Huye cuando te acercas'\n  }\n};\n\n// Power-ups especiales expandidos\nconst POWER_UPS = {\n  SPEED_BOOST: {\n    emoji: '⚡',\n    points: 100,\n    duration: 5000,\n    name: 'Speed Boost',\n    description: 'Velocidad aumentada'\n  },\n  EXTRA_LIFE: {\n    emoji: '💖',\n    points: 500,\n    effect: 'life',\n    name: 'Vida Extra',\n    description: 'Ganas una vida adicional'\n  },\n  DOUBLE_POINTS: {\n    emoji: '💎',\n    points: 200,\n    duration: 10000,\n    name: 'Puntos Dobles',\n    description: 'Duplica todos los puntos'\n  },\n  FREEZE_GHOSTS: {\n    emoji: '❄️',\n    points: 150,\n    duration: 3000,\n    name: 'Congelar',\n    description: 'Los fantasmas se quedan inmóviles'\n  },\n  FIRE_MODE: {\n    emoji: '🔥',\n    points: 300,\n    duration: 4000,\n    name: 'Modo Fuego',\n    description: 'Atraviesa paredes y quema fantasmas'\n  },\n  GHOST_MODE: {\n    emoji: '👻',\n    points: 250,\n    duration: 6000,\n    name: 'Modo Fantasma',\n    description: 'Eres invisible a los enemigos'\n  },\n  TIME_SLOW: {\n    emoji: '⏰',\n    points: 200,\n    duration: 5000,\n    name: 'Tiempo Lento',\n    description: 'Todo se mueve en cámara lenta'\n  },\n  MAGNET: {\n    emoji: '🧲',\n    points: 150,\n    duration: 8000,\n    name: 'Imán',\n    description: 'Atrae puntos automáticamente'\n  },\n  SHIELD: {\n    emoji: '🛡️',\n    points: 400,\n    effect: 'shield',\n    name: 'Escudo',\n    description: 'Protección contra 1 muerte'\n  },\n  TORNADO: {\n    emoji: '🌪️',\n    points: 350,\n    duration: 3000,\n    name: 'Tornado',\n    description: 'Aspira todos los puntos cercanos'\n  },\n  LIGHTNING: {\n    emoji: '⚡',\n    points: 500,\n    effect: 'instant',\n    name: 'Rayo',\n    description: 'Elimina todos los fantasmas temporalmente'\n  },\n  RAINBOW: {\n    emoji: '🌈',\n    points: 1000,\n    duration: 15000,\n    name: 'Arcoíris',\n    description: 'Todos los efectos activos'\n  }\n};\n\n// Estados del juego\nconst GAME_STATES = {\n  READY: 'ready',\n  PLAYING: 'playing',\n  PAUSED: 'paused',\n  DEATH_SCREEN: 'death_screen',\n  GAME_OVER: 'game_over',\n  LEVEL_COMPLETE: 'level_complete',\n  POWER_MODE: 'power_mode'\n};\nfunction App() {\n  _s();\n  const [shiroPosition, setShiroPosition] = useState({\n    x: 9,\n    y: 15\n  });\n  const [maze, setMaze] = useState(MAZE);\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(parseInt(localStorage.getItem('shiroNekoHighScore') || '0'));\n  const [lives, setLives] = useState(3);\n  const [level, setLevel] = useState(1);\n  const [gameState, setGameState] = useState(GAME_STATES.READY);\n  const [direction, setDirection] = useState({\n    x: 0,\n    y: 0\n  });\n  const [nextDirection, setNextDirection] = useState({\n    x: 0,\n    y: 0\n  });\n  const [powerMode, setPowerMode] = useState(false);\n  const [powerModeTimer, setPowerModeTimer] = useState(0);\n  const [speedBoost, setSpeedBoost] = useState(false);\n  const [doublePoints, setDoublePoints] = useState(false);\n  const [frozenGhosts, setFrozenGhosts] = useState(false);\n  const [fireMode, setFireMode] = useState(false);\n  const [ghostMode, setGhostMode] = useState(false);\n  const [timeSlow, setTimeSlow] = useState(false);\n  const [magnetMode, setMagnetMode] = useState(false);\n  const [shieldActive, setShieldActive] = useState(false);\n  const [tornadoMode, setTornadoMode] = useState(false);\n  const [rainbowMode, setRainbowMode] = useState(false);\n  const [screenShake, setScreenShake] = useState(0);\n  const [flashEffect, setFlashEffect] = useState('');\n  const [activeEffects, setActiveEffects] = useState([]);\n  const [combo, setCombo] = useState(0);\n  const [touchStart, setTouchStart] = useState({\n    x: 0,\n    y: 0\n  });\n  const [touchEnd, setTouchEnd] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isMobile, setIsMobile] = useState(false);\n  const [ghostsEaten, setGhostsEaten] = useState(0);\n  const [gameTime, setGameTime] = useState(0);\n  const [ghosts, setGhosts] = useState([{\n    id: 'blinky',\n    x: 9,\n    y: 9,\n    direction: {\n      x: 1,\n      y: 0\n    },\n    type: GHOST_TYPES.BLINKY,\n    mode: 'chase',\n    lastMove: Date.now()\n  }, {\n    id: 'pinky',\n    x: 10,\n    y: 9,\n    direction: {\n      x: -1,\n      y: 0\n    },\n    type: GHOST_TYPES.PINKY,\n    mode: 'chase',\n    lastMove: Date.now()\n  }, {\n    id: 'inky',\n    x: 9,\n    y: 10,\n    direction: {\n      x: 0,\n      y: 1\n    },\n    type: GHOST_TYPES.INKY,\n    mode: 'chase',\n    lastMove: Date.now()\n  }, {\n    id: 'clyde',\n    x: 10,\n    y: 10,\n    direction: {\n      x: 0,\n      y: -1\n    },\n    type: GHOST_TYPES.CLYDE,\n    mode: 'chase',\n    lastMove: Date.now()\n  }]);\n  const [totalDots, setTotalDots] = useState(0);\n  const [dotsEaten, setDotsEaten] = useState(0);\n  const [powerUps, setPowerUps] = useState([]);\n  const [particles, setParticles] = useState([]);\n  const [showStats, setShowStats] = useState(false);\n  const [deathAnimation, setDeathAnimation] = useState(false);\n  const [killerGhost, setKillerGhost] = useState(null);\n  const gameLoopRef = useRef();\n  const powerModeRef = useRef();\n  const gameTimeRef = useRef();\n  const deathTimeoutRef = useRef();\n\n  // Detectar si es móvil y inicializar el juego\n  useEffect(() => {\n    const dots = MAZE.flat().filter(cell => cell === 2 || cell === 3).length;\n    setTotalDots(dots);\n\n    // Detectar dispositivo móvil\n    const checkMobile = () => {\n      const isMobileDevice = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || window.innerWidth <= 768 || 'ontouchstart' in window;\n      setIsMobile(isMobileDevice);\n    };\n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n\n  // Función para reproducir sonidos y mostrar notificaciones\n  const playSound = useCallback(soundType => {\n    console.log(SOUNDS[soundType] || `🔊 ${soundType}`);\n\n    // Crear partícula de sonido visual\n    const particle = {\n      id: Date.now() + Math.random(),\n      x: shiroPosition.x,\n      y: shiroPosition.y,\n      text: SOUNDS[soundType] || soundType,\n      type: 'sound',\n      life: 1000\n    };\n    setParticles(prev => [...prev, particle]);\n  }, [shiroPosition]);\n\n  // Aplicar efectos de power-ups\n  const applyPowerUpEffect = useCallback((type, duration) => {\n    const effect = {\n      type,\n      duration,\n      startTime: Date.now()\n    };\n    setActiveEffects(prev => [...prev, effect]);\n    switch (type) {\n      case 'SPEED_BOOST':\n        setSpeedBoost(true);\n        setTimeout(() => setSpeedBoost(false), duration);\n        break;\n      case 'EXTRA_LIFE':\n        setLives(l => l + 1);\n        triggerScreenEffect('life-gained');\n        break;\n      case 'DOUBLE_POINTS':\n        setDoublePoints(true);\n        setTimeout(() => setDoublePoints(false), duration);\n        break;\n      case 'FREEZE_GHOSTS':\n        setFrozenGhosts(true);\n        setTimeout(() => setFrozenGhosts(false), duration);\n        break;\n      case 'FIRE_MODE':\n        setFireMode(true);\n        setTimeout(() => setFireMode(false), duration);\n        break;\n      case 'GHOST_MODE':\n        setGhostMode(true);\n        setTimeout(() => setGhostMode(false), duration);\n        break;\n      case 'TIME_SLOW':\n        setTimeSlow(true);\n        setTimeout(() => setTimeSlow(false), duration);\n        break;\n      case 'MAGNET':\n        setMagnetMode(true);\n        setTimeout(() => setMagnetMode(false), duration);\n        break;\n      case 'SHIELD':\n        setShieldActive(true);\n        break;\n      case 'TORNADO':\n        setTornadoMode(true);\n        setTimeout(() => setTornadoMode(false), duration);\n        // Aspirar puntos cercanos\n        aspirateNearbyDots();\n        break;\n      case 'LIGHTNING':\n        // Eliminar todos los fantasmas temporalmente\n        setGhosts(prev => prev.map(ghost => ({\n          ...ghost,\n          mode: 'stunned',\n          x: 9,\n          y: 9\n        })));\n        triggerScreenEffect('lightning');\n        setTimeout(() => {\n          setGhosts(prev => prev.map(ghost => ({\n            ...ghost,\n            mode: 'chase'\n          })));\n        }, 2000);\n        break;\n      case 'RAINBOW':\n        setRainbowMode(true);\n        setSpeedBoost(true);\n        setDoublePoints(true);\n        setMagnetMode(true);\n        setTimeout(() => {\n          setRainbowMode(false);\n          setSpeedBoost(false);\n          setDoublePoints(false);\n          setMagnetMode(false);\n        }, duration);\n        break;\n    }\n  }, []);\n\n  // Generar power-ups aleatoriamente con más variedad\n  const generatePowerUp = useCallback(() => {\n    if (Math.random() < 0.15 && powerUps.length < 3) {\n      // 15% de probabilidad, hasta 3 power-ups\n      const powerUpTypes = Object.keys(POWER_UPS);\n      // Power-ups más raros tienen menor probabilidad\n      const rarePowerUps = ['RAINBOW', 'LIGHTNING', 'SHIELD'];\n      const commonPowerUps = powerUpTypes.filter(type => !rarePowerUps.includes(type));\n      let randomType;\n      if (Math.random() < 0.1) {\n        // 10% para power-ups raros\n        randomType = rarePowerUps[Math.floor(Math.random() * rarePowerUps.length)];\n      } else {\n        randomType = commonPowerUps[Math.floor(Math.random() * commonPowerUps.length)];\n      }\n\n      // Encontrar posición vacía\n      let x, y;\n      do {\n        x = Math.floor(Math.random() * GRID_SIZE);\n        y = Math.floor(Math.random() * GRID_SIZE);\n      } while (maze[y][x] !== 0 || x === shiroPosition.x && y === shiroPosition.y);\n      const newPowerUp = {\n        id: Date.now(),\n        x,\n        y,\n        type: randomType,\n        ...POWER_UPS[randomType],\n        spawnTime: Date.now()\n      };\n      setPowerUps(prev => [...prev, newPowerUp]);\n\n      // Animación de aparición\n      createSpawnAnimation(x, y);\n    }\n  }, [maze, shiroPosition, powerUps.length]);\n\n  // Efectos visuales y animaciones\n  const triggerScreenEffect = useCallback(effectType => {\n    setFlashEffect(effectType);\n    setTimeout(() => setFlashEffect(''), 500);\n    switch (effectType) {\n      case 'powerup-collected':\n        setScreenShake(5);\n        break;\n      case 'life-gained':\n        setScreenShake(3);\n        break;\n      case 'lightning':\n        setScreenShake(10);\n        break;\n      case 'death':\n        setScreenShake(15);\n        break;\n    }\n\n    // Reducir shake gradualmente\n    const shakeInterval = setInterval(() => {\n      setScreenShake(prev => {\n        if (prev <= 1) {\n          clearInterval(shakeInterval);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 50);\n  }, []);\n  const createPowerUpAnimation = useCallback((x, y, emoji) => {\n    for (let i = 0; i < 5; i++) {\n      const particle = {\n        id: Date.now() + Math.random() + i,\n        x: x + (Math.random() - 0.5) * 2,\n        y: y + (Math.random() - 0.5) * 2,\n        text: emoji,\n        type: 'powerup-collect',\n        life: 1000 + Math.random() * 500\n      };\n      setParticles(prev => [...prev, particle]);\n    }\n  }, []);\n  const createSpawnAnimation = useCallback((x, y) => {\n    const particle = {\n      id: Date.now() + Math.random(),\n      x,\n      y,\n      text: '✨',\n      type: 'spawn',\n      life: 1500\n    };\n    setParticles(prev => [...prev, particle]);\n  }, []);\n  const aspirateNearbyDots = useCallback(() => {\n    // Simular aspiración de puntos cercanos\n    const radius = 3;\n    let dotsCollected = 0;\n    setMaze(prevMaze => {\n      const newMaze = [...prevMaze];\n      for (let dy = -radius; dy <= radius; dy++) {\n        for (let dx = -radius; dx <= radius; dx++) {\n          const x = shiroPosition.x + dx;\n          const y = shiroPosition.y + dy;\n          if (x >= 0 && x < GRID_SIZE && y >= 0 && y < GRID_SIZE) {\n            if (newMaze[y][x] === 2 || newMaze[y][x] === 3) {\n              const points = newMaze[y][x] === 3 ? 50 : 10;\n              setScore(s => s + (doublePoints ? points * 2 : points));\n              newMaze[y][x] = 0;\n              dotsCollected++;\n\n              // Crear partícula de aspiración\n              const particle = {\n                id: Date.now() + Math.random() + dx + dy,\n                x,\n                y,\n                text: '🌪️',\n                type: 'tornado-collect',\n                life: 800\n              };\n              setParticles(prev => [...prev, particle]);\n            }\n          }\n        }\n      }\n      return newMaze;\n    });\n    setDotsEaten(d => d + dotsCollected);\n  }, [shiroPosition, doublePoints]);\n\n  // Actualizar partículas\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setParticles(prev => prev.filter(particle => {\n        particle.life -= 50;\n        return particle.life > 0;\n      }));\n    }, 50);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Timer del juego\n  useEffect(() => {\n    if (gameState === GAME_STATES.PLAYING) {\n      gameTimeRef.current = setInterval(() => {\n        setGameTime(t => t + 1);\n      }, 1000);\n    } else {\n      clearInterval(gameTimeRef.current);\n    }\n    return () => clearInterval(gameTimeRef.current);\n  }, [gameState]);\n\n  // Verificar colisiones con fantasmas\n  const checkGhostCollision = useCallback(position => {\n    return ghosts.some(ghost => ghost.x === position.x && ghost.y === position.y);\n  }, [ghosts]);\n\n  // Mover Shiro Neko\n  const moveShiro = useCallback(newDirection => {\n    if (gameState !== GAME_STATES.PLAYING) return;\n    setShiroPosition(prev => {\n      const newX = prev.x + newDirection.x;\n      const newY = prev.y + newDirection.y;\n\n      // Verificar límites\n      if (newX < 0 || newX >= GRID_SIZE || newY < 0 || newY >= GRID_SIZE) {\n        return prev;\n      }\n\n      // Verificar paredes (excepto en modo fuego)\n      if (maze[newY][newX] === 1 && !fireMode) {\n        return prev;\n      }\n      const newPosition = {\n        x: newX,\n        y: newY\n      };\n\n      // Verificar colisión con power-ups\n      const powerUpAtPosition = powerUps.find(powerUp => powerUp.x === newX && powerUp.y === newY);\n      if (powerUpAtPosition) {\n        const points = doublePoints ? powerUpAtPosition.points * 2 : powerUpAtPosition.points;\n        setScore(s => s + points);\n\n        // Aplicar efecto del power-up con animaciones\n        applyPowerUpEffect(powerUpAtPosition.type, powerUpAtPosition.duration);\n\n        // Efecto visual de recolección\n        triggerScreenEffect('powerup-collected');\n        createPowerUpAnimation(newX, newY, powerUpAtPosition.emoji);\n\n        // Remover power-up\n        setPowerUps(prev => prev.filter(p => p.id !== powerUpAtPosition.id));\n\n        // Crear partícula de efecto\n        const particle = {\n          id: Date.now() + Math.random(),\n          x: newX,\n          y: newY,\n          text: `+${points}`,\n          type: 'points',\n          life: 1500\n        };\n        setParticles(prev => [...prev, particle]);\n      }\n\n      // Verificar colisión con fantasmas (excepto en modo fantasma)\n      if (checkGhostCollision(newPosition) && !ghostMode) {\n        if (powerMode || fireMode) {\n          // Comer fantasma\n          playSound('GHOST_EATEN');\n          const ghostPoints = 200 * (combo + 1);\n          setScore(s => s + (doublePoints ? ghostPoints * 2 : ghostPoints));\n          setCombo(c => c + 1);\n          setGhostsEaten(g => g + 1);\n\n          // Resetear fantasma comido\n          setGhosts(prevGhosts => prevGhosts.map(ghost => ghost.x === newX && ghost.y === newY ? {\n            ...ghost,\n            x: 9,\n            y: 9,\n            mode: 'frightened'\n          } : ghost));\n\n          // Crear partícula de combo\n          const particle = {\n            id: Date.now() + Math.random(),\n            x: newX,\n            y: newY,\n            text: `COMBO x${combo + 1}!`,\n            type: 'combo',\n            life: 2000\n          };\n          setParticles(prev => [...prev, particle]);\n        } else {\n          // Verificar si tiene escudo activo\n          if (shieldActive) {\n            setShieldActive(false);\n            triggerScreenEffect('shield-used');\n\n            // Crear efecto visual de escudo\n            const particle = {\n              id: Date.now() + Math.random(),\n              x: newX,\n              y: newY,\n              text: '🛡️💥',\n              type: 'shield-break',\n              life: 1500\n            };\n            setParticles(prev => [...prev, particle]);\n\n            // Empujar fantasmas\n            setGhosts(prevGhosts => prevGhosts.map(ghost => {\n              if (ghost.x === newX && ghost.y === newY) {\n                return {\n                  ...ghost,\n                  mode: 'stunned',\n                  x: 9,\n                  y: 9\n                };\n              }\n              return ghost;\n            }));\n            return newPosition; // Continuar movimiento\n          }\n\n          // Encontrar el fantasma que mató a Shiro\n          const killer = ghosts.find(ghost => ghost.x === newX && ghost.y === newY);\n          setKillerGhost(killer);\n\n          // Activar animación de muerte\n          setDeathAnimation(true);\n          playSound('DEATH');\n          setCombo(0); // Reset combo\n          triggerScreenEffect('death');\n\n          // Cambiar a pantalla de muerte\n          setGameState(GAME_STATES.DEATH_SCREEN);\n\n          // Crear partículas de muerte\n          for (let i = 0; i < 10; i++) {\n            const particle = {\n              id: Date.now() + Math.random() + i,\n              x: newX + (Math.random() - 0.5) * 3,\n              y: newY + (Math.random() - 0.5) * 3,\n              text: ['💀', '⚡', '💥', '😵', '🌟'][Math.floor(Math.random() * 5)],\n              type: 'death',\n              life: 2000 + Math.random() * 1000\n            };\n            setParticles(prev => [...prev, particle]);\n          }\n\n          // Después de 3 segundos, decidir si game over o continuar\n          deathTimeoutRef.current = setTimeout(() => {\n            setDeathAnimation(false);\n            setLives(l => l - 1);\n            if (lives <= 1) {\n              // Actualizar high score\n              if (score > highScore) {\n                setHighScore(score);\n                localStorage.setItem('shiroNekoHighScore', score.toString());\n              }\n              setGameState(GAME_STATES.GAME_OVER);\n            } else {\n              // Resetear posiciones para continuar\n              setShiroPosition({\n                x: 9,\n                y: 15\n              });\n              setGhosts([{\n                id: 'blinky',\n                x: 9,\n                y: 9,\n                direction: {\n                  x: 1,\n                  y: 0\n                },\n                type: GHOST_TYPES.BLINKY,\n                mode: 'chase',\n                lastMove: Date.now()\n              }, {\n                id: 'pinky',\n                x: 10,\n                y: 9,\n                direction: {\n                  x: -1,\n                  y: 0\n                },\n                type: GHOST_TYPES.PINKY,\n                mode: 'chase',\n                lastMove: Date.now()\n              }, {\n                id: 'inky',\n                x: 9,\n                y: 10,\n                direction: {\n                  x: 0,\n                  y: 1\n                },\n                type: GHOST_TYPES.INKY,\n                mode: 'chase',\n                lastMove: Date.now()\n              }, {\n                id: 'clyde',\n                x: 10,\n                y: 10,\n                direction: {\n                  x: 0,\n                  y: -1\n                },\n                type: GHOST_TYPES.CLYDE,\n                mode: 'chase',\n                lastMove: Date.now()\n              }]);\n              setGameState(GAME_STATES.READY);\n              setKillerGhost(null);\n            }\n          }, 3000);\n          return prev;\n        }\n      }\n\n      // Comer comida\n      if (maze[newY][newX] === 2 || maze[newY][newX] === 3) {\n        const isPowerPellet = maze[newY][newX] === 3;\n        let points = isPowerPellet ? 50 : 10;\n        if (doublePoints) points *= 2;\n        playSound(isPowerPellet ? 'POWER_PELLET' : 'DOT');\n        setScore(s => s + points);\n        setDotsEaten(d => d + 1);\n\n        // Generar power-up ocasionalmente\n        generatePowerUp();\n        if (isPowerPellet) {\n          setPowerMode(true);\n          setPowerModeTimer(8000); // 8 segundos\n          setCombo(0); // Reset combo para nuevo power mode\n          setGhosts(prevGhosts => prevGhosts.map(ghost => ({\n            ...ghost,\n            mode: 'frightened'\n          })));\n        }\n        setMaze(prevMaze => {\n          const newMaze = [...prevMaze];\n          newMaze[newY] = [...newMaze[newY]];\n          newMaze[newY][newX] = 0;\n          return newMaze;\n        });\n\n        // Verificar si se completó el nivel\n        if (dotsEaten + 1 >= totalDots) {\n          setLevel(l => l + 1);\n          setGameState(GAME_STATES.LEVEL_COMPLETE);\n          playSound('LEVEL_COMPLETE');\n\n          // Bonus por completar nivel\n          const levelBonus = level * 1000;\n          setScore(s => s + levelBonus);\n\n          // Resetear para siguiente nivel\n          setTimeout(() => {\n            setMaze(MAZE);\n            setDotsEaten(0);\n            setShiroPosition({\n              x: 9,\n              y: 15\n            });\n            setPowerUps([]);\n            setGameState(GAME_STATES.READY);\n          }, 3000);\n        }\n      }\n      return newPosition;\n    });\n  }, [gameState, maze, ghosts, powerMode, lives, checkGhostCollision, playSound, dotsEaten, totalDots, powerUps, doublePoints, combo, score, highScore, level, generatePowerUp]);\n\n  // Mover fantasmas con IA mejorada\n  const moveGhosts = useCallback(() => {\n    if (gameState !== GAME_STATES.PLAYING || frozenGhosts) return;\n    setGhosts(prevGhosts => prevGhosts.map(ghost => {\n      // Verificar si es tiempo de mover este fantasma (diferentes velocidades)\n      const now = Date.now();\n      if (now - ghost.lastMove < ghost.type.speed) {\n        return ghost;\n      }\n      const possibleMoves = [{\n        x: 0,\n        y: -1\n      },\n      // Arriba\n      {\n        x: 0,\n        y: 1\n      },\n      // Abajo\n      {\n        x: -1,\n        y: 0\n      },\n      // Izquierda\n      {\n        x: 1,\n        y: 0\n      } // Derecha\n      ].filter(move => {\n        const newX = ghost.x + move.x;\n        const newY = ghost.y + move.y;\n        return newX >= 0 && newX < GRID_SIZE && newY >= 0 && newY < GRID_SIZE && maze[newY][newX] !== 1;\n      });\n      if (possibleMoves.length === 0) return ghost;\n      let nextMove;\n      if (ghost.mode === 'frightened') {\n        // Movimiento aleatorio cuando están asustados (huyen)\n        const awayMoves = possibleMoves.map(move => {\n          const newX = ghost.x + move.x;\n          const newY = ghost.y + move.y;\n          return {\n            move,\n            distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\n          };\n        });\n\n        // Elegir el movimiento que los aleje más de Shiro\n        nextMove = awayMoves.reduce((farthest, current) => current.distance > farthest.distance ? current : farthest).move;\n      } else {\n        // IA específica por tipo de fantasma\n        switch (ghost.id) {\n          case 'blinky':\n            // Agresivo - persigue directamente\n            const directMoves = possibleMoves.map(move => {\n              const newX = ghost.x + move.x;\n              const newY = ghost.y + move.y;\n              return {\n                move,\n                distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\n              };\n            });\n            nextMove = directMoves.reduce((closest, current) => current.distance < closest.distance ? current : closest).move;\n            break;\n          case 'pinky':\n            // Estratégico - intenta emboscar\n            const targetX = shiroPosition.x + direction.x * 4;\n            const targetY = shiroPosition.y + direction.y * 4;\n            const ambushMoves = possibleMoves.map(move => {\n              const newX = ghost.x + move.x;\n              const newY = ghost.y + move.y;\n              return {\n                move,\n                distance: Math.abs(newX - targetX) + Math.abs(newY - targetY)\n              };\n            });\n            nextMove = ambushMoves.reduce((closest, current) => current.distance < closest.distance ? current : closest).move;\n            break;\n          case 'inky':\n            // Impredecible\n            if (Math.random() < 0.3) {\n              nextMove = possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\n            } else {\n              const inkyMoves = possibleMoves.map(move => {\n                const newX = ghost.x + move.x;\n                const newY = ghost.y + move.y;\n                return {\n                  move,\n                  distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\n                };\n              });\n              nextMove = inkyMoves.reduce((closest, current) => current.distance < closest.distance ? current : closest).move;\n            }\n            break;\n          case 'clyde':\n            // Tímido - huye si está muy cerca\n            const distanceToShiro = Math.abs(ghost.x - shiroPosition.x) + Math.abs(ghost.y - shiroPosition.y);\n            if (distanceToShiro < 8) {\n              // Huir si está muy cerca\n              const escapeMoves = possibleMoves.map(move => {\n                const newX = ghost.x + move.x;\n                const newY = ghost.y + move.y;\n                return {\n                  move,\n                  distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\n                };\n              });\n              nextMove = escapeMoves.reduce((farthest, current) => current.distance > farthest.distance ? current : farthest).move;\n            } else {\n              // Perseguir si está lejos\n              const chaseMoves = possibleMoves.map(move => {\n                const newX = ghost.x + move.x;\n                const newY = ghost.y + move.y;\n                return {\n                  move,\n                  distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\n                };\n              });\n              nextMove = chaseMoves.reduce((closest, current) => current.distance < closest.distance ? current : closest).move;\n            }\n            break;\n          default:\n            nextMove = possibleMoves[0];\n        }\n      }\n      return {\n        ...ghost,\n        x: ghost.x + nextMove.x,\n        y: ghost.y + nextMove.y,\n        direction: nextMove,\n        lastMove: now\n      };\n    }));\n  }, [gameState, maze, shiroPosition, direction, frozenGhosts]);\n\n  // Controles táctiles para móvil\n  const handleTouchStart = useCallback(e => {\n    e.preventDefault();\n    const touch = e.touches[0];\n    setTouchStart({\n      x: touch.clientX,\n      y: touch.clientY\n    });\n  }, []);\n  const handleTouchMove = useCallback(e => {\n    e.preventDefault();\n  }, []);\n  const handleTouchEnd = useCallback(e => {\n    e.preventDefault();\n    const touch = e.changedTouches[0];\n    setTouchEnd({\n      x: touch.clientX,\n      y: touch.clientY\n    });\n    const deltaX = touch.clientX - touchStart.x;\n    const deltaY = touch.clientY - touchStart.y;\n    const minSwipeDistance = 30;\n\n    // Determinar dirección del swipe\n    if (Math.abs(deltaX) > Math.abs(deltaY)) {\n      // Movimiento horizontal\n      if (Math.abs(deltaX) > minSwipeDistance) {\n        if (deltaX > 0) {\n          setDirection({\n            x: 1,\n            y: 0\n          }); // Derecha\n        } else {\n          setDirection({\n            x: -1,\n            y: 0\n          }); // Izquierda\n        }\n      }\n    } else {\n      // Movimiento vertical\n      if (Math.abs(deltaY) > minSwipeDistance) {\n        if (deltaY > 0) {\n          setDirection({\n            x: 0,\n            y: 1\n          }); // Abajo\n        } else {\n          setDirection({\n            x: 0,\n            y: -1\n          }); // Arriba\n        }\n      }\n    }\n  }, [touchStart]);\n\n  // Controles del teclado y táctiles\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (!e || !e.key) return;\n      e.preventDefault();\n      switch (e.key) {\n        case 'ArrowUp':\n          setDirection({\n            x: 0,\n            y: -1\n          });\n          break;\n        case 'ArrowDown':\n          setDirection({\n            x: 0,\n            y: 1\n          });\n          break;\n        case 'ArrowLeft':\n          setDirection({\n            x: -1,\n            y: 0\n          });\n          break;\n        case 'ArrowRight':\n          setDirection({\n            x: 1,\n            y: 0\n          });\n          break;\n        case ' ':\n          if (gameState === GAME_STATES.READY) {\n            setGameState(GAME_STATES.PLAYING);\n          } else if (gameState === GAME_STATES.PLAYING) {\n            setGameState(GAME_STATES.PAUSED);\n          } else if (gameState === GAME_STATES.PAUSED) {\n            setGameState(GAME_STATES.PLAYING);\n          }\n          break;\n        case 'r':\n          if (gameState === GAME_STATES.GAME_OVER) {\n            // Reiniciar juego\n            setShiroPosition({\n              x: 9,\n              y: 15\n            });\n            setMaze(MAZE);\n            setScore(0);\n            setLives(3);\n            setLevel(1);\n            setGameState(GAME_STATES.READY);\n            setDirection({\n              x: 0,\n              y: 0\n            });\n            setNextDirection({\n              x: 0,\n              y: 0\n            });\n            setPowerMode(false);\n            setPowerModeTimer(0);\n            setSpeedBoost(false);\n            setDoublePoints(false);\n            setFrozenGhosts(false);\n            setCombo(0);\n            setGhostsEaten(0);\n            setGameTime(0);\n            setDotsEaten(0);\n            setPowerUps([]);\n            setParticles([]);\n            setDeathAnimation(false);\n            setKillerGhost(null);\n            clearTimeout(deathTimeoutRef.current);\n            setGhosts([{\n              id: 'blinky',\n              x: 9,\n              y: 9,\n              direction: {\n                x: 1,\n                y: 0\n              },\n              type: GHOST_TYPES.BLINKY,\n              mode: 'chase',\n              lastMove: Date.now()\n            }, {\n              id: 'pinky',\n              x: 10,\n              y: 9,\n              direction: {\n                x: -1,\n                y: 0\n              },\n              type: GHOST_TYPES.PINKY,\n              mode: 'chase',\n              lastMove: Date.now()\n            }, {\n              id: 'inky',\n              x: 9,\n              y: 10,\n              direction: {\n                x: 0,\n                y: 1\n              },\n              type: GHOST_TYPES.INKY,\n              mode: 'chase',\n              lastMove: Date.now()\n            }, {\n              id: 'clyde',\n              x: 10,\n              y: 10,\n              direction: {\n                x: 0,\n                y: -1\n              },\n              type: GHOST_TYPES.CLYDE,\n              mode: 'chase',\n              lastMove: Date.now()\n            }]);\n          }\n          break;\n        case 'Enter':\n          if (gameState === GAME_STATES.DEATH_SCREEN) {\n            // Saltar la animación de muerte\n            clearTimeout(deathTimeoutRef.current);\n            setDeathAnimation(false);\n            setLives(l => l - 1);\n            if (lives <= 1) {\n              if (score > highScore) {\n                setHighScore(score);\n                localStorage.setItem('shiroNekoHighScore', score.toString());\n              }\n              setGameState(GAME_STATES.GAME_OVER);\n            } else {\n              setShiroPosition({\n                x: 9,\n                y: 15\n              });\n              setGhosts([{\n                id: 'blinky',\n                x: 9,\n                y: 9,\n                direction: {\n                  x: 1,\n                  y: 0\n                },\n                type: GHOST_TYPES.BLINKY,\n                mode: 'chase',\n                lastMove: Date.now()\n              }, {\n                id: 'pinky',\n                x: 10,\n                y: 9,\n                direction: {\n                  x: -1,\n                  y: 0\n                },\n                type: GHOST_TYPES.PINKY,\n                mode: 'chase',\n                lastMove: Date.now()\n              }, {\n                id: 'inky',\n                x: 9,\n                y: 10,\n                direction: {\n                  x: 0,\n                  y: 1\n                },\n                type: GHOST_TYPES.INKY,\n                mode: 'chase',\n                lastMove: Date.now()\n              }, {\n                id: 'clyde',\n                x: 10,\n                y: 10,\n                direction: {\n                  x: 0,\n                  y: -1\n                },\n                type: GHOST_TYPES.CLYDE,\n                mode: 'chase',\n                lastMove: Date.now()\n              }]);\n              setGameState(GAME_STATES.READY);\n              setKillerGhost(null);\n            }\n          }\n          break;\n        case 's':\n          setShowStats(!showStats);\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n\n    // Añadir event listeners para controles táctiles\n    if (isMobile) {\n      document.addEventListener('touchstart', handleTouchStart, {\n        passive: false\n      });\n      document.addEventListener('touchmove', handleTouchMove, {\n        passive: false\n      });\n      document.addEventListener('touchend', handleTouchEnd, {\n        passive: false\n      });\n    }\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n      if (isMobile) {\n        document.removeEventListener('touchstart', handleTouchStart);\n        document.removeEventListener('touchmove', handleTouchMove);\n        document.removeEventListener('touchend', handleTouchEnd);\n      }\n    };\n  }, [gameState, isMobile, handleTouchStart, handleTouchMove, handleTouchEnd]);\n\n  // Game loop principal con efectos de tiempo\n  useEffect(() => {\n    if (gameState === GAME_STATES.PLAYING) {\n      let speed = 150;\n\n      // Ajustar velocidad según efectos activos\n      if (speedBoost) speed = 100;\n      if (timeSlow) speed = 250; // Más lento para el jugador también\n      if (rainbowMode) speed = 80; // Súper rápido\n\n      gameLoopRef.current = setInterval(() => {\n        if (direction.x !== 0 || direction.y !== 0) {\n          moveShiro(direction);\n        }\n\n        // Los fantasmas se mueven más lento en modo tiempo lento\n        if (!timeSlow || Math.random() < 0.3) {\n          moveGhosts();\n        }\n\n        // Efecto imán - atraer puntos cercanos\n        if (magnetMode) {\n          attractNearbyDots();\n        }\n      }, speed);\n    } else {\n      clearInterval(gameLoopRef.current);\n    }\n    return () => clearInterval(gameLoopRef.current);\n  }, [gameState, direction, moveShiro, moveGhosts, speedBoost, timeSlow, rainbowMode, magnetMode]);\n\n  // Atraer puntos con el imán\n  const attractNearbyDots = useCallback(() => {\n    const radius = 2;\n    let dotsCollected = 0;\n    setMaze(prevMaze => {\n      const newMaze = [...prevMaze];\n      for (let dy = -radius; dy <= radius; dy++) {\n        for (let dx = -radius; dx <= radius; dx++) {\n          const x = shiroPosition.x + dx;\n          const y = shiroPosition.y + dy;\n          if (x >= 0 && x < GRID_SIZE && y >= 0 && y < GRID_SIZE) {\n            if (newMaze[y][x] === 2 || newMaze[y][x] === 3) {\n              const points = newMaze[y][x] === 3 ? 50 : 10;\n              setScore(s => s + (doublePoints ? points * 2 : points));\n              newMaze[y][x] = 0;\n              dotsCollected++;\n\n              // Crear partícula de atracción\n              const particle = {\n                id: Date.now() + Math.random() + dx + dy,\n                x,\n                y,\n                text: '🧲',\n                type: 'magnet-collect',\n                life: 600\n              };\n              setParticles(prev => [...prev, particle]);\n            }\n          }\n        }\n      }\n      return newMaze;\n    });\n    if (dotsCollected > 0) {\n      setDotsEaten(d => d + dotsCollected);\n    }\n  }, [shiroPosition, doublePoints]);\n\n  // Power mode timer\n  useEffect(() => {\n    if (powerMode && powerModeTimer > 0) {\n      powerModeRef.current = setTimeout(() => {\n        setPowerModeTimer(t => t - 100);\n      }, 100);\n    } else if (powerMode && powerModeTimer <= 0) {\n      setPowerMode(false);\n      setGhosts(prevGhosts => prevGhosts.map(ghost => ({\n        ...ghost,\n        mode: 'chase'\n      })));\n    }\n    return () => clearTimeout(powerModeRef.current);\n  }, [powerMode, powerModeTimer]);\n  const renderCell = (cell, x, y) => {\n    let className = 'cell';\n    let content = '';\n    if (cell === 1) {\n      className += ' wall';\n    } else if (cell === 2) {\n      content = '·';\n    } else if (cell === 3) {\n      content = '●';\n      className += ' power-pellet';\n    }\n\n    // Renderizar Shiro Neko con imagen personalizada y efectos\n    if (shiroPosition.x === x && shiroPosition.y === y) {\n      content = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: protagonistaImg,\n        alt: \"Shiro Neko\",\n        className: \"protagonist-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 17\n      }, this);\n      className += ' shiro';\n      if (powerMode) className += ' power-mode';\n      if (speedBoost) className += ' speed-boost';\n      if (fireMode) className += ' fire-mode';\n      if (ghostMode) className += ' ghost-mode';\n      if (shieldActive) className += ' shield-mode';\n      if (rainbowMode) className += ' rainbow-mode';\n    }\n\n    // Renderizar power-ups\n    const powerUpAtPosition = powerUps.find(powerUp => powerUp.x === x && powerUp.y === y);\n    if (powerUpAtPosition && !(shiroPosition.x === x && shiroPosition.y === y)) {\n      content = powerUpAtPosition.emoji;\n      className += ' power-up';\n    }\n\n    // Renderizar fantasmas\n    const ghostAtPosition = ghosts.find(ghost => ghost.x === x && ghost.y === y);\n    if (ghostAtPosition && !(shiroPosition.x === x && shiroPosition.y === y)) {\n      content = ghostAtPosition.type.emoji;\n      className += ` ghost ${ghostAtPosition.mode}`;\n      if (ghostAtPosition.mode === 'frightened') {\n        className += ' frightened';\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: content\n    }, `${x}-${y}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1061,\n      columnNumber: 7\n    }, this);\n  };\n  const getGameStateMessage = () => {\n    switch (gameState) {\n      case GAME_STATES.READY:\n        return \"¡Presiona ESPACIO para comenzar!\";\n      case GAME_STATES.PAUSED:\n        return \"PAUSADO - Presiona ESPACIO para continuar\";\n      case GAME_STATES.DEATH_SCREEN:\n        return \"\";\n      case GAME_STATES.GAME_OVER:\n        return \"GAME OVER - Presiona R para reiniciar\";\n      case GAME_STATES.LEVEL_COMPLETE:\n        return \"¡NIVEL COMPLETADO! Preparando siguiente nivel...\";\n      default:\n        return \"\";\n    }\n  };\n\n  // Renderizar pantalla de muerte\n  const renderDeathScreen = () => {\n    if (gameState !== GAME_STATES.DEATH_SCREEN) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"death-screen-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"death-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"death-animation\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"death-explosion\",\n            children: \"\\uD83D\\uDCA5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: protagonistaImg,\n            alt: \"Shiro Neko\",\n            className: \"dying-protagonist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1093,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"death-effects\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"death-particle\",\n              children: \"\\u26A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1099,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"death-particle\",\n              children: \"\\uD83D\\uDC80\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"death-particle\",\n              children: \"\\uD83C\\uDF1F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"death-particle\",\n              children: \"\\uD83D\\uDCA5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"death-particle\",\n              children: \"\\uD83D\\uDE35\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1098,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1091,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"death-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"death-title\",\n            children: \"\\uD83D\\uDC80 \\xA1OH NO! \\uD83D\\uDC80\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"death-subtitle\",\n            children: killerGhost && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [killerGhost.type.emoji, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: killerGhost.type.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1112,\n                columnNumber: 44\n              }, this), \" te ha atrapado!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1111,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"death-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"death-stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Puntuaci\\xF3n Final:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: score.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1120,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"death-stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Nivel Alcanzado:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: level\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1124,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"death-stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Tiempo Jugado:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1127,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: formatTime(gameTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1128,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"death-stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Fantasmas Comidos:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: ghostsEaten\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1132,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1117,\n            columnNumber: 13\n          }, this), lives > 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"death-continue\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"lives-remaining\",\n              children: [\"Te quedan \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: lives - 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1139,\n                columnNumber: 29\n              }, this), \" vida\", lives - 1 !== 1 ? 's' : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"continue-instruction\",\n              children: [\"Presiona \", /*#__PURE__*/_jsxDEV(\"kbd\", {\n                children: \"ENTER\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1142,\n                columnNumber: 28\n              }, this), \" para continuar o espera...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1141,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1137,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"final-death\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"game-over-message\",\n              children: \"\\xA1Se acabaron las vidas!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1147,\n              columnNumber: 17\n            }, this), score > highScore && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"new-record\",\n              children: \"\\uD83C\\uDFC6 \\xA1NUEVO R\\xC9CORD! \\uD83C\\uDFC6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1149,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"death-countdown\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"countdown-bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1090,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1089,\n      columnNumber: 7\n    }, this);\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // Renderizar interfaz móvil compacta\n  const renderMobileInterface = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mobile-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: protagonistaImg,\n          alt: \"Shiro Neko\",\n          className: \"avatar-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-bar score-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Puntuaci\\xF3n:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: score.toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-bar record-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"R\\xE9cord:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: highScore.toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-bar lives-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Vidas:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: '❤️'.repeat(lives)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-bar level-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Nivel:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: level\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-bar time-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Tiempo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: formatTime(gameTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile-message\",\n      children: [isMobile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mobile-instruction\",\n          children: \"\\uD83D\\uDCF1 Desliza para mover | Toca para pausar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mobile-description\",\n          children: \"Come todos los puntos, power-ups y evita los fantasmas!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1208,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : getGameStateMessage(), powerMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"power-info-mobile\",\n        children: \"\\xA1MODO PODER ACTIVO!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1213,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile-game-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mobile-game-board ${flashEffect} ${timeSlow ? 'time-slow' : ''} ${rainbowMode ? 'rainbow-mode' : ''}`,\n        style: {\n          transform: screenShake > 0 ? `translate(${(Math.random() - 0.5) * screenShake}px, ${(Math.random() - 0.5) * screenShake}px)` : 'none'\n        },\n        onTouchStart: handleTouchStart,\n        onTouchMove: handleTouchMove,\n        onTouchEnd: handleTouchEnd,\n        children: [maze.map((row, y) => row.map((cell, x) => renderCell(cell, x, y))), particles.map(particle => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `particle ${particle.type}`,\n          style: {\n            left: `${particle.x * CELL_SIZE + 15}px`,\n            top: `${particle.y * CELL_SIZE + 15}px`,\n            opacity: particle.life / 1000,\n            transform: `scale(${particle.life / 1000 + 0.5})`\n          },\n          children: particle.text\n        }, particle.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1233,\n          columnNumber: 13\n        }, this)), fireMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"screen-effect fire-overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1248,\n          columnNumber: 24\n        }, this), ghostMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"screen-effect ghost-overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1249,\n          columnNumber: 25\n        }, this), shieldActive && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"screen-effect shield-overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1250,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile-controls-new\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-pad-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-pad\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"d-pad-btn up\",\n            onTouchStart: e => {\n              e.preventDefault();\n              setDirection({\n                x: 0,\n                y: -1\n              });\n            },\n            children: \"\\u2B06\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-pad-middle\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"d-pad-btn left\",\n              onTouchStart: e => {\n                e.preventDefault();\n                setDirection({\n                  x: -1,\n                  y: 0\n                });\n              },\n              children: \"\\u2B05\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-pad-center\",\n              children: \"\\uD83D\\uDCF1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"d-pad-btn right\",\n              onTouchStart: e => {\n                e.preventDefault();\n                setDirection({\n                  x: 1,\n                  y: 0\n                });\n              },\n              children: \"\\u27A1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1278,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"d-pad-btn down\",\n            onTouchStart: e => {\n              e.preventDefault();\n              setDirection({\n                x: 0,\n                y: 1\n              });\n            },\n            children: \"\\u2B07\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1288,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-label\",\n          children: \"Desliza para mover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-btn pause-btn-new\",\n          onClick: () => {\n            if (gameState === GAME_STATES.PLAYING) {\n              setGameState(GAME_STATES.PAUSED);\n            } else if (gameState === GAME_STATES.PAUSED) {\n              setGameState(GAME_STATES.PLAYING);\n            }\n          },\n          children: gameState === GAME_STATES.PLAYING ? '⏸️' : '▶️'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-btn stats-btn-new\",\n          onClick: () => setShowStats(!showStats),\n          children: \"\\uD83D\\uDCCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1301,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1255,\n      columnNumber: 7\n    }, this), showStats && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile-stats-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-stats-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCCA Estad\\xEDsticas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-stats\",\n            onClick: () => setShowStats(false),\n            children: \"\\u274C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1330,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [\"Puntos comidos: \", dotsEaten, \"/\", totalDots]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1333,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [\"Fantasmas comidos: \", ghostsEaten]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1334,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [\"Mejor combo: \", combo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [\"Tiempo jugado: \", formatTime(gameTime)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1336,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [\"Puntos por minuto: \", gameTime > 0 ? Math.round(score / (gameTime / 60)) : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1337,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1332,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1327,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1326,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1171,\n    columnNumber: 5\n  }, this);\n\n  // Renderizar interfaz desktop\n  const renderDesktopInterface = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"desktop-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDC31 Shiro Neko Pacman \\uD83D\\uDC31\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score\",\n          children: [\"Puntuaci\\xF3n: \", score.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"high-score\",\n          children: [\"R\\xE9cord: \", highScore.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lives\",\n          children: [\"Vidas: \", '❤️'.repeat(lives)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"level\",\n          children: [\"Nivel: \", level]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time\",\n          children: [\"Tiempo: \", formatTime(gameTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1355,\n          columnNumber: 11\n        }, this), combo > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"combo\",\n          children: [\"Combo: x\", combo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1356,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"power-ups-status\",\n        children: [powerMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"power-timer\",\n          children: [\"\\uD83C\\uDF1F Power Mode: \", Math.ceil(powerModeTimer / 1000), \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1361,\n          columnNumber: 13\n        }, this), speedBoost && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-effect speed\",\n          children: \"\\u26A1 Speed Boost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1365,\n          columnNumber: 26\n        }, this), doublePoints && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-effect points\",\n          children: \"\\uD83D\\uDC8E Double Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1366,\n          columnNumber: 28\n        }, this), frozenGhosts && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-effect freeze\",\n          children: \"\\u2744\\uFE0F Frozen Ghosts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1367,\n          columnNumber: 28\n        }, this), fireMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-effect fire\",\n          children: \"\\uD83D\\uDD25 Fire Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1368,\n          columnNumber: 24\n        }, this), ghostMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-effect ghost\",\n          children: \"\\uD83D\\uDC7B Ghost Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1369,\n          columnNumber: 25\n        }, this), timeSlow && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-effect time\",\n          children: \"\\u23F0 Time Slow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1370,\n          columnNumber: 24\n        }, this), magnetMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-effect magnet\",\n          children: \"\\uD83E\\uDDF2 Magnet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1371,\n          columnNumber: 26\n        }, this), shieldActive && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-effect shield\",\n          children: \"\\uD83D\\uDEE1\\uFE0F Shield\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1372,\n          columnNumber: 28\n        }, this), tornadoMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-effect tornado\",\n          children: \"\\uD83C\\uDF2A\\uFE0F Tornado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1373,\n          columnNumber: 27\n        }, this), rainbowMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-effect rainbow\",\n          children: \"\\uD83C\\uDF08 Rainbow Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1374,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-state-message\",\n        children: getGameStateMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uD83C\\uDFAE Flechas: Mover | ESPACIO: Pausa | R: Reiniciar | S: Estad\\xEDsticas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1382,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Come todos los puntos, power-ups y evita los fantasmas!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1383,\n          columnNumber: 11\n        }, this), powerMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"power-info\",\n          children: \"\\xA1MODO PODER ACTIVO! \\xA1Come fantasmas para combos!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1384,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1381,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `game-board ${flashEffect} ${timeSlow ? 'time-slow' : ''} ${rainbowMode ? 'rainbow-mode' : ''}`,\n        style: {\n          transform: screenShake > 0 ? `translate(${(Math.random() - 0.5) * screenShake}px, ${(Math.random() - 0.5) * screenShake}px)` : 'none'\n        },\n        children: [maze.map((row, y) => row.map((cell, x) => renderCell(cell, x, y))), particles.map(particle => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `particle ${particle.type}`,\n          style: {\n            left: `${particle.x * CELL_SIZE + 15}px`,\n            top: `${particle.y * CELL_SIZE + 15}px`,\n            opacity: particle.life / 1000,\n            transform: `scale(${particle.life / 1000 + 0.5})`\n          },\n          children: particle.text\n        }, particle.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1401,\n          columnNumber: 13\n        }, this)), fireMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"screen-effect fire-overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1416,\n          columnNumber: 24\n        }, this), ghostMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"screen-effect ghost-overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1417,\n          columnNumber: 25\n        }, this), shieldActive && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"screen-effect shield-overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1418,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1389,\n        columnNumber: 9\n      }, this), showStats && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCCA Estad\\xEDsticas del Juego\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1423,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [\"Puntos comidos: \", dotsEaten, \"/\", totalDots]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1424,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [\"Fantasmas comidos: \", ghostsEaten]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1425,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [\"Mejor combo: \", combo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1426,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [\"Tiempo jugado: \", formatTime(gameTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1427,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [\"Puntos por minuto: \", gameTime > 0 ? Math.round(score / (gameTime / 60)) : 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1428,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1422,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1388,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ghost-info\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ghost-legend\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ghost-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uD83D\\uDC7B \", GHOST_TYPES.BLINKY.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1437,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: GHOST_TYPES.BLINKY.personality\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1438,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1436,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ghost-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uD83D\\uDFE3 \", GHOST_TYPES.PINKY.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1441,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: GHOST_TYPES.PINKY.personality\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1442,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ghost-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uD83D\\uDD35 \", GHOST_TYPES.INKY.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1445,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: GHOST_TYPES.INKY.personality\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1446,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1444,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ghost-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\uD83D\\uDFE0 \", GHOST_TYPES.CLYDE.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1449,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: GHOST_TYPES.CLYDE.personality\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1450,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1448,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1435,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1434,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"power-ups-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Power-ups Disponibles:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1456,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"power-up-legend\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u26A1 Speed Boost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1458,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDC96 Vida Extra\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1459,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDC8E Puntos Dobles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1460,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u2744\\uFE0F Congelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1461,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDD25 Modo Fuego\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1462,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDC7B Modo Fantasma\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1463,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u23F0 Tiempo Lento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1464,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83E\\uDDF2 Im\\xE1n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1465,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDEE1\\uFE0F Escudo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1466,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83C\\uDF2A\\uFE0F Tornado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1467,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u26A1 Rayo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1468,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83C\\uDF08 Arco\\xEDris\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1469,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1457,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1455,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1433,\n      columnNumber: 7\n    }, this), isMobile && renderMobileControls(), renderDeathScreen()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1347,\n    columnNumber: 5\n  }, this);\n\n  // Renderizar controles móviles\n  function renderMobileControls() {\n    if (gameState !== GAME_STATES.PLAYING && gameState !== GAME_STATES.PAUSED) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-control-instructions\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"swipe-hint\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"swipe-arrows\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"swipe-arrow up\",\n              children: \"\\u2B06\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1491,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"swipe-arrow-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"swipe-arrow left\",\n                children: \"\\u2B05\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1493,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"swipe-center\",\n                children: \"\\uD83D\\uDCF1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1494,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"swipe-arrow right\",\n                children: \"\\u27A1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1495,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1492,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"swipe-arrow down\",\n              children: \"\\u2B07\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1497,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1490,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"swipe-text\",\n            children: \"Desliza para mover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1499,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mobile-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mobile-btn pause-btn\",\n            onClick: () => {\n              if (gameState === GAME_STATES.PLAYING) {\n                setGameState(GAME_STATES.PAUSED);\n              } else if (gameState === GAME_STATES.PAUSED) {\n                setGameState(GAME_STATES.PLAYING);\n              }\n            },\n            children: gameState === GAME_STATES.PLAYING ? '⏸️' : '▶️'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1503,\n            columnNumber: 13\n          }, this), showStats && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mobile-btn stats-btn\",\n            onClick: () => setShowStats(false),\n            children: \"\\u274C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1517,\n            columnNumber: 15\n          }, this), !showStats && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mobile-btn stats-btn\",\n            onClick: () => setShowStats(true),\n            children: \"\\uD83D\\uDCCA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1526,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1502,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1488,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1487,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(App, \"KyhNSuiNR1P5cXTajlWJZpLiihs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","protagonistaImg","jsxDEV","_jsxDEV","Fragment","_Fragment","GRID_SIZE","CELL_SIZE","SOUNDS","DOT","POWER_PELLET","GHOST_EATEN","DEATH","LEVEL_COMPLETE","GAME_START","MAZE","GHOST_TYPES","BLINKY","emoji","color","speed","name","personality","PINKY","INKY","CLYDE","POWER_UPS","SPEED_BOOST","points","duration","description","EXTRA_LIFE","effect","DOUBLE_POINTS","FREEZE_GHOSTS","FIRE_MODE","GHOST_MODE","TIME_SLOW","MAGNET","SHIELD","TORNADO","LIGHTNING","RAINBOW","GAME_STATES","READY","PLAYING","PAUSED","DEATH_SCREEN","GAME_OVER","POWER_MODE","App","_s","shiroPosition","setShiroPosition","x","y","maze","setMaze","score","setScore","highScore","setHighScore","parseInt","localStorage","getItem","lives","setLives","level","setLevel","gameState","setGameState","direction","setDirection","nextDirection","setNextDirection","powerMode","setPowerMode","powerModeTimer","setPowerModeTimer","speedBoost","setSpeedBoost","doublePoints","setDoublePoints","frozenGhosts","setFrozenGhosts","fireMode","setFireMode","ghostMode","setGhostMode","timeSlow","setTimeSlow","magnetMode","setMagnetMode","shieldActive","setShieldActive","tornadoMode","setTornadoMode","rainbowMode","setRainbowMode","screenShake","setScreenShake","flashEffect","setFlashEffect","activeEffects","setActiveEffects","combo","setCombo","touchStart","setTouchStart","touchEnd","setTouchEnd","isMobile","setIsMobile","ghostsEaten","setGhostsEaten","gameTime","setGameTime","ghosts","setGhosts","id","type","mode","lastMove","Date","now","totalDots","setTotalDots","dotsEaten","setDotsEaten","powerUps","setPowerUps","particles","setParticles","showStats","setShowStats","deathAnimation","setDeathAnimation","killerGhost","setKillerGhost","gameLoopRef","powerModeRef","gameTimeRef","deathTimeoutRef","dots","flat","filter","cell","length","checkMobile","isMobileDevice","test","navigator","userAgent","window","innerWidth","addEventListener","removeEventListener","playSound","soundType","console","log","particle","Math","random","text","life","prev","applyPowerUpEffect","startTime","setTimeout","l","triggerScreenEffect","aspirateNearbyDots","map","ghost","generatePowerUp","powerUpTypes","Object","keys","rarePowerUps","commonPowerUps","includes","randomType","floor","newPowerUp","spawnTime","createSpawnAnimation","effectType","shakeInterval","setInterval","clearInterval","createPowerUpAnimation","i","radius","dotsCollected","prevMaze","newMaze","dy","dx","s","d","interval","current","t","checkGhostCollision","position","some","moveShiro","newDirection","newX","newY","newPosition","powerUpAtPosition","find","powerUp","p","ghostPoints","c","g","prevGhosts","killer","setItem","toString","isPowerPellet","levelBonus","moveGhosts","possibleMoves","move","nextMove","awayMoves","distance","abs","reduce","farthest","directMoves","closest","targetX","targetY","ambushMoves","inkyMoves","distanceToShiro","escapeMoves","chaseMoves","handleTouchStart","e","preventDefault","touch","touches","clientX","clientY","handleTouchMove","handleTouchEnd","changedTouches","deltaX","deltaY","minSwipeDistance","handleKeyPress","key","clearTimeout","document","passive","attractNearbyDots","renderCell","className","content","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ghostAtPosition","children","getGameStateMessage","renderDeathScreen","toLocaleString","formatTime","seconds","mins","secs","padStart","renderMobileInterface","repeat","style","transform","onTouchStart","onTouchMove","onTouchEnd","row","left","top","opacity","onClick","round","renderDesktopInterface","ceil","renderMobileControls","_c","$RefreshReg$"],"sources":["C:/Users/usuario/Downloads/juego/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport './App.css';\r\nimport protagonistaImg from './protagonista.png';\r\n\r\nconst GRID_SIZE = 20;\r\nconst CELL_SIZE = 30;\r\n\r\n// Configuración de sonidos\r\nconst SOUNDS = {\r\n  DOT: '🔊 Chomp!',\r\n  POWER_PELLET: '🔊 Power Up!',\r\n  GHOST_EATEN: '🔊 Ghost Eaten!',\r\n  DEATH: '🔊 Oh no!',\r\n  LEVEL_COMPLETE: '🔊 Level Complete!',\r\n  GAME_START: '🔊 Game Start!'\r\n};\r\n\r\n// Laberinto mejorado\r\nconst MAZE = [\r\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n  [1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1],\r\n  [1, 3, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 3, 1],\r\n  [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1],\r\n  [1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1],\r\n  [1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1],\r\n  [1, 1, 1, 1, 2, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 1],\r\n  [0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0],\r\n  [1, 1, 1, 1, 2, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 2, 1, 1, 1, 1],\r\n  [0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0],\r\n  [1, 1, 1, 1, 2, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 1],\r\n  [0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0],\r\n  [1, 1, 1, 1, 2, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 1],\r\n  [1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1],\r\n  [1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1],\r\n  [1, 3, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 3, 1],\r\n  [1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1],\r\n  [1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1],\r\n  [1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1],\r\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\r\n];\r\n\r\n// Tipos de enemigos con diferentes comportamientos y personalidades\r\nconst GHOST_TYPES = {\r\n  BLINKY: {\r\n    emoji: '👻',\r\n    color: '#ff0000',\r\n    speed: 180,\r\n    name: 'Blinky',\r\n    personality: 'Agresivo - Te persigue directamente'\r\n  },\r\n  PINKY: {\r\n    emoji: '🟣',\r\n    color: '#ffb8ff',\r\n    speed: 200,\r\n    name: 'Pinky',\r\n    personality: 'Estratégico - Intenta emboscarte'\r\n  },\r\n  INKY: {\r\n    emoji: '🔵',\r\n    color: '#00ffff',\r\n    speed: 220,\r\n    name: 'Inky',\r\n    personality: 'Impredecible - Movimientos erráticos'\r\n  },\r\n  CLYDE: {\r\n    emoji: '🟠',\r\n    color: '#ffb852',\r\n    speed: 240,\r\n    name: 'Clyde',\r\n    personality: 'Tímido - Huye cuando te acercas'\r\n  }\r\n};\r\n\r\n// Power-ups especiales expandidos\r\nconst POWER_UPS = {\r\n  SPEED_BOOST: { emoji: '⚡', points: 100, duration: 5000, name: 'Speed Boost', description: 'Velocidad aumentada' },\r\n  EXTRA_LIFE: { emoji: '💖', points: 500, effect: 'life', name: 'Vida Extra', description: 'Ganas una vida adicional' },\r\n  DOUBLE_POINTS: { emoji: '💎', points: 200, duration: 10000, name: 'Puntos Dobles', description: 'Duplica todos los puntos' },\r\n  FREEZE_GHOSTS: { emoji: '❄️', points: 150, duration: 3000, name: 'Congelar', description: 'Los fantasmas se quedan inmóviles' },\r\n  FIRE_MODE: { emoji: '🔥', points: 300, duration: 4000, name: 'Modo Fuego', description: 'Atraviesa paredes y quema fantasmas' },\r\n  GHOST_MODE: { emoji: '👻', points: 250, duration: 6000, name: 'Modo Fantasma', description: 'Eres invisible a los enemigos' },\r\n  TIME_SLOW: { emoji: '⏰', points: 200, duration: 5000, name: 'Tiempo Lento', description: 'Todo se mueve en cámara lenta' },\r\n  MAGNET: { emoji: '🧲', points: 150, duration: 8000, name: 'Imán', description: 'Atrae puntos automáticamente' },\r\n  SHIELD: { emoji: '🛡️', points: 400, effect: 'shield', name: 'Escudo', description: 'Protección contra 1 muerte' },\r\n  TORNADO: { emoji: '🌪️', points: 350, duration: 3000, name: 'Tornado', description: 'Aspira todos los puntos cercanos' },\r\n  LIGHTNING: { emoji: '⚡', points: 500, effect: 'instant', name: 'Rayo', description: 'Elimina todos los fantasmas temporalmente' },\r\n  RAINBOW: { emoji: '🌈', points: 1000, duration: 15000, name: 'Arcoíris', description: 'Todos los efectos activos' }\r\n};\r\n\r\n// Estados del juego\r\nconst GAME_STATES = {\r\n  READY: 'ready',\r\n  PLAYING: 'playing',\r\n  PAUSED: 'paused',\r\n  DEATH_SCREEN: 'death_screen',\r\n  GAME_OVER: 'game_over',\r\n  LEVEL_COMPLETE: 'level_complete',\r\n  POWER_MODE: 'power_mode'\r\n};\r\n\r\nfunction App() {\r\n  const [shiroPosition, setShiroPosition] = useState({ x: 9, y: 15 });\r\n  const [maze, setMaze] = useState(MAZE);\r\n  const [score, setScore] = useState(0);\r\n  const [highScore, setHighScore] = useState(parseInt(localStorage.getItem('shiroNekoHighScore') || '0'));\r\n  const [lives, setLives] = useState(3);\r\n  const [level, setLevel] = useState(1);\r\n  const [gameState, setGameState] = useState(GAME_STATES.READY);\r\n  const [direction, setDirection] = useState({ x: 0, y: 0 });\r\n  const [nextDirection, setNextDirection] = useState({ x: 0, y: 0 });\r\n  const [powerMode, setPowerMode] = useState(false);\r\n  const [powerModeTimer, setPowerModeTimer] = useState(0);\r\n  const [speedBoost, setSpeedBoost] = useState(false);\r\n  const [doublePoints, setDoublePoints] = useState(false);\r\n  const [frozenGhosts, setFrozenGhosts] = useState(false);\r\n  const [fireMode, setFireMode] = useState(false);\r\n  const [ghostMode, setGhostMode] = useState(false);\r\n  const [timeSlow, setTimeSlow] = useState(false);\r\n  const [magnetMode, setMagnetMode] = useState(false);\r\n  const [shieldActive, setShieldActive] = useState(false);\r\n  const [tornadoMode, setTornadoMode] = useState(false);\r\n  const [rainbowMode, setRainbowMode] = useState(false);\r\n  const [screenShake, setScreenShake] = useState(0);\r\n  const [flashEffect, setFlashEffect] = useState('');\r\n  const [activeEffects, setActiveEffects] = useState([]);\r\n  const [combo, setCombo] = useState(0);\r\n  const [touchStart, setTouchStart] = useState({ x: 0, y: 0 });\r\n  const [touchEnd, setTouchEnd] = useState({ x: 0, y: 0 });\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const [ghostsEaten, setGhostsEaten] = useState(0);\r\n  const [gameTime, setGameTime] = useState(0);\r\n  const [ghosts, setGhosts] = useState([\r\n    { id: 'blinky', x: 9, y: 9, direction: { x: 1, y: 0 }, type: GHOST_TYPES.BLINKY, mode: 'chase', lastMove: Date.now() },\r\n    { id: 'pinky', x: 10, y: 9, direction: { x: -1, y: 0 }, type: GHOST_TYPES.PINKY, mode: 'chase', lastMove: Date.now() },\r\n    { id: 'inky', x: 9, y: 10, direction: { x: 0, y: 1 }, type: GHOST_TYPES.INKY, mode: 'chase', lastMove: Date.now() },\r\n    { id: 'clyde', x: 10, y: 10, direction: { x: 0, y: -1 }, type: GHOST_TYPES.CLYDE, mode: 'chase', lastMove: Date.now() }\r\n  ]);\r\n  const [totalDots, setTotalDots] = useState(0);\r\n  const [dotsEaten, setDotsEaten] = useState(0);\r\n  const [powerUps, setPowerUps] = useState([]);\r\n  const [particles, setParticles] = useState([]);\r\n  const [showStats, setShowStats] = useState(false);\r\n  const [deathAnimation, setDeathAnimation] = useState(false);\r\n  const [killerGhost, setKillerGhost] = useState(null);\r\n  const gameLoopRef = useRef();\r\n  const powerModeRef = useRef();\r\n  const gameTimeRef = useRef();\r\n  const deathTimeoutRef = useRef();\r\n\r\n  // Detectar si es móvil y inicializar el juego\r\n  useEffect(() => {\r\n    const dots = MAZE.flat().filter(cell => cell === 2 || cell === 3).length;\r\n    setTotalDots(dots);\r\n\r\n    // Detectar dispositivo móvil\r\n    const checkMobile = () => {\r\n      const isMobileDevice = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ||\r\n        window.innerWidth <= 768 ||\r\n        ('ontouchstart' in window);\r\n      setIsMobile(isMobileDevice);\r\n    };\r\n\r\n    checkMobile();\r\n    window.addEventListener('resize', checkMobile);\r\n\r\n    return () => window.removeEventListener('resize', checkMobile);\r\n  }, []);\r\n\r\n  // Función para reproducir sonidos y mostrar notificaciones\r\n  const playSound = useCallback((soundType) => {\r\n    console.log(SOUNDS[soundType] || `🔊 ${soundType}`);\r\n\r\n    // Crear partícula de sonido visual\r\n    const particle = {\r\n      id: Date.now() + Math.random(),\r\n      x: shiroPosition.x,\r\n      y: shiroPosition.y,\r\n      text: SOUNDS[soundType] || soundType,\r\n      type: 'sound',\r\n      life: 1000\r\n    };\r\n    setParticles(prev => [...prev, particle]);\r\n  }, [shiroPosition]);\r\n\r\n  // Aplicar efectos de power-ups\r\n  const applyPowerUpEffect = useCallback((type, duration) => {\r\n    const effect = { type, duration, startTime: Date.now() };\r\n    setActiveEffects(prev => [...prev, effect]);\r\n\r\n    switch (type) {\r\n      case 'SPEED_BOOST':\r\n        setSpeedBoost(true);\r\n        setTimeout(() => setSpeedBoost(false), duration);\r\n        break;\r\n      case 'EXTRA_LIFE':\r\n        setLives(l => l + 1);\r\n        triggerScreenEffect('life-gained');\r\n        break;\r\n      case 'DOUBLE_POINTS':\r\n        setDoublePoints(true);\r\n        setTimeout(() => setDoublePoints(false), duration);\r\n        break;\r\n      case 'FREEZE_GHOSTS':\r\n        setFrozenGhosts(true);\r\n        setTimeout(() => setFrozenGhosts(false), duration);\r\n        break;\r\n      case 'FIRE_MODE':\r\n        setFireMode(true);\r\n        setTimeout(() => setFireMode(false), duration);\r\n        break;\r\n      case 'GHOST_MODE':\r\n        setGhostMode(true);\r\n        setTimeout(() => setGhostMode(false), duration);\r\n        break;\r\n      case 'TIME_SLOW':\r\n        setTimeSlow(true);\r\n        setTimeout(() => setTimeSlow(false), duration);\r\n        break;\r\n      case 'MAGNET':\r\n        setMagnetMode(true);\r\n        setTimeout(() => setMagnetMode(false), duration);\r\n        break;\r\n      case 'SHIELD':\r\n        setShieldActive(true);\r\n        break;\r\n      case 'TORNADO':\r\n        setTornadoMode(true);\r\n        setTimeout(() => setTornadoMode(false), duration);\r\n        // Aspirar puntos cercanos\r\n        aspirateNearbyDots();\r\n        break;\r\n      case 'LIGHTNING':\r\n        // Eliminar todos los fantasmas temporalmente\r\n        setGhosts(prev => prev.map(ghost => ({ ...ghost, mode: 'stunned', x: 9, y: 9 })));\r\n        triggerScreenEffect('lightning');\r\n        setTimeout(() => {\r\n          setGhosts(prev => prev.map(ghost => ({ ...ghost, mode: 'chase' })));\r\n        }, 2000);\r\n        break;\r\n      case 'RAINBOW':\r\n        setRainbowMode(true);\r\n        setSpeedBoost(true);\r\n        setDoublePoints(true);\r\n        setMagnetMode(true);\r\n        setTimeout(() => {\r\n          setRainbowMode(false);\r\n          setSpeedBoost(false);\r\n          setDoublePoints(false);\r\n          setMagnetMode(false);\r\n        }, duration);\r\n        break;\r\n    }\r\n  }, []);\r\n\r\n  // Generar power-ups aleatoriamente con más variedad\r\n  const generatePowerUp = useCallback(() => {\r\n    if (Math.random() < 0.15 && powerUps.length < 3) { // 15% de probabilidad, hasta 3 power-ups\r\n      const powerUpTypes = Object.keys(POWER_UPS);\r\n      // Power-ups más raros tienen menor probabilidad\r\n      const rarePowerUps = ['RAINBOW', 'LIGHTNING', 'SHIELD'];\r\n      const commonPowerUps = powerUpTypes.filter(type => !rarePowerUps.includes(type));\r\n\r\n      let randomType;\r\n      if (Math.random() < 0.1) { // 10% para power-ups raros\r\n        randomType = rarePowerUps[Math.floor(Math.random() * rarePowerUps.length)];\r\n      } else {\r\n        randomType = commonPowerUps[Math.floor(Math.random() * commonPowerUps.length)];\r\n      }\r\n\r\n      // Encontrar posición vacía\r\n      let x, y;\r\n      do {\r\n        x = Math.floor(Math.random() * GRID_SIZE);\r\n        y = Math.floor(Math.random() * GRID_SIZE);\r\n      } while (maze[y][x] !== 0 || (x === shiroPosition.x && y === shiroPosition.y));\r\n\r\n      const newPowerUp = {\r\n        id: Date.now(),\r\n        x, y,\r\n        type: randomType,\r\n        ...POWER_UPS[randomType],\r\n        spawnTime: Date.now()\r\n      };\r\n\r\n      setPowerUps(prev => [...prev, newPowerUp]);\r\n\r\n      // Animación de aparición\r\n      createSpawnAnimation(x, y);\r\n    }\r\n  }, [maze, shiroPosition, powerUps.length]);\r\n\r\n  // Efectos visuales y animaciones\r\n  const triggerScreenEffect = useCallback((effectType) => {\r\n    setFlashEffect(effectType);\r\n    setTimeout(() => setFlashEffect(''), 500);\r\n\r\n    switch (effectType) {\r\n      case 'powerup-collected':\r\n        setScreenShake(5);\r\n        break;\r\n      case 'life-gained':\r\n        setScreenShake(3);\r\n        break;\r\n      case 'lightning':\r\n        setScreenShake(10);\r\n        break;\r\n      case 'death':\r\n        setScreenShake(15);\r\n        break;\r\n    }\r\n\r\n    // Reducir shake gradualmente\r\n    const shakeInterval = setInterval(() => {\r\n      setScreenShake(prev => {\r\n        if (prev <= 1) {\r\n          clearInterval(shakeInterval);\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 50);\r\n  }, []);\r\n\r\n  const createPowerUpAnimation = useCallback((x, y, emoji) => {\r\n    for (let i = 0; i < 5; i++) {\r\n      const particle = {\r\n        id: Date.now() + Math.random() + i,\r\n        x: x + (Math.random() - 0.5) * 2,\r\n        y: y + (Math.random() - 0.5) * 2,\r\n        text: emoji,\r\n        type: 'powerup-collect',\r\n        life: 1000 + Math.random() * 500\r\n      };\r\n      setParticles(prev => [...prev, particle]);\r\n    }\r\n  }, []);\r\n\r\n  const createSpawnAnimation = useCallback((x, y) => {\r\n    const particle = {\r\n      id: Date.now() + Math.random(),\r\n      x, y,\r\n      text: '✨',\r\n      type: 'spawn',\r\n      life: 1500\r\n    };\r\n    setParticles(prev => [...prev, particle]);\r\n  }, []);\r\n\r\n  const aspirateNearbyDots = useCallback(() => {\r\n    // Simular aspiración de puntos cercanos\r\n    const radius = 3;\r\n    let dotsCollected = 0;\r\n\r\n    setMaze(prevMaze => {\r\n      const newMaze = [...prevMaze];\r\n      for (let dy = -radius; dy <= radius; dy++) {\r\n        for (let dx = -radius; dx <= radius; dx++) {\r\n          const x = shiroPosition.x + dx;\r\n          const y = shiroPosition.y + dy;\r\n          if (x >= 0 && x < GRID_SIZE && y >= 0 && y < GRID_SIZE) {\r\n            if (newMaze[y][x] === 2 || newMaze[y][x] === 3) {\r\n              const points = newMaze[y][x] === 3 ? 50 : 10;\r\n              setScore(s => s + (doublePoints ? points * 2 : points));\r\n              newMaze[y][x] = 0;\r\n              dotsCollected++;\r\n\r\n              // Crear partícula de aspiración\r\n              const particle = {\r\n                id: Date.now() + Math.random() + dx + dy,\r\n                x, y,\r\n                text: '🌪️',\r\n                type: 'tornado-collect',\r\n                life: 800\r\n              };\r\n              setParticles(prev => [...prev, particle]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return newMaze;\r\n    });\r\n\r\n    setDotsEaten(d => d + dotsCollected);\r\n  }, [shiroPosition, doublePoints]);\r\n\r\n  // Actualizar partículas\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setParticles(prev => prev.filter(particle => {\r\n        particle.life -= 50;\r\n        return particle.life > 0;\r\n      }));\r\n    }, 50);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Timer del juego\r\n  useEffect(() => {\r\n    if (gameState === GAME_STATES.PLAYING) {\r\n      gameTimeRef.current = setInterval(() => {\r\n        setGameTime(t => t + 1);\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(gameTimeRef.current);\r\n    }\r\n\r\n    return () => clearInterval(gameTimeRef.current);\r\n  }, [gameState]);\r\n\r\n  // Verificar colisiones con fantasmas\r\n  const checkGhostCollision = useCallback((position) => {\r\n    return ghosts.some(ghost => ghost.x === position.x && ghost.y === position.y);\r\n  }, [ghosts]);\r\n\r\n  // Mover Shiro Neko\r\n  const moveShiro = useCallback((newDirection) => {\r\n    if (gameState !== GAME_STATES.PLAYING) return;\r\n\r\n    setShiroPosition(prev => {\r\n      const newX = prev.x + newDirection.x;\r\n      const newY = prev.y + newDirection.y;\r\n\r\n      // Verificar límites\r\n      if (newX < 0 || newX >= GRID_SIZE || newY < 0 || newY >= GRID_SIZE) {\r\n        return prev;\r\n      }\r\n\r\n      // Verificar paredes (excepto en modo fuego)\r\n      if (maze[newY][newX] === 1 && !fireMode) {\r\n        return prev;\r\n      }\r\n\r\n      const newPosition = { x: newX, y: newY };\r\n\r\n      // Verificar colisión con power-ups\r\n      const powerUpAtPosition = powerUps.find(powerUp => powerUp.x === newX && powerUp.y === newY);\r\n      if (powerUpAtPosition) {\r\n        const points = doublePoints ? powerUpAtPosition.points * 2 : powerUpAtPosition.points;\r\n        setScore(s => s + points);\r\n\r\n        // Aplicar efecto del power-up con animaciones\r\n        applyPowerUpEffect(powerUpAtPosition.type, powerUpAtPosition.duration);\r\n\r\n        // Efecto visual de recolección\r\n        triggerScreenEffect('powerup-collected');\r\n        createPowerUpAnimation(newX, newY, powerUpAtPosition.emoji);\r\n\r\n        // Remover power-up\r\n        setPowerUps(prev => prev.filter(p => p.id !== powerUpAtPosition.id));\r\n\r\n        // Crear partícula de efecto\r\n        const particle = {\r\n          id: Date.now() + Math.random(),\r\n          x: newX,\r\n          y: newY,\r\n          text: `+${points}`,\r\n          type: 'points',\r\n          life: 1500\r\n        };\r\n        setParticles(prev => [...prev, particle]);\r\n      }\r\n\r\n      // Verificar colisión con fantasmas (excepto en modo fantasma)\r\n      if (checkGhostCollision(newPosition) && !ghostMode) {\r\n        if (powerMode || fireMode) {\r\n          // Comer fantasma\r\n          playSound('GHOST_EATEN');\r\n          const ghostPoints = 200 * (combo + 1);\r\n          setScore(s => s + (doublePoints ? ghostPoints * 2 : ghostPoints));\r\n          setCombo(c => c + 1);\r\n          setGhostsEaten(g => g + 1);\r\n\r\n          // Resetear fantasma comido\r\n          setGhosts(prevGhosts =>\r\n            prevGhosts.map(ghost =>\r\n              ghost.x === newX && ghost.y === newY\r\n                ? { ...ghost, x: 9, y: 9, mode: 'frightened' }\r\n                : ghost\r\n            )\r\n          );\r\n\r\n          // Crear partícula de combo\r\n          const particle = {\r\n            id: Date.now() + Math.random(),\r\n            x: newX,\r\n            y: newY,\r\n            text: `COMBO x${combo + 1}!`,\r\n            type: 'combo',\r\n            life: 2000\r\n          };\r\n          setParticles(prev => [...prev, particle]);\r\n        } else {\r\n          // Verificar si tiene escudo activo\r\n          if (shieldActive) {\r\n            setShieldActive(false);\r\n            triggerScreenEffect('shield-used');\r\n\r\n            // Crear efecto visual de escudo\r\n            const particle = {\r\n              id: Date.now() + Math.random(),\r\n              x: newX,\r\n              y: newY,\r\n              text: '🛡️💥',\r\n              type: 'shield-break',\r\n              life: 1500\r\n            };\r\n            setParticles(prev => [...prev, particle]);\r\n\r\n            // Empujar fantasmas\r\n            setGhosts(prevGhosts =>\r\n              prevGhosts.map(ghost => {\r\n                if (ghost.x === newX && ghost.y === newY) {\r\n                  return { ...ghost, mode: 'stunned', x: 9, y: 9 };\r\n                }\r\n                return ghost;\r\n              })\r\n            );\r\n\r\n            return newPosition; // Continuar movimiento\r\n          }\r\n\r\n          // Encontrar el fantasma que mató a Shiro\r\n          const killer = ghosts.find(ghost => ghost.x === newX && ghost.y === newY);\r\n          setKillerGhost(killer);\r\n\r\n          // Activar animación de muerte\r\n          setDeathAnimation(true);\r\n          playSound('DEATH');\r\n          setCombo(0); // Reset combo\r\n          triggerScreenEffect('death');\r\n\r\n          // Cambiar a pantalla de muerte\r\n          setGameState(GAME_STATES.DEATH_SCREEN);\r\n\r\n          // Crear partículas de muerte\r\n          for (let i = 0; i < 10; i++) {\r\n            const particle = {\r\n              id: Date.now() + Math.random() + i,\r\n              x: newX + (Math.random() - 0.5) * 3,\r\n              y: newY + (Math.random() - 0.5) * 3,\r\n              text: ['💀', '⚡', '💥', '😵', '🌟'][Math.floor(Math.random() * 5)],\r\n              type: 'death',\r\n              life: 2000 + Math.random() * 1000\r\n            };\r\n            setParticles(prev => [...prev, particle]);\r\n          }\r\n\r\n          // Después de 3 segundos, decidir si game over o continuar\r\n          deathTimeoutRef.current = setTimeout(() => {\r\n            setDeathAnimation(false);\r\n            setLives(l => l - 1);\r\n\r\n            if (lives <= 1) {\r\n              // Actualizar high score\r\n              if (score > highScore) {\r\n                setHighScore(score);\r\n                localStorage.setItem('shiroNekoHighScore', score.toString());\r\n              }\r\n              setGameState(GAME_STATES.GAME_OVER);\r\n            } else {\r\n              // Resetear posiciones para continuar\r\n              setShiroPosition({ x: 9, y: 15 });\r\n              setGhosts([\r\n                { id: 'blinky', x: 9, y: 9, direction: { x: 1, y: 0 }, type: GHOST_TYPES.BLINKY, mode: 'chase', lastMove: Date.now() },\r\n                { id: 'pinky', x: 10, y: 9, direction: { x: -1, y: 0 }, type: GHOST_TYPES.PINKY, mode: 'chase', lastMove: Date.now() },\r\n                { id: 'inky', x: 9, y: 10, direction: { x: 0, y: 1 }, type: GHOST_TYPES.INKY, mode: 'chase', lastMove: Date.now() },\r\n                { id: 'clyde', x: 10, y: 10, direction: { x: 0, y: -1 }, type: GHOST_TYPES.CLYDE, mode: 'chase', lastMove: Date.now() }\r\n              ]);\r\n              setGameState(GAME_STATES.READY);\r\n              setKillerGhost(null);\r\n            }\r\n          }, 3000);\r\n\r\n          return prev;\r\n        }\r\n      }\r\n\r\n      // Comer comida\r\n      if (maze[newY][newX] === 2 || maze[newY][newX] === 3) {\r\n        const isPowerPellet = maze[newY][newX] === 3;\r\n        let points = isPowerPellet ? 50 : 10;\r\n        if (doublePoints) points *= 2;\r\n\r\n        playSound(isPowerPellet ? 'POWER_PELLET' : 'DOT');\r\n        setScore(s => s + points);\r\n        setDotsEaten(d => d + 1);\r\n\r\n        // Generar power-up ocasionalmente\r\n        generatePowerUp();\r\n\r\n        if (isPowerPellet) {\r\n          setPowerMode(true);\r\n          setPowerModeTimer(8000); // 8 segundos\r\n          setCombo(0); // Reset combo para nuevo power mode\r\n          setGhosts(prevGhosts =>\r\n            prevGhosts.map(ghost => ({ ...ghost, mode: 'frightened' }))\r\n          );\r\n        }\r\n\r\n        setMaze(prevMaze => {\r\n          const newMaze = [...prevMaze];\r\n          newMaze[newY] = [...newMaze[newY]];\r\n          newMaze[newY][newX] = 0;\r\n          return newMaze;\r\n        });\r\n\r\n        // Verificar si se completó el nivel\r\n        if (dotsEaten + 1 >= totalDots) {\r\n          setLevel(l => l + 1);\r\n          setGameState(GAME_STATES.LEVEL_COMPLETE);\r\n          playSound('LEVEL_COMPLETE');\r\n\r\n          // Bonus por completar nivel\r\n          const levelBonus = level * 1000;\r\n          setScore(s => s + levelBonus);\r\n\r\n          // Resetear para siguiente nivel\r\n          setTimeout(() => {\r\n            setMaze(MAZE);\r\n            setDotsEaten(0);\r\n            setShiroPosition({ x: 9, y: 15 });\r\n            setPowerUps([]);\r\n            setGameState(GAME_STATES.READY);\r\n          }, 3000);\r\n        }\r\n      }\r\n\r\n      return newPosition;\r\n    });\r\n  }, [gameState, maze, ghosts, powerMode, lives, checkGhostCollision, playSound, dotsEaten, totalDots, powerUps, doublePoints, combo, score, highScore, level, generatePowerUp]);\r\n\r\n  // Mover fantasmas con IA mejorada\r\n  const moveGhosts = useCallback(() => {\r\n    if (gameState !== GAME_STATES.PLAYING || frozenGhosts) return;\r\n\r\n    setGhosts(prevGhosts =>\r\n      prevGhosts.map(ghost => {\r\n        // Verificar si es tiempo de mover este fantasma (diferentes velocidades)\r\n        const now = Date.now();\r\n        if (now - ghost.lastMove < ghost.type.speed) {\r\n          return ghost;\r\n        }\r\n\r\n        const possibleMoves = [\r\n          { x: 0, y: -1 }, // Arriba\r\n          { x: 0, y: 1 },  // Abajo\r\n          { x: -1, y: 0 }, // Izquierda\r\n          { x: 1, y: 0 }   // Derecha\r\n        ].filter(move => {\r\n          const newX = ghost.x + move.x;\r\n          const newY = ghost.y + move.y;\r\n          return newX >= 0 && newX < GRID_SIZE &&\r\n            newY >= 0 && newY < GRID_SIZE &&\r\n            maze[newY][newX] !== 1;\r\n        });\r\n\r\n        if (possibleMoves.length === 0) return ghost;\r\n\r\n        let nextMove;\r\n\r\n        if (ghost.mode === 'frightened') {\r\n          // Movimiento aleatorio cuando están asustados (huyen)\r\n          const awayMoves = possibleMoves.map(move => {\r\n            const newX = ghost.x + move.x;\r\n            const newY = ghost.y + move.y;\r\n            return {\r\n              move,\r\n              distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\r\n            };\r\n          });\r\n\r\n          // Elegir el movimiento que los aleje más de Shiro\r\n          nextMove = awayMoves.reduce((farthest, current) =>\r\n            current.distance > farthest.distance ? current : farthest\r\n          ).move;\r\n        } else {\r\n          // IA específica por tipo de fantasma\r\n          switch (ghost.id) {\r\n            case 'blinky': // Agresivo - persigue directamente\r\n              const directMoves = possibleMoves.map(move => {\r\n                const newX = ghost.x + move.x;\r\n                const newY = ghost.y + move.y;\r\n                return {\r\n                  move,\r\n                  distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\r\n                };\r\n              });\r\n              nextMove = directMoves.reduce((closest, current) =>\r\n                current.distance < closest.distance ? current : closest\r\n              ).move;\r\n              break;\r\n\r\n            case 'pinky': // Estratégico - intenta emboscar\r\n              const targetX = shiroPosition.x + direction.x * 4;\r\n              const targetY = shiroPosition.y + direction.y * 4;\r\n              const ambushMoves = possibleMoves.map(move => {\r\n                const newX = ghost.x + move.x;\r\n                const newY = ghost.y + move.y;\r\n                return {\r\n                  move,\r\n                  distance: Math.abs(newX - targetX) + Math.abs(newY - targetY)\r\n                };\r\n              });\r\n              nextMove = ambushMoves.reduce((closest, current) =>\r\n                current.distance < closest.distance ? current : closest\r\n              ).move;\r\n              break;\r\n\r\n            case 'inky': // Impredecible\r\n              if (Math.random() < 0.3) {\r\n                nextMove = possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\r\n              } else {\r\n                const inkyMoves = possibleMoves.map(move => {\r\n                  const newX = ghost.x + move.x;\r\n                  const newY = ghost.y + move.y;\r\n                  return {\r\n                    move,\r\n                    distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\r\n                  };\r\n                });\r\n                nextMove = inkyMoves.reduce((closest, current) =>\r\n                  current.distance < closest.distance ? current : closest\r\n                ).move;\r\n              }\r\n              break;\r\n\r\n            case 'clyde': // Tímido - huye si está muy cerca\r\n              const distanceToShiro = Math.abs(ghost.x - shiroPosition.x) + Math.abs(ghost.y - shiroPosition.y);\r\n              if (distanceToShiro < 8) {\r\n                // Huir si está muy cerca\r\n                const escapeMoves = possibleMoves.map(move => {\r\n                  const newX = ghost.x + move.x;\r\n                  const newY = ghost.y + move.y;\r\n                  return {\r\n                    move,\r\n                    distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\r\n                  };\r\n                });\r\n                nextMove = escapeMoves.reduce((farthest, current) =>\r\n                  current.distance > farthest.distance ? current : farthest\r\n                ).move;\r\n              } else {\r\n                // Perseguir si está lejos\r\n                const chaseMoves = possibleMoves.map(move => {\r\n                  const newX = ghost.x + move.x;\r\n                  const newY = ghost.y + move.y;\r\n                  return {\r\n                    move,\r\n                    distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\r\n                  };\r\n                });\r\n                nextMove = chaseMoves.reduce((closest, current) =>\r\n                  current.distance < closest.distance ? current : closest\r\n                ).move;\r\n              }\r\n              break;\r\n\r\n            default:\r\n              nextMove = possibleMoves[0];\r\n          }\r\n        }\r\n\r\n        return {\r\n          ...ghost,\r\n          x: ghost.x + nextMove.x,\r\n          y: ghost.y + nextMove.y,\r\n          direction: nextMove,\r\n          lastMove: now\r\n        };\r\n      })\r\n    );\r\n  }, [gameState, maze, shiroPosition, direction, frozenGhosts]);\r\n\r\n  // Controles táctiles para móvil\r\n  const handleTouchStart = useCallback((e) => {\r\n    e.preventDefault();\r\n    const touch = e.touches[0];\r\n    setTouchStart({ x: touch.clientX, y: touch.clientY });\r\n  }, []);\r\n\r\n  const handleTouchMove = useCallback((e) => {\r\n    e.preventDefault();\r\n  }, []);\r\n\r\n  const handleTouchEnd = useCallback((e) => {\r\n    e.preventDefault();\r\n    const touch = e.changedTouches[0];\r\n    setTouchEnd({ x: touch.clientX, y: touch.clientY });\r\n\r\n    const deltaX = touch.clientX - touchStart.x;\r\n    const deltaY = touch.clientY - touchStart.y;\r\n    const minSwipeDistance = 30;\r\n\r\n    // Determinar dirección del swipe\r\n    if (Math.abs(deltaX) > Math.abs(deltaY)) {\r\n      // Movimiento horizontal\r\n      if (Math.abs(deltaX) > minSwipeDistance) {\r\n        if (deltaX > 0) {\r\n          setDirection({ x: 1, y: 0 }); // Derecha\r\n        } else {\r\n          setDirection({ x: -1, y: 0 }); // Izquierda\r\n        }\r\n      }\r\n    } else {\r\n      // Movimiento vertical\r\n      if (Math.abs(deltaY) > minSwipeDistance) {\r\n        if (deltaY > 0) {\r\n          setDirection({ x: 0, y: 1 }); // Abajo\r\n        } else {\r\n          setDirection({ x: 0, y: -1 }); // Arriba\r\n        }\r\n      }\r\n    }\r\n  }, [touchStart]);\r\n\r\n  // Controles del teclado y táctiles\r\n  useEffect(() => {\r\n    const handleKeyPress = (e) => {\r\n      if (!e || !e.key) return;\r\n      e.preventDefault();\r\n\r\n      switch (e.key) {\r\n        case 'ArrowUp':\r\n          setDirection({ x: 0, y: -1 });\r\n          break;\r\n        case 'ArrowDown':\r\n          setDirection({ x: 0, y: 1 });\r\n          break;\r\n        case 'ArrowLeft':\r\n          setDirection({ x: -1, y: 0 });\r\n          break;\r\n        case 'ArrowRight':\r\n          setDirection({ x: 1, y: 0 });\r\n          break;\r\n        case ' ':\r\n          if (gameState === GAME_STATES.READY) {\r\n            setGameState(GAME_STATES.PLAYING);\r\n          } else if (gameState === GAME_STATES.PLAYING) {\r\n            setGameState(GAME_STATES.PAUSED);\r\n          } else if (gameState === GAME_STATES.PAUSED) {\r\n            setGameState(GAME_STATES.PLAYING);\r\n          }\r\n          break;\r\n        case 'r':\r\n          if (gameState === GAME_STATES.GAME_OVER) {\r\n            // Reiniciar juego\r\n            setShiroPosition({ x: 9, y: 15 });\r\n            setMaze(MAZE);\r\n            setScore(0);\r\n            setLives(3);\r\n            setLevel(1);\r\n            setGameState(GAME_STATES.READY);\r\n            setDirection({ x: 0, y: 0 });\r\n            setNextDirection({ x: 0, y: 0 });\r\n            setPowerMode(false);\r\n            setPowerModeTimer(0);\r\n            setSpeedBoost(false);\r\n            setDoublePoints(false);\r\n            setFrozenGhosts(false);\r\n            setCombo(0);\r\n            setGhostsEaten(0);\r\n            setGameTime(0);\r\n            setDotsEaten(0);\r\n            setPowerUps([]);\r\n            setParticles([]);\r\n            setDeathAnimation(false);\r\n            setKillerGhost(null);\r\n            clearTimeout(deathTimeoutRef.current);\r\n            setGhosts([\r\n              { id: 'blinky', x: 9, y: 9, direction: { x: 1, y: 0 }, type: GHOST_TYPES.BLINKY, mode: 'chase', lastMove: Date.now() },\r\n              { id: 'pinky', x: 10, y: 9, direction: { x: -1, y: 0 }, type: GHOST_TYPES.PINKY, mode: 'chase', lastMove: Date.now() },\r\n              { id: 'inky', x: 9, y: 10, direction: { x: 0, y: 1 }, type: GHOST_TYPES.INKY, mode: 'chase', lastMove: Date.now() },\r\n              { id: 'clyde', x: 10, y: 10, direction: { x: 0, y: -1 }, type: GHOST_TYPES.CLYDE, mode: 'chase', lastMove: Date.now() }\r\n            ]);\r\n          }\r\n          break;\r\n        case 'Enter':\r\n          if (gameState === GAME_STATES.DEATH_SCREEN) {\r\n            // Saltar la animación de muerte\r\n            clearTimeout(deathTimeoutRef.current);\r\n            setDeathAnimation(false);\r\n            setLives(l => l - 1);\r\n\r\n            if (lives <= 1) {\r\n              if (score > highScore) {\r\n                setHighScore(score);\r\n                localStorage.setItem('shiroNekoHighScore', score.toString());\r\n              }\r\n              setGameState(GAME_STATES.GAME_OVER);\r\n            } else {\r\n              setShiroPosition({ x: 9, y: 15 });\r\n              setGhosts([\r\n                { id: 'blinky', x: 9, y: 9, direction: { x: 1, y: 0 }, type: GHOST_TYPES.BLINKY, mode: 'chase', lastMove: Date.now() },\r\n                { id: 'pinky', x: 10, y: 9, direction: { x: -1, y: 0 }, type: GHOST_TYPES.PINKY, mode: 'chase', lastMove: Date.now() },\r\n                { id: 'inky', x: 9, y: 10, direction: { x: 0, y: 1 }, type: GHOST_TYPES.INKY, mode: 'chase', lastMove: Date.now() },\r\n                { id: 'clyde', x: 10, y: 10, direction: { x: 0, y: -1 }, type: GHOST_TYPES.CLYDE, mode: 'chase', lastMove: Date.now() }\r\n              ]);\r\n              setGameState(GAME_STATES.READY);\r\n              setKillerGhost(null);\r\n            }\r\n          }\r\n          break;\r\n        case 's':\r\n          setShowStats(!showStats);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyPress);\r\n\r\n    // Añadir event listeners para controles táctiles\r\n    if (isMobile) {\r\n      document.addEventListener('touchstart', handleTouchStart, { passive: false });\r\n      document.addEventListener('touchmove', handleTouchMove, { passive: false });\r\n      document.addEventListener('touchend', handleTouchEnd, { passive: false });\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyPress);\r\n      if (isMobile) {\r\n        document.removeEventListener('touchstart', handleTouchStart);\r\n        document.removeEventListener('touchmove', handleTouchMove);\r\n        document.removeEventListener('touchend', handleTouchEnd);\r\n      }\r\n    };\r\n  }, [gameState, isMobile, handleTouchStart, handleTouchMove, handleTouchEnd]);\r\n\r\n  // Game loop principal con efectos de tiempo\r\n  useEffect(() => {\r\n    if (gameState === GAME_STATES.PLAYING) {\r\n      let speed = 150;\r\n\r\n      // Ajustar velocidad según efectos activos\r\n      if (speedBoost) speed = 100;\r\n      if (timeSlow) speed = 250; // Más lento para el jugador también\r\n      if (rainbowMode) speed = 80; // Súper rápido\r\n\r\n      gameLoopRef.current = setInterval(() => {\r\n        if (direction.x !== 0 || direction.y !== 0) {\r\n          moveShiro(direction);\r\n        }\r\n\r\n        // Los fantasmas se mueven más lento en modo tiempo lento\r\n        if (!timeSlow || Math.random() < 0.3) {\r\n          moveGhosts();\r\n        }\r\n\r\n        // Efecto imán - atraer puntos cercanos\r\n        if (magnetMode) {\r\n          attractNearbyDots();\r\n        }\r\n      }, speed);\r\n    } else {\r\n      clearInterval(gameLoopRef.current);\r\n    }\r\n\r\n    return () => clearInterval(gameLoopRef.current);\r\n  }, [gameState, direction, moveShiro, moveGhosts, speedBoost, timeSlow, rainbowMode, magnetMode]);\r\n\r\n  // Atraer puntos con el imán\r\n  const attractNearbyDots = useCallback(() => {\r\n    const radius = 2;\r\n    let dotsCollected = 0;\r\n\r\n    setMaze(prevMaze => {\r\n      const newMaze = [...prevMaze];\r\n      for (let dy = -radius; dy <= radius; dy++) {\r\n        for (let dx = -radius; dx <= radius; dx++) {\r\n          const x = shiroPosition.x + dx;\r\n          const y = shiroPosition.y + dy;\r\n          if (x >= 0 && x < GRID_SIZE && y >= 0 && y < GRID_SIZE) {\r\n            if (newMaze[y][x] === 2 || newMaze[y][x] === 3) {\r\n              const points = newMaze[y][x] === 3 ? 50 : 10;\r\n              setScore(s => s + (doublePoints ? points * 2 : points));\r\n              newMaze[y][x] = 0;\r\n              dotsCollected++;\r\n\r\n              // Crear partícula de atracción\r\n              const particle = {\r\n                id: Date.now() + Math.random() + dx + dy,\r\n                x, y,\r\n                text: '🧲',\r\n                type: 'magnet-collect',\r\n                life: 600\r\n              };\r\n              setParticles(prev => [...prev, particle]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return newMaze;\r\n    });\r\n\r\n    if (dotsCollected > 0) {\r\n      setDotsEaten(d => d + dotsCollected);\r\n    }\r\n  }, [shiroPosition, doublePoints]);\r\n\r\n  // Power mode timer\r\n  useEffect(() => {\r\n    if (powerMode && powerModeTimer > 0) {\r\n      powerModeRef.current = setTimeout(() => {\r\n        setPowerModeTimer(t => t - 100);\r\n      }, 100);\r\n    } else if (powerMode && powerModeTimer <= 0) {\r\n      setPowerMode(false);\r\n      setGhosts(prevGhosts =>\r\n        prevGhosts.map(ghost => ({ ...ghost, mode: 'chase' }))\r\n      );\r\n    }\r\n\r\n    return () => clearTimeout(powerModeRef.current);\r\n  }, [powerMode, powerModeTimer]);\r\n\r\n  const renderCell = (cell, x, y) => {\r\n    let className = 'cell';\r\n    let content = '';\r\n\r\n    if (cell === 1) {\r\n      className += ' wall';\r\n    } else if (cell === 2) {\r\n      content = '·';\r\n    } else if (cell === 3) {\r\n      content = '●';\r\n      className += ' power-pellet';\r\n    }\r\n\r\n    // Renderizar Shiro Neko con imagen personalizada y efectos\r\n    if (shiroPosition.x === x && shiroPosition.y === y) {\r\n      content = <img src={protagonistaImg} alt=\"Shiro Neko\" className=\"protagonist-img\" />;\r\n      className += ' shiro';\r\n      if (powerMode) className += ' power-mode';\r\n      if (speedBoost) className += ' speed-boost';\r\n      if (fireMode) className += ' fire-mode';\r\n      if (ghostMode) className += ' ghost-mode';\r\n      if (shieldActive) className += ' shield-mode';\r\n      if (rainbowMode) className += ' rainbow-mode';\r\n    }\r\n\r\n    // Renderizar power-ups\r\n    const powerUpAtPosition = powerUps.find(powerUp => powerUp.x === x && powerUp.y === y);\r\n    if (powerUpAtPosition && !(shiroPosition.x === x && shiroPosition.y === y)) {\r\n      content = powerUpAtPosition.emoji;\r\n      className += ' power-up';\r\n    }\r\n\r\n    // Renderizar fantasmas\r\n    const ghostAtPosition = ghosts.find(ghost => ghost.x === x && ghost.y === y);\r\n    if (ghostAtPosition && !(shiroPosition.x === x && shiroPosition.y === y)) {\r\n      content = ghostAtPosition.type.emoji;\r\n      className += ` ghost ${ghostAtPosition.mode}`;\r\n      if (ghostAtPosition.mode === 'frightened') {\r\n        className += ' frightened';\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div key={`${x}-${y}`} className={className}>\r\n        {content}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getGameStateMessage = () => {\r\n    switch (gameState) {\r\n      case GAME_STATES.READY:\r\n        return \"¡Presiona ESPACIO para comenzar!\";\r\n      case GAME_STATES.PAUSED:\r\n        return \"PAUSADO - Presiona ESPACIO para continuar\";\r\n      case GAME_STATES.DEATH_SCREEN:\r\n        return \"\";\r\n      case GAME_STATES.GAME_OVER:\r\n        return \"GAME OVER - Presiona R para reiniciar\";\r\n      case GAME_STATES.LEVEL_COMPLETE:\r\n        return \"¡NIVEL COMPLETADO! Preparando siguiente nivel...\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  // Renderizar pantalla de muerte\r\n  const renderDeathScreen = () => {\r\n    if (gameState !== GAME_STATES.DEATH_SCREEN) return null;\r\n\r\n    return (\r\n      <div className=\"death-screen-overlay\">\r\n        <div className=\"death-screen\">\r\n          <div className=\"death-animation\">\r\n            <div className=\"death-explosion\">💥</div>\r\n            <img\r\n              src={protagonistaImg}\r\n              alt=\"Shiro Neko\"\r\n              className=\"dying-protagonist\"\r\n            />\r\n            <div className=\"death-effects\">\r\n              <div className=\"death-particle\">⚡</div>\r\n              <div className=\"death-particle\">💀</div>\r\n              <div className=\"death-particle\">🌟</div>\r\n              <div className=\"death-particle\">💥</div>\r\n              <div className=\"death-particle\">😵</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"death-message\">\r\n            <h2 className=\"death-title\">💀 ¡OH NO! 💀</h2>\r\n            <div className=\"death-subtitle\">\r\n              {killerGhost && (\r\n                <p>\r\n                  {killerGhost.type.emoji} <strong>{killerGhost.type.name}</strong> te ha atrapado!\r\n                </p>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"death-stats\">\r\n              <div className=\"death-stat\">\r\n                <span className=\"stat-label\">Puntuación Final:</span>\r\n                <span className=\"stat-value\">{score.toLocaleString()}</span>\r\n              </div>\r\n              <div className=\"death-stat\">\r\n                <span className=\"stat-label\">Nivel Alcanzado:</span>\r\n                <span className=\"stat-value\">{level}</span>\r\n              </div>\r\n              <div className=\"death-stat\">\r\n                <span className=\"stat-label\">Tiempo Jugado:</span>\r\n                <span className=\"stat-value\">{formatTime(gameTime)}</span>\r\n              </div>\r\n              <div className=\"death-stat\">\r\n                <span className=\"stat-label\">Fantasmas Comidos:</span>\r\n                <span className=\"stat-value\">{ghostsEaten}</span>\r\n              </div>\r\n            </div>\r\n\r\n            {lives > 1 ? (\r\n              <div className=\"death-continue\">\r\n                <p className=\"lives-remaining\">\r\n                  Te quedan <strong>{lives - 1}</strong> vida{lives - 1 !== 1 ? 's' : ''}\r\n                </p>\r\n                <p className=\"continue-instruction\">\r\n                  Presiona <kbd>ENTER</kbd> para continuar o espera...\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"final-death\">\r\n                <p className=\"game-over-message\">¡Se acabaron las vidas!</p>\r\n                {score > highScore && (\r\n                  <p className=\"new-record\">🏆 ¡NUEVO RÉCORD! 🏆</p>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"death-countdown\">\r\n            <div className=\"countdown-bar\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  // Renderizar interfaz móvil compacta\r\n  const renderMobileInterface = () => (\r\n    <div className=\"mobile-app\">\r\n      {/* Header compacto con avatar */}\r\n      <div className=\"mobile-header\">\r\n        <div className=\"avatar-container\">\r\n          <img src={protagonistaImg} alt=\"Shiro Neko\" className=\"avatar-img\" />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats compactas en barras horizontales */}\r\n      <div className=\"mobile-stats\">\r\n        <div className=\"stat-bar score-bar\">\r\n          <span className=\"stat-label\">Puntuación:</span>\r\n          <span className=\"stat-value\">{score.toLocaleString()}</span>\r\n        </div>\r\n        <div className=\"stat-bar record-bar\">\r\n          <span className=\"stat-label\">Récord:</span>\r\n          <span className=\"stat-value\">{highScore.toLocaleString()}</span>\r\n        </div>\r\n        <div className=\"stat-bar lives-bar\">\r\n          <span className=\"stat-label\">Vidas:</span>\r\n          <span className=\"stat-value\">{'❤️'.repeat(lives)}</span>\r\n        </div>\r\n        <div className=\"stat-bar level-bar\">\r\n          <span className=\"stat-label\">Nivel:</span>\r\n          <span className=\"stat-value\">{level}</span>\r\n        </div>\r\n        <div className=\"stat-bar time-bar\">\r\n          <span className=\"stat-label\">Tiempo:</span>\r\n          <span className=\"stat-value\">{formatTime(gameTime)}</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mensaje de estado */}\r\n      <div className=\"mobile-message\">\r\n        {isMobile ? (\r\n          <>\r\n            <div className=\"mobile-instruction\">📱 Desliza para mover | Toca para pausar</div>\r\n            <div className=\"mobile-description\">Come todos los puntos, power-ups y evita los fantasmas!</div>\r\n          </>\r\n        ) : (\r\n          getGameStateMessage()\r\n        )}\r\n        {powerMode && <div className=\"power-info-mobile\">¡MODO PODER ACTIVO!</div>}\r\n      </div>\r\n\r\n      {/* Tablero de juego */}\r\n      <div className=\"mobile-game-container\">\r\n        <div \r\n          className={`mobile-game-board ${flashEffect} ${timeSlow ? 'time-slow' : ''} ${rainbowMode ? 'rainbow-mode' : ''}`}\r\n          style={{\r\n            transform: screenShake > 0 ? `translate(${(Math.random() - 0.5) * screenShake}px, ${(Math.random() - 0.5) * screenShake}px)` : 'none'\r\n          }}\r\n          onTouchStart={handleTouchStart}\r\n          onTouchMove={handleTouchMove}\r\n          onTouchEnd={handleTouchEnd}\r\n        >\r\n          {maze.map((row, y) =>\r\n            row.map((cell, x) => renderCell(cell, x, y))\r\n          )}\r\n\r\n          {/* Partículas */}\r\n          {particles.map(particle => (\r\n            <div\r\n              key={particle.id}\r\n              className={`particle ${particle.type}`}\r\n              style={{\r\n                left: `${particle.x * CELL_SIZE + 15}px`,\r\n                top: `${particle.y * CELL_SIZE + 15}px`,\r\n                opacity: particle.life / 1000,\r\n                transform: `scale(${particle.life / 1000 + 0.5})`\r\n              }}\r\n            >\r\n              {particle.text}\r\n            </div>\r\n          ))}\r\n          \r\n          {/* Efectos especiales */}\r\n          {fireMode && <div className=\"screen-effect fire-overlay\"></div>}\r\n          {ghostMode && <div className=\"screen-effect ghost-overlay\"></div>}\r\n          {shieldActive && <div className=\"screen-effect shield-overlay\"></div>}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Controles móviles mejorados */}\r\n      <div className=\"mobile-controls-new\">\r\n        <div className=\"d-pad-container\">\r\n          <div className=\"d-pad\">\r\n            <button \r\n              className=\"d-pad-btn up\"\r\n              onTouchStart={(e) => {\r\n                e.preventDefault();\r\n                setDirection({ x: 0, y: -1 });\r\n              }}\r\n            >\r\n              ⬆️\r\n            </button>\r\n            <div className=\"d-pad-middle\">\r\n              <button \r\n                className=\"d-pad-btn left\"\r\n                onTouchStart={(e) => {\r\n                  e.preventDefault();\r\n                  setDirection({ x: -1, y: 0 });\r\n                }}\r\n              >\r\n                ⬅️\r\n              </button>\r\n              <div className=\"d-pad-center\">📱</div>\r\n              <button \r\n                className=\"d-pad-btn right\"\r\n                onTouchStart={(e) => {\r\n                  e.preventDefault();\r\n                  setDirection({ x: 1, y: 0 });\r\n                }}\r\n              >\r\n                ➡️\r\n              </button>\r\n            </div>\r\n            <button \r\n              className=\"d-pad-btn down\"\r\n              onTouchStart={(e) => {\r\n                e.preventDefault();\r\n                setDirection({ x: 0, y: 1 });\r\n              }}\r\n            >\r\n              ⬇️\r\n            </button>\r\n          </div>\r\n          <div className=\"control-label\">Desliza para mover</div>\r\n        </div>\r\n\r\n        <div className=\"action-buttons\">\r\n          <button \r\n            className=\"action-btn pause-btn-new\"\r\n            onClick={() => {\r\n              if (gameState === GAME_STATES.PLAYING) {\r\n                setGameState(GAME_STATES.PAUSED);\r\n              } else if (gameState === GAME_STATES.PAUSED) {\r\n                setGameState(GAME_STATES.PLAYING);\r\n              }\r\n            }}\r\n          >\r\n            {gameState === GAME_STATES.PLAYING ? '⏸️' : '▶️'}\r\n          </button>\r\n          \r\n          <button \r\n            className=\"action-btn stats-btn-new\"\r\n            onClick={() => setShowStats(!showStats)}\r\n          >\r\n            📊\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Panel de estadísticas móvil */}\r\n      {showStats && (\r\n        <div className=\"mobile-stats-overlay\">\r\n          <div className=\"mobile-stats-panel\">\r\n            <div className=\"stats-header\">\r\n              <h3>📊 Estadísticas</h3>\r\n              <button className=\"close-stats\" onClick={() => setShowStats(false)}>❌</button>\r\n            </div>\r\n            <div className=\"stats-content\">\r\n              <div className=\"stat-item\">Puntos comidos: {dotsEaten}/{totalDots}</div>\r\n              <div className=\"stat-item\">Fantasmas comidos: {ghostsEaten}</div>\r\n              <div className=\"stat-item\">Mejor combo: {combo}</div>\r\n              <div className=\"stat-item\">Tiempo jugado: {formatTime(gameTime)}</div>\r\n              <div className=\"stat-item\">Puntos por minuto: {gameTime > 0 ? Math.round(score / (gameTime / 60)) : 0}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  // Renderizar interfaz desktop\r\n  const renderDesktopInterface = () => (\r\n    <div className=\"desktop-app\">\r\n      <div className=\"game-info\">\r\n        <h1>🐱 Shiro Neko Pacman 🐱</h1>\r\n        <div className=\"game-stats\">\r\n          <div className=\"score\">Puntuación: {score.toLocaleString()}</div>\r\n          <div className=\"high-score\">Récord: {highScore.toLocaleString()}</div>\r\n          <div className=\"lives\">Vidas: {'❤️'.repeat(lives)}</div>\r\n          <div className=\"level\">Nivel: {level}</div>\r\n          <div className=\"time\">Tiempo: {formatTime(gameTime)}</div>\r\n          {combo > 0 && <div className=\"combo\">Combo: x{combo}</div>}\r\n        </div>\r\n\r\n        <div className=\"power-ups-status\">\r\n          {powerMode && (\r\n            <div className=\"power-timer\">\r\n              🌟 Power Mode: {Math.ceil(powerModeTimer / 1000)}s\r\n            </div>\r\n          )}\r\n          {speedBoost && <div className=\"status-effect speed\">⚡ Speed Boost</div>}\r\n          {doublePoints && <div className=\"status-effect points\">💎 Double Points</div>}\r\n          {frozenGhosts && <div className=\"status-effect freeze\">❄️ Frozen Ghosts</div>}\r\n          {fireMode && <div className=\"status-effect fire\">🔥 Fire Mode</div>}\r\n          {ghostMode && <div className=\"status-effect ghost\">👻 Ghost Mode</div>}\r\n          {timeSlow && <div className=\"status-effect time\">⏰ Time Slow</div>}\r\n          {magnetMode && <div className=\"status-effect magnet\">🧲 Magnet</div>}\r\n          {shieldActive && <div className=\"status-effect shield\">🛡️ Shield</div>}\r\n          {tornadoMode && <div className=\"status-effect tornado\">🌪️ Tornado</div>}\r\n          {rainbowMode && <div className=\"status-effect rainbow\">🌈 Rainbow Mode</div>}\r\n        </div>\r\n\r\n        <div className=\"game-state-message\">\r\n          {getGameStateMessage()}\r\n        </div>\r\n\r\n        <div className=\"controls\">\r\n          <div>🎮 Flechas: Mover | ESPACIO: Pausa | R: Reiniciar | S: Estadísticas</div>\r\n          <div>Come todos los puntos, power-ups y evita los fantasmas!</div>\r\n          {powerMode && <div className=\"power-info\">¡MODO PODER ACTIVO! ¡Come fantasmas para combos!</div>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"game-container\">\r\n        <div\r\n          className={`game-board ${flashEffect} ${timeSlow ? 'time-slow' : ''} ${rainbowMode ? 'rainbow-mode' : ''}`}\r\n          style={{\r\n            transform: screenShake > 0 ? `translate(${(Math.random() - 0.5) * screenShake}px, ${(Math.random() - 0.5) * screenShake}px)` : 'none'\r\n          }}\r\n        >\r\n          {maze.map((row, y) =>\r\n            row.map((cell, x) => renderCell(cell, x, y))\r\n          )}\r\n\r\n          {/* Renderizar partículas mejoradas */}\r\n          {particles.map(particle => (\r\n            <div\r\n              key={particle.id}\r\n              className={`particle ${particle.type}`}\r\n              style={{\r\n                left: `${particle.x * CELL_SIZE + 15}px`,\r\n                top: `${particle.y * CELL_SIZE + 15}px`,\r\n                opacity: particle.life / 1000,\r\n                transform: `scale(${particle.life / 1000 + 0.5})`\r\n              }}\r\n            >\r\n              {particle.text}\r\n            </div>\r\n          ))}\r\n\r\n          {/* Efectos especiales de pantalla */}\r\n          {fireMode && <div className=\"screen-effect fire-overlay\"></div>}\r\n          {ghostMode && <div className=\"screen-effect ghost-overlay\"></div>}\r\n          {shieldActive && <div className=\"screen-effect shield-overlay\"></div>}\r\n        </div>\r\n\r\n        {showStats && (\r\n          <div className=\"stats-panel\">\r\n            <h3>📊 Estadísticas del Juego</h3>\r\n            <div className=\"stat-item\">Puntos comidos: {dotsEaten}/{totalDots}</div>\r\n            <div className=\"stat-item\">Fantasmas comidos: {ghostsEaten}</div>\r\n            <div className=\"stat-item\">Mejor combo: {combo}</div>\r\n            <div className=\"stat-item\">Tiempo jugado: {formatTime(gameTime)}</div>\r\n            <div className=\"stat-item\">Puntos por minuto: {gameTime > 0 ? Math.round(score / (gameTime / 60)) : 0}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"game-footer\">\r\n        <div className=\"ghost-info\">\r\n          <div className=\"ghost-legend\">\r\n            <div className=\"ghost-card\">\r\n              <span>👻 {GHOST_TYPES.BLINKY.name}</span>\r\n              <small>{GHOST_TYPES.BLINKY.personality}</small>\r\n            </div>\r\n            <div className=\"ghost-card\">\r\n              <span>🟣 {GHOST_TYPES.PINKY.name}</span>\r\n              <small>{GHOST_TYPES.PINKY.personality}</small>\r\n            </div>\r\n            <div className=\"ghost-card\">\r\n              <span>🔵 {GHOST_TYPES.INKY.name}</span>\r\n              <small>{GHOST_TYPES.INKY.personality}</small>\r\n            </div>\r\n            <div className=\"ghost-card\">\r\n              <span>🟠 {GHOST_TYPES.CLYDE.name}</span>\r\n              <small>{GHOST_TYPES.CLYDE.personality}</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"power-ups-info\">\r\n          <h4>Power-ups Disponibles:</h4>\r\n          <div className=\"power-up-legend\">\r\n            <span>⚡ Speed Boost</span>\r\n            <span>💖 Vida Extra</span>\r\n            <span>💎 Puntos Dobles</span>\r\n            <span>❄️ Congelar</span>\r\n            <span>🔥 Modo Fuego</span>\r\n            <span>👻 Modo Fantasma</span>\r\n            <span>⏰ Tiempo Lento</span>\r\n            <span>🧲 Imán</span>\r\n            <span>🛡️ Escudo</span>\r\n            <span>🌪️ Tornado</span>\r\n            <span>⚡ Rayo</span>\r\n            <span>🌈 Arcoíris</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Controles táctiles para móvil */}\r\n      {isMobile && renderMobileControls()}\r\n\r\n      {/* Pantalla de muerte */}\r\n      {renderDeathScreen()}\r\n    </div>\r\n  );\r\n\r\n  // Renderizar controles móviles\r\n  function renderMobileControls() {\r\n    if (gameState !== GAME_STATES.PLAYING && gameState !== GAME_STATES.PAUSED) return null;\r\n\r\n    return (\r\n      <div className=\"mobile-controls\">\r\n        <div className=\"mobile-control-instructions\">\r\n          <div className=\"swipe-hint\">\r\n            <div className=\"swipe-arrows\">\r\n              <div className=\"swipe-arrow up\">⬆️</div>\r\n              <div className=\"swipe-arrow-row\">\r\n                <div className=\"swipe-arrow left\">⬅️</div>\r\n                <div className=\"swipe-center\">📱</div>\r\n                <div className=\"swipe-arrow right\">➡️</div>\r\n              </div>\r\n              <div className=\"swipe-arrow down\">⬇️</div>\r\n            </div>\r\n            <div className=\"swipe-text\">Desliza para mover</div>\r\n          </div>\r\n\r\n          <div className=\"mobile-buttons\">\r\n            <button\r\n              className=\"mobile-btn pause-btn\"\r\n              onClick={() => {\r\n                if (gameState === GAME_STATES.PLAYING) {\r\n                  setGameState(GAME_STATES.PAUSED);\r\n                } else if (gameState === GAME_STATES.PAUSED) {\r\n                  setGameState(GAME_STATES.PLAYING);\r\n                }\r\n              }}\r\n            >\r\n              {gameState === GAME_STATES.PLAYING ? '⏸️' : '▶️'}\r\n            </button>\r\n\r\n            {showStats && (\r\n              <button\r\n                className=\"mobile-btn stats-btn\"\r\n                onClick={() => setShowStats(false)}\r\n              >\r\n                ❌\r\n              </button>\r\n            )}\r\n\r\n            {!showStats && (\r\n              <button\r\n                className=\"mobile-btn stats-btn\"\r\n                onClick={() => setShowStats(true)}\r\n              >\r\n                📊\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,OAAO,WAAW;AAClB,OAAOC,eAAe,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjD,MAAMC,SAAS,GAAG,EAAE;AACpB,MAAMC,SAAS,GAAG,EAAE;;AAEpB;AACA,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,WAAW;EAChBC,YAAY,EAAE,cAAc;EAC5BC,WAAW,EAAE,iBAAiB;EAC9BC,KAAK,EAAE,WAAW;EAClBC,cAAc,EAAE,oBAAoB;EACpCC,UAAU,EAAE;AACd,CAAC;;AAED;AACA,MAAMC,IAAI,GAAG,CACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAC7D;;AAED;AACA,MAAMC,WAAW,GAAG;EAClBC,MAAM,EAAE;IACNC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,SAAS;IAChBC,KAAK,EAAE,GAAG;IACVC,IAAI,EAAE,QAAQ;IACdC,WAAW,EAAE;EACf,CAAC;EACDC,KAAK,EAAE;IACLL,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,SAAS;IAChBC,KAAK,EAAE,GAAG;IACVC,IAAI,EAAE,OAAO;IACbC,WAAW,EAAE;EACf,CAAC;EACDE,IAAI,EAAE;IACJN,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,SAAS;IAChBC,KAAK,EAAE,GAAG;IACVC,IAAI,EAAE,MAAM;IACZC,WAAW,EAAE;EACf,CAAC;EACDG,KAAK,EAAE;IACLP,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,SAAS;IAChBC,KAAK,EAAE,GAAG;IACVC,IAAI,EAAE,OAAO;IACbC,WAAW,EAAE;EACf;AACF,CAAC;;AAED;AACA,MAAMI,SAAS,GAAG;EAChBC,WAAW,EAAE;IAAET,KAAK,EAAE,GAAG;IAAEU,MAAM,EAAE,GAAG;IAAEC,QAAQ,EAAE,IAAI;IAAER,IAAI,EAAE,aAAa;IAAES,WAAW,EAAE;EAAsB,CAAC;EACjHC,UAAU,EAAE;IAAEb,KAAK,EAAE,IAAI;IAAEU,MAAM,EAAE,GAAG;IAAEI,MAAM,EAAE,MAAM;IAAEX,IAAI,EAAE,YAAY;IAAES,WAAW,EAAE;EAA2B,CAAC;EACrHG,aAAa,EAAE;IAAEf,KAAK,EAAE,IAAI;IAAEU,MAAM,EAAE,GAAG;IAAEC,QAAQ,EAAE,KAAK;IAAER,IAAI,EAAE,eAAe;IAAES,WAAW,EAAE;EAA2B,CAAC;EAC5HI,aAAa,EAAE;IAAEhB,KAAK,EAAE,IAAI;IAAEU,MAAM,EAAE,GAAG;IAAEC,QAAQ,EAAE,IAAI;IAAER,IAAI,EAAE,UAAU;IAAES,WAAW,EAAE;EAAoC,CAAC;EAC/HK,SAAS,EAAE;IAAEjB,KAAK,EAAE,IAAI;IAAEU,MAAM,EAAE,GAAG;IAAEC,QAAQ,EAAE,IAAI;IAAER,IAAI,EAAE,YAAY;IAAES,WAAW,EAAE;EAAsC,CAAC;EAC/HM,UAAU,EAAE;IAAElB,KAAK,EAAE,IAAI;IAAEU,MAAM,EAAE,GAAG;IAAEC,QAAQ,EAAE,IAAI;IAAER,IAAI,EAAE,eAAe;IAAES,WAAW,EAAE;EAAgC,CAAC;EAC7HO,SAAS,EAAE;IAAEnB,KAAK,EAAE,GAAG;IAAEU,MAAM,EAAE,GAAG;IAAEC,QAAQ,EAAE,IAAI;IAAER,IAAI,EAAE,cAAc;IAAES,WAAW,EAAE;EAAgC,CAAC;EAC1HQ,MAAM,EAAE;IAAEpB,KAAK,EAAE,IAAI;IAAEU,MAAM,EAAE,GAAG;IAAEC,QAAQ,EAAE,IAAI;IAAER,IAAI,EAAE,MAAM;IAAES,WAAW,EAAE;EAA+B,CAAC;EAC/GS,MAAM,EAAE;IAAErB,KAAK,EAAE,KAAK;IAAEU,MAAM,EAAE,GAAG;IAAEI,MAAM,EAAE,QAAQ;IAAEX,IAAI,EAAE,QAAQ;IAAES,WAAW,EAAE;EAA6B,CAAC;EAClHU,OAAO,EAAE;IAAEtB,KAAK,EAAE,KAAK;IAAEU,MAAM,EAAE,GAAG;IAAEC,QAAQ,EAAE,IAAI;IAAER,IAAI,EAAE,SAAS;IAAES,WAAW,EAAE;EAAmC,CAAC;EACxHW,SAAS,EAAE;IAAEvB,KAAK,EAAE,GAAG;IAAEU,MAAM,EAAE,GAAG;IAAEI,MAAM,EAAE,SAAS;IAAEX,IAAI,EAAE,MAAM;IAAES,WAAW,EAAE;EAA4C,CAAC;EACjIY,OAAO,EAAE;IAAExB,KAAK,EAAE,IAAI;IAAEU,MAAM,EAAE,IAAI;IAAEC,QAAQ,EAAE,KAAK;IAAER,IAAI,EAAE,UAAU;IAAES,WAAW,EAAE;EAA4B;AACpH,CAAC;;AAED;AACA,MAAMa,WAAW,GAAG;EAClBC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE,SAAS;EAClBC,MAAM,EAAE,QAAQ;EAChBC,YAAY,EAAE,cAAc;EAC5BC,SAAS,EAAE,WAAW;EACtBnC,cAAc,EAAE,gBAAgB;EAChCoC,UAAU,EAAE;AACd,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGxD,QAAQ,CAAC;IAAEyD,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAG,CAAC,CAAC;EACnE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG5D,QAAQ,CAACkB,IAAI,CAAC;EACtC,MAAM,CAAC2C,KAAK,EAAEC,QAAQ,CAAC,GAAG9D,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAAC+D,SAAS,EAAEC,YAAY,CAAC,GAAGhE,QAAQ,CAACiE,QAAQ,CAACC,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC,IAAI,GAAG,CAAC,CAAC;EACvG,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGrE,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACsE,KAAK,EAAEC,QAAQ,CAAC,GAAGvE,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACwE,SAAS,EAAEC,YAAY,CAAC,GAAGzE,QAAQ,CAAC8C,WAAW,CAACC,KAAK,CAAC;EAC7D,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG3E,QAAQ,CAAC;IAAEyD,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAC1D,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAG7E,QAAQ,CAAC;IAAEyD,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAClE,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAG/E,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgF,cAAc,EAAEC,iBAAiB,CAAC,GAAGjF,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACkF,UAAU,EAAEC,aAAa,CAAC,GAAGnF,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACoF,YAAY,EAAEC,eAAe,CAAC,GAAGrF,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACsF,YAAY,EAAEC,eAAe,CAAC,GAAGvF,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACwF,QAAQ,EAAEC,WAAW,CAAC,GAAGzF,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC0F,SAAS,EAAEC,YAAY,CAAC,GAAG3F,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC4F,QAAQ,EAAEC,WAAW,CAAC,GAAG7F,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC8F,UAAU,EAAEC,aAAa,CAAC,GAAG/F,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACgG,YAAY,EAAEC,eAAe,CAAC,GAAGjG,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACkG,WAAW,EAAEC,cAAc,CAAC,GAAGnG,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACoG,WAAW,EAAEC,cAAc,CAAC,GAAGrG,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACsG,WAAW,EAAEC,cAAc,CAAC,GAAGvG,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACwG,WAAW,EAAEC,cAAc,CAAC,GAAGzG,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC0G,aAAa,EAAEC,gBAAgB,CAAC,GAAG3G,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC4G,KAAK,EAAEC,QAAQ,CAAC,GAAG7G,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAAC8G,UAAU,EAAEC,aAAa,CAAC,GAAG/G,QAAQ,CAAC;IAAEyD,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAC5D,MAAM,CAACsD,QAAQ,EAAEC,WAAW,CAAC,GAAGjH,QAAQ,CAAC;IAAEyD,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EACxD,MAAM,CAACwD,QAAQ,EAAEC,WAAW,CAAC,GAAGnH,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACoH,WAAW,EAAEC,cAAc,CAAC,GAAGrH,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACsH,QAAQ,EAAEC,WAAW,CAAC,GAAGvH,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACwH,MAAM,EAAEC,SAAS,CAAC,GAAGzH,QAAQ,CAAC,CACnC;IAAE0H,EAAE,EAAE,QAAQ;IAAEjE,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE,CAAC;IAAEgB,SAAS,EAAE;MAAEjB,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IAAEiE,IAAI,EAAExG,WAAW,CAACC,MAAM;IAAEwG,IAAI,EAAE,OAAO;IAAEC,QAAQ,EAAEC,IAAI,CAACC,GAAG,CAAC;EAAE,CAAC,EACtH;IAAEL,EAAE,EAAE,OAAO;IAAEjE,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE,CAAC;IAAEgB,SAAS,EAAE;MAAEjB,CAAC,EAAE,CAAC,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IAAEiE,IAAI,EAAExG,WAAW,CAACO,KAAK;IAAEkG,IAAI,EAAE,OAAO;IAAEC,QAAQ,EAAEC,IAAI,CAACC,GAAG,CAAC;EAAE,CAAC,EACtH;IAAEL,EAAE,EAAE,MAAM;IAAEjE,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE,EAAE;IAAEgB,SAAS,EAAE;MAAEjB,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IAAEiE,IAAI,EAAExG,WAAW,CAACQ,IAAI;IAAEiG,IAAI,EAAE,OAAO;IAAEC,QAAQ,EAAEC,IAAI,CAACC,GAAG,CAAC;EAAE,CAAC,EACnH;IAAEL,EAAE,EAAE,OAAO;IAAEjE,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE,EAAE;IAAEgB,SAAS,EAAE;MAAEjB,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC;IAAE,CAAC;IAAEiE,IAAI,EAAExG,WAAW,CAACS,KAAK;IAAEgG,IAAI,EAAE,OAAO;IAAEC,QAAQ,EAAEC,IAAI,CAACC,GAAG,CAAC;EAAE,CAAC,CACxH,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjI,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACkI,SAAS,EAAEC,YAAY,CAAC,GAAGnI,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACoI,QAAQ,EAAEC,WAAW,CAAC,GAAGrI,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsI,SAAS,EAAEC,YAAY,CAAC,GAAGvI,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACwI,SAAS,EAAEC,YAAY,CAAC,GAAGzI,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC0I,cAAc,EAAEC,iBAAiB,CAAC,GAAG3I,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAAC4I,WAAW,EAAEC,cAAc,CAAC,GAAG7I,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM8I,WAAW,GAAG3I,MAAM,CAAC,CAAC;EAC5B,MAAM4I,YAAY,GAAG5I,MAAM,CAAC,CAAC;EAC7B,MAAM6I,WAAW,GAAG7I,MAAM,CAAC,CAAC;EAC5B,MAAM8I,eAAe,GAAG9I,MAAM,CAAC,CAAC;;EAEhC;EACAF,SAAS,CAAC,MAAM;IACd,MAAMiJ,IAAI,GAAGhI,IAAI,CAACiI,IAAI,CAAC,CAAC,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAK,CAAC,IAAIA,IAAI,KAAK,CAAC,CAAC,CAACC,MAAM;IACxErB,YAAY,CAACiB,IAAI,CAAC;;IAElB;IACA,MAAMK,WAAW,GAAGA,CAAA,KAAM;MACxB,MAAMC,cAAc,GAAG,gEAAgE,CAACC,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,IAC/GC,MAAM,CAACC,UAAU,IAAI,GAAG,IACvB,cAAc,IAAID,MAAO;MAC5BzC,WAAW,CAACqC,cAAc,CAAC;IAC7B,CAAC;IAEDD,WAAW,CAAC,CAAC;IACbK,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEP,WAAW,CAAC;IAE9C,OAAO,MAAMK,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAER,WAAW,CAAC;EAChE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMS,SAAS,GAAG9J,WAAW,CAAE+J,SAAS,IAAK;IAC3CC,OAAO,CAACC,GAAG,CAACxJ,MAAM,CAACsJ,SAAS,CAAC,IAAI,MAAMA,SAAS,EAAE,CAAC;;IAEnD;IACA,MAAMG,QAAQ,GAAG;MACf1C,EAAE,EAAEI,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGsC,IAAI,CAACC,MAAM,CAAC,CAAC;MAC9B7G,CAAC,EAAEF,aAAa,CAACE,CAAC;MAClBC,CAAC,EAAEH,aAAa,CAACG,CAAC;MAClB6G,IAAI,EAAE5J,MAAM,CAACsJ,SAAS,CAAC,IAAIA,SAAS;MACpCtC,IAAI,EAAE,OAAO;MACb6C,IAAI,EAAE;IACR,CAAC;IACDjC,YAAY,CAACkC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEL,QAAQ,CAAC,CAAC;EAC3C,CAAC,EAAE,CAAC7G,aAAa,CAAC,CAAC;;EAEnB;EACA,MAAMmH,kBAAkB,GAAGxK,WAAW,CAAC,CAACyH,IAAI,EAAE3F,QAAQ,KAAK;IACzD,MAAMG,MAAM,GAAG;MAAEwF,IAAI;MAAE3F,QAAQ;MAAE2I,SAAS,EAAE7C,IAAI,CAACC,GAAG,CAAC;IAAE,CAAC;IACxDpB,gBAAgB,CAAC8D,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEtI,MAAM,CAAC,CAAC;IAE3C,QAAQwF,IAAI;MACV,KAAK,aAAa;QAChBxC,aAAa,CAAC,IAAI,CAAC;QACnByF,UAAU,CAAC,MAAMzF,aAAa,CAAC,KAAK,CAAC,EAAEnD,QAAQ,CAAC;QAChD;MACF,KAAK,YAAY;QACfqC,QAAQ,CAACwG,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;QACpBC,mBAAmB,CAAC,aAAa,CAAC;QAClC;MACF,KAAK,eAAe;QAClBzF,eAAe,CAAC,IAAI,CAAC;QACrBuF,UAAU,CAAC,MAAMvF,eAAe,CAAC,KAAK,CAAC,EAAErD,QAAQ,CAAC;QAClD;MACF,KAAK,eAAe;QAClBuD,eAAe,CAAC,IAAI,CAAC;QACrBqF,UAAU,CAAC,MAAMrF,eAAe,CAAC,KAAK,CAAC,EAAEvD,QAAQ,CAAC;QAClD;MACF,KAAK,WAAW;QACdyD,WAAW,CAAC,IAAI,CAAC;QACjBmF,UAAU,CAAC,MAAMnF,WAAW,CAAC,KAAK,CAAC,EAAEzD,QAAQ,CAAC;QAC9C;MACF,KAAK,YAAY;QACf2D,YAAY,CAAC,IAAI,CAAC;QAClBiF,UAAU,CAAC,MAAMjF,YAAY,CAAC,KAAK,CAAC,EAAE3D,QAAQ,CAAC;QAC/C;MACF,KAAK,WAAW;QACd6D,WAAW,CAAC,IAAI,CAAC;QACjB+E,UAAU,CAAC,MAAM/E,WAAW,CAAC,KAAK,CAAC,EAAE7D,QAAQ,CAAC;QAC9C;MACF,KAAK,QAAQ;QACX+D,aAAa,CAAC,IAAI,CAAC;QACnB6E,UAAU,CAAC,MAAM7E,aAAa,CAAC,KAAK,CAAC,EAAE/D,QAAQ,CAAC;QAChD;MACF,KAAK,QAAQ;QACXiE,eAAe,CAAC,IAAI,CAAC;QACrB;MACF,KAAK,SAAS;QACZE,cAAc,CAAC,IAAI,CAAC;QACpByE,UAAU,CAAC,MAAMzE,cAAc,CAAC,KAAK,CAAC,EAAEnE,QAAQ,CAAC;QACjD;QACA+I,kBAAkB,CAAC,CAAC;QACpB;MACF,KAAK,WAAW;QACd;QACAtD,SAAS,CAACgD,IAAI,IAAIA,IAAI,CAACO,GAAG,CAACC,KAAK,KAAK;UAAE,GAAGA,KAAK;UAAErD,IAAI,EAAE,SAAS;UAAEnE,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAE,CAAC,CAAC,CAAC,CAAC;QACjFoH,mBAAmB,CAAC,WAAW,CAAC;QAChCF,UAAU,CAAC,MAAM;UACfnD,SAAS,CAACgD,IAAI,IAAIA,IAAI,CAACO,GAAG,CAACC,KAAK,KAAK;YAAE,GAAGA,KAAK;YAAErD,IAAI,EAAE;UAAQ,CAAC,CAAC,CAAC,CAAC;QACrE,CAAC,EAAE,IAAI,CAAC;QACR;MACF,KAAK,SAAS;QACZvB,cAAc,CAAC,IAAI,CAAC;QACpBlB,aAAa,CAAC,IAAI,CAAC;QACnBE,eAAe,CAAC,IAAI,CAAC;QACrBU,aAAa,CAAC,IAAI,CAAC;QACnB6E,UAAU,CAAC,MAAM;UACfvE,cAAc,CAAC,KAAK,CAAC;UACrBlB,aAAa,CAAC,KAAK,CAAC;UACpBE,eAAe,CAAC,KAAK,CAAC;UACtBU,aAAa,CAAC,KAAK,CAAC;QACtB,CAAC,EAAE/D,QAAQ,CAAC;QACZ;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMkJ,eAAe,GAAGhL,WAAW,CAAC,MAAM;IACxC,IAAImK,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,IAAIlC,QAAQ,CAACkB,MAAM,GAAG,CAAC,EAAE;MAAE;MACjD,MAAM6B,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACxJ,SAAS,CAAC;MAC3C;MACA,MAAMyJ,YAAY,GAAG,CAAC,SAAS,EAAE,WAAW,EAAE,QAAQ,CAAC;MACvD,MAAMC,cAAc,GAAGJ,YAAY,CAAC/B,MAAM,CAACzB,IAAI,IAAI,CAAC2D,YAAY,CAACE,QAAQ,CAAC7D,IAAI,CAAC,CAAC;MAEhF,IAAI8D,UAAU;MACd,IAAIpB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE;QAAE;QACzBmB,UAAU,GAAGH,YAAY,CAACjB,IAAI,CAACqB,KAAK,CAACrB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGgB,YAAY,CAAChC,MAAM,CAAC,CAAC;MAC5E,CAAC,MAAM;QACLmC,UAAU,GAAGF,cAAc,CAAClB,IAAI,CAACqB,KAAK,CAACrB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGiB,cAAc,CAACjC,MAAM,CAAC,CAAC;MAChF;;MAEA;MACA,IAAI7F,CAAC,EAAEC,CAAC;MACR,GAAG;QACDD,CAAC,GAAG4G,IAAI,CAACqB,KAAK,CAACrB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG7J,SAAS,CAAC;QACzCiD,CAAC,GAAG2G,IAAI,CAACqB,KAAK,CAACrB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG7J,SAAS,CAAC;MAC3C,CAAC,QAAQkD,IAAI,CAACD,CAAC,CAAC,CAACD,CAAC,CAAC,KAAK,CAAC,IAAKA,CAAC,KAAKF,aAAa,CAACE,CAAC,IAAIC,CAAC,KAAKH,aAAa,CAACG,CAAE;MAE7E,MAAMiI,UAAU,GAAG;QACjBjE,EAAE,EAAEI,IAAI,CAACC,GAAG,CAAC,CAAC;QACdtE,CAAC;QAAEC,CAAC;QACJiE,IAAI,EAAE8D,UAAU;QAChB,GAAG5J,SAAS,CAAC4J,UAAU,CAAC;QACxBG,SAAS,EAAE9D,IAAI,CAACC,GAAG,CAAC;MACtB,CAAC;MAEDM,WAAW,CAACoC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEkB,UAAU,CAAC,CAAC;;MAE1C;MACAE,oBAAoB,CAACpI,CAAC,EAAEC,CAAC,CAAC;IAC5B;EACF,CAAC,EAAE,CAACC,IAAI,EAAEJ,aAAa,EAAE6E,QAAQ,CAACkB,MAAM,CAAC,CAAC;;EAE1C;EACA,MAAMwB,mBAAmB,GAAG5K,WAAW,CAAE4L,UAAU,IAAK;IACtDrF,cAAc,CAACqF,UAAU,CAAC;IAC1BlB,UAAU,CAAC,MAAMnE,cAAc,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;IAEzC,QAAQqF,UAAU;MAChB,KAAK,mBAAmB;QACtBvF,cAAc,CAAC,CAAC,CAAC;QACjB;MACF,KAAK,aAAa;QAChBA,cAAc,CAAC,CAAC,CAAC;QACjB;MACF,KAAK,WAAW;QACdA,cAAc,CAAC,EAAE,CAAC;QAClB;MACF,KAAK,OAAO;QACVA,cAAc,CAAC,EAAE,CAAC;QAClB;IACJ;;IAEA;IACA,MAAMwF,aAAa,GAAGC,WAAW,CAAC,MAAM;MACtCzF,cAAc,CAACkE,IAAI,IAAI;QACrB,IAAIA,IAAI,IAAI,CAAC,EAAE;UACbwB,aAAa,CAACF,aAAa,CAAC;UAC5B,OAAO,CAAC;QACV;QACA,OAAOtB,IAAI,GAAG,CAAC;MACjB,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMyB,sBAAsB,GAAGhM,WAAW,CAAC,CAACuD,CAAC,EAAEC,CAAC,EAAErC,KAAK,KAAK;IAC1D,KAAK,IAAI8K,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,MAAM/B,QAAQ,GAAG;QACf1C,EAAE,EAAEI,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGsC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG6B,CAAC;QAClC1I,CAAC,EAAEA,CAAC,GAAG,CAAC4G,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC;QAChC5G,CAAC,EAAEA,CAAC,GAAG,CAAC2G,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC;QAChCC,IAAI,EAAElJ,KAAK;QACXsG,IAAI,EAAE,iBAAiB;QACvB6C,IAAI,EAAE,IAAI,GAAGH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG;MAC/B,CAAC;MACD/B,YAAY,CAACkC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEL,QAAQ,CAAC,CAAC;IAC3C;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMyB,oBAAoB,GAAG3L,WAAW,CAAC,CAACuD,CAAC,EAAEC,CAAC,KAAK;IACjD,MAAM0G,QAAQ,GAAG;MACf1C,EAAE,EAAEI,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGsC,IAAI,CAACC,MAAM,CAAC,CAAC;MAC9B7G,CAAC;MAAEC,CAAC;MACJ6G,IAAI,EAAE,GAAG;MACT5C,IAAI,EAAE,OAAO;MACb6C,IAAI,EAAE;IACR,CAAC;IACDjC,YAAY,CAACkC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEL,QAAQ,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,kBAAkB,GAAG7K,WAAW,CAAC,MAAM;IAC3C;IACA,MAAMkM,MAAM,GAAG,CAAC;IAChB,IAAIC,aAAa,GAAG,CAAC;IAErBzI,OAAO,CAAC0I,QAAQ,IAAI;MAClB,MAAMC,OAAO,GAAG,CAAC,GAAGD,QAAQ,CAAC;MAC7B,KAAK,IAAIE,EAAE,GAAG,CAACJ,MAAM,EAAEI,EAAE,IAAIJ,MAAM,EAAEI,EAAE,EAAE,EAAE;QACzC,KAAK,IAAIC,EAAE,GAAG,CAACL,MAAM,EAAEK,EAAE,IAAIL,MAAM,EAAEK,EAAE,EAAE,EAAE;UACzC,MAAMhJ,CAAC,GAAGF,aAAa,CAACE,CAAC,GAAGgJ,EAAE;UAC9B,MAAM/I,CAAC,GAAGH,aAAa,CAACG,CAAC,GAAG8I,EAAE;UAC9B,IAAI/I,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAGhD,SAAS,IAAIiD,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAGjD,SAAS,EAAE;YACtD,IAAI8L,OAAO,CAAC7I,CAAC,CAAC,CAACD,CAAC,CAAC,KAAK,CAAC,IAAI8I,OAAO,CAAC7I,CAAC,CAAC,CAACD,CAAC,CAAC,KAAK,CAAC,EAAE;cAC9C,MAAM1B,MAAM,GAAGwK,OAAO,CAAC7I,CAAC,CAAC,CAACD,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE;cAC5CK,QAAQ,CAAC4I,CAAC,IAAIA,CAAC,IAAItH,YAAY,GAAGrD,MAAM,GAAG,CAAC,GAAGA,MAAM,CAAC,CAAC;cACvDwK,OAAO,CAAC7I,CAAC,CAAC,CAACD,CAAC,CAAC,GAAG,CAAC;cACjB4I,aAAa,EAAE;;cAEf;cACA,MAAMjC,QAAQ,GAAG;gBACf1C,EAAE,EAAEI,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGsC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGmC,EAAE,GAAGD,EAAE;gBACxC/I,CAAC;gBAAEC,CAAC;gBACJ6G,IAAI,EAAE,KAAK;gBACX5C,IAAI,EAAE,iBAAiB;gBACvB6C,IAAI,EAAE;cACR,CAAC;cACDjC,YAAY,CAACkC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEL,QAAQ,CAAC,CAAC;YAC3C;UACF;QACF;MACF;MACA,OAAOmC,OAAO;IAChB,CAAC,CAAC;IAEFpE,YAAY,CAACwE,CAAC,IAAIA,CAAC,GAAGN,aAAa,CAAC;EACtC,CAAC,EAAE,CAAC9I,aAAa,EAAE6B,YAAY,CAAC,CAAC;;EAEjC;EACAnF,SAAS,CAAC,MAAM;IACd,MAAM2M,QAAQ,GAAGZ,WAAW,CAAC,MAAM;MACjCzD,YAAY,CAACkC,IAAI,IAAIA,IAAI,CAACrB,MAAM,CAACgB,QAAQ,IAAI;QAC3CA,QAAQ,CAACI,IAAI,IAAI,EAAE;QACnB,OAAOJ,QAAQ,CAACI,IAAI,GAAG,CAAC;MAC1B,CAAC,CAAC,CAAC;IACL,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO,MAAMyB,aAAa,CAACW,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA3M,SAAS,CAAC,MAAM;IACd,IAAIuE,SAAS,KAAK1B,WAAW,CAACE,OAAO,EAAE;MACrCgG,WAAW,CAAC6D,OAAO,GAAGb,WAAW,CAAC,MAAM;QACtCzE,WAAW,CAACuF,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;MACzB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACLb,aAAa,CAACjD,WAAW,CAAC6D,OAAO,CAAC;IACpC;IAEA,OAAO,MAAMZ,aAAa,CAACjD,WAAW,CAAC6D,OAAO,CAAC;EACjD,CAAC,EAAE,CAACrI,SAAS,CAAC,CAAC;;EAEf;EACA,MAAMuI,mBAAmB,GAAG7M,WAAW,CAAE8M,QAAQ,IAAK;IACpD,OAAOxF,MAAM,CAACyF,IAAI,CAAChC,KAAK,IAAIA,KAAK,CAACxH,CAAC,KAAKuJ,QAAQ,CAACvJ,CAAC,IAAIwH,KAAK,CAACvH,CAAC,KAAKsJ,QAAQ,CAACtJ,CAAC,CAAC;EAC/E,CAAC,EAAE,CAAC8D,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAM0F,SAAS,GAAGhN,WAAW,CAAEiN,YAAY,IAAK;IAC9C,IAAI3I,SAAS,KAAK1B,WAAW,CAACE,OAAO,EAAE;IAEvCQ,gBAAgB,CAACiH,IAAI,IAAI;MACvB,MAAM2C,IAAI,GAAG3C,IAAI,CAAChH,CAAC,GAAG0J,YAAY,CAAC1J,CAAC;MACpC,MAAM4J,IAAI,GAAG5C,IAAI,CAAC/G,CAAC,GAAGyJ,YAAY,CAACzJ,CAAC;;MAEpC;MACA,IAAI0J,IAAI,GAAG,CAAC,IAAIA,IAAI,IAAI3M,SAAS,IAAI4M,IAAI,GAAG,CAAC,IAAIA,IAAI,IAAI5M,SAAS,EAAE;QAClE,OAAOgK,IAAI;MACb;;MAEA;MACA,IAAI9G,IAAI,CAAC0J,IAAI,CAAC,CAACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC5H,QAAQ,EAAE;QACvC,OAAOiF,IAAI;MACb;MAEA,MAAM6C,WAAW,GAAG;QAAE7J,CAAC,EAAE2J,IAAI;QAAE1J,CAAC,EAAE2J;MAAK,CAAC;;MAExC;MACA,MAAME,iBAAiB,GAAGnF,QAAQ,CAACoF,IAAI,CAACC,OAAO,IAAIA,OAAO,CAAChK,CAAC,KAAK2J,IAAI,IAAIK,OAAO,CAAC/J,CAAC,KAAK2J,IAAI,CAAC;MAC5F,IAAIE,iBAAiB,EAAE;QACrB,MAAMxL,MAAM,GAAGqD,YAAY,GAAGmI,iBAAiB,CAACxL,MAAM,GAAG,CAAC,GAAGwL,iBAAiB,CAACxL,MAAM;QACrF+B,QAAQ,CAAC4I,CAAC,IAAIA,CAAC,GAAG3K,MAAM,CAAC;;QAEzB;QACA2I,kBAAkB,CAAC6C,iBAAiB,CAAC5F,IAAI,EAAE4F,iBAAiB,CAACvL,QAAQ,CAAC;;QAEtE;QACA8I,mBAAmB,CAAC,mBAAmB,CAAC;QACxCoB,sBAAsB,CAACkB,IAAI,EAAEC,IAAI,EAAEE,iBAAiB,CAAClM,KAAK,CAAC;;QAE3D;QACAgH,WAAW,CAACoC,IAAI,IAAIA,IAAI,CAACrB,MAAM,CAACsE,CAAC,IAAIA,CAAC,CAAChG,EAAE,KAAK6F,iBAAiB,CAAC7F,EAAE,CAAC,CAAC;;QAEpE;QACA,MAAM0C,QAAQ,GAAG;UACf1C,EAAE,EAAEI,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGsC,IAAI,CAACC,MAAM,CAAC,CAAC;UAC9B7G,CAAC,EAAE2J,IAAI;UACP1J,CAAC,EAAE2J,IAAI;UACP9C,IAAI,EAAE,IAAIxI,MAAM,EAAE;UAClB4F,IAAI,EAAE,QAAQ;UACd6C,IAAI,EAAE;QACR,CAAC;QACDjC,YAAY,CAACkC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEL,QAAQ,CAAC,CAAC;MAC3C;;MAEA;MACA,IAAI2C,mBAAmB,CAACO,WAAW,CAAC,IAAI,CAAC5H,SAAS,EAAE;QAClD,IAAIZ,SAAS,IAAIU,QAAQ,EAAE;UACzB;UACAwE,SAAS,CAAC,aAAa,CAAC;UACxB,MAAM2D,WAAW,GAAG,GAAG,IAAI/G,KAAK,GAAG,CAAC,CAAC;UACrC9C,QAAQ,CAAC4I,CAAC,IAAIA,CAAC,IAAItH,YAAY,GAAGuI,WAAW,GAAG,CAAC,GAAGA,WAAW,CAAC,CAAC;UACjE9G,QAAQ,CAAC+G,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;UACpBvG,cAAc,CAACwG,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;;UAE1B;UACApG,SAAS,CAACqG,UAAU,IAClBA,UAAU,CAAC9C,GAAG,CAACC,KAAK,IAClBA,KAAK,CAACxH,CAAC,KAAK2J,IAAI,IAAInC,KAAK,CAACvH,CAAC,KAAK2J,IAAI,GAChC;YAAE,GAAGpC,KAAK;YAAExH,CAAC,EAAE,CAAC;YAAEC,CAAC,EAAE,CAAC;YAAEkE,IAAI,EAAE;UAAa,CAAC,GAC5CqD,KACN,CACF,CAAC;;UAED;UACA,MAAMb,QAAQ,GAAG;YACf1C,EAAE,EAAEI,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGsC,IAAI,CAACC,MAAM,CAAC,CAAC;YAC9B7G,CAAC,EAAE2J,IAAI;YACP1J,CAAC,EAAE2J,IAAI;YACP9C,IAAI,EAAE,UAAU3D,KAAK,GAAG,CAAC,GAAG;YAC5Be,IAAI,EAAE,OAAO;YACb6C,IAAI,EAAE;UACR,CAAC;UACDjC,YAAY,CAACkC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEL,QAAQ,CAAC,CAAC;QAC3C,CAAC,MAAM;UACL;UACA,IAAIpE,YAAY,EAAE;YAChBC,eAAe,CAAC,KAAK,CAAC;YACtB6E,mBAAmB,CAAC,aAAa,CAAC;;YAElC;YACA,MAAMV,QAAQ,GAAG;cACf1C,EAAE,EAAEI,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGsC,IAAI,CAACC,MAAM,CAAC,CAAC;cAC9B7G,CAAC,EAAE2J,IAAI;cACP1J,CAAC,EAAE2J,IAAI;cACP9C,IAAI,EAAE,OAAO;cACb5C,IAAI,EAAE,cAAc;cACpB6C,IAAI,EAAE;YACR,CAAC;YACDjC,YAAY,CAACkC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEL,QAAQ,CAAC,CAAC;;YAEzC;YACA3C,SAAS,CAACqG,UAAU,IAClBA,UAAU,CAAC9C,GAAG,CAACC,KAAK,IAAI;cACtB,IAAIA,KAAK,CAACxH,CAAC,KAAK2J,IAAI,IAAInC,KAAK,CAACvH,CAAC,KAAK2J,IAAI,EAAE;gBACxC,OAAO;kBAAE,GAAGpC,KAAK;kBAAErD,IAAI,EAAE,SAAS;kBAAEnE,CAAC,EAAE,CAAC;kBAAEC,CAAC,EAAE;gBAAE,CAAC;cAClD;cACA,OAAOuH,KAAK;YACd,CAAC,CACH,CAAC;YAED,OAAOqC,WAAW,CAAC,CAAC;UACtB;;UAEA;UACA,MAAMS,MAAM,GAAGvG,MAAM,CAACgG,IAAI,CAACvC,KAAK,IAAIA,KAAK,CAACxH,CAAC,KAAK2J,IAAI,IAAInC,KAAK,CAACvH,CAAC,KAAK2J,IAAI,CAAC;UACzExE,cAAc,CAACkF,MAAM,CAAC;;UAEtB;UACApF,iBAAiB,CAAC,IAAI,CAAC;UACvBqB,SAAS,CAAC,OAAO,CAAC;UAClBnD,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;UACbiE,mBAAmB,CAAC,OAAO,CAAC;;UAE5B;UACArG,YAAY,CAAC3B,WAAW,CAACI,YAAY,CAAC;;UAEtC;UACA,KAAK,IAAIiJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;YAC3B,MAAM/B,QAAQ,GAAG;cACf1C,EAAE,EAAEI,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGsC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG6B,CAAC;cAClC1I,CAAC,EAAE2J,IAAI,GAAG,CAAC/C,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC;cACnC5G,CAAC,EAAE2J,IAAI,GAAG,CAAChD,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC;cACnCC,IAAI,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAACF,IAAI,CAACqB,KAAK,CAACrB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;cAClE3C,IAAI,EAAE,OAAO;cACb6C,IAAI,EAAE,IAAI,GAAGH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG;YAC/B,CAAC;YACD/B,YAAY,CAACkC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEL,QAAQ,CAAC,CAAC;UAC3C;;UAEA;UACAnB,eAAe,CAAC4D,OAAO,GAAGjC,UAAU,CAAC,MAAM;YACzCjC,iBAAiB,CAAC,KAAK,CAAC;YACxBtE,QAAQ,CAACwG,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;YAEpB,IAAIzG,KAAK,IAAI,CAAC,EAAE;cACd;cACA,IAAIP,KAAK,GAAGE,SAAS,EAAE;gBACrBC,YAAY,CAACH,KAAK,CAAC;gBACnBK,YAAY,CAAC8J,OAAO,CAAC,oBAAoB,EAAEnK,KAAK,CAACoK,QAAQ,CAAC,CAAC,CAAC;cAC9D;cACAxJ,YAAY,CAAC3B,WAAW,CAACK,SAAS,CAAC;YACrC,CAAC,MAAM;cACL;cACAK,gBAAgB,CAAC;gBAAEC,CAAC,EAAE,CAAC;gBAAEC,CAAC,EAAE;cAAG,CAAC,CAAC;cACjC+D,SAAS,CAAC,CACR;gBAAEC,EAAE,EAAE,QAAQ;gBAAEjE,CAAC,EAAE,CAAC;gBAAEC,CAAC,EAAE,CAAC;gBAAEgB,SAAS,EAAE;kBAAEjB,CAAC,EAAE,CAAC;kBAAEC,CAAC,EAAE;gBAAE,CAAC;gBAAEiE,IAAI,EAAExG,WAAW,CAACC,MAAM;gBAAEwG,IAAI,EAAE,OAAO;gBAAEC,QAAQ,EAAEC,IAAI,CAACC,GAAG,CAAC;cAAE,CAAC,EACtH;gBAAEL,EAAE,EAAE,OAAO;gBAAEjE,CAAC,EAAE,EAAE;gBAAEC,CAAC,EAAE,CAAC;gBAAEgB,SAAS,EAAE;kBAAEjB,CAAC,EAAE,CAAC,CAAC;kBAAEC,CAAC,EAAE;gBAAE,CAAC;gBAAEiE,IAAI,EAAExG,WAAW,CAACO,KAAK;gBAAEkG,IAAI,EAAE,OAAO;gBAAEC,QAAQ,EAAEC,IAAI,CAACC,GAAG,CAAC;cAAE,CAAC,EACtH;gBAAEL,EAAE,EAAE,MAAM;gBAAEjE,CAAC,EAAE,CAAC;gBAAEC,CAAC,EAAE,EAAE;gBAAEgB,SAAS,EAAE;kBAAEjB,CAAC,EAAE,CAAC;kBAAEC,CAAC,EAAE;gBAAE,CAAC;gBAAEiE,IAAI,EAAExG,WAAW,CAACQ,IAAI;gBAAEiG,IAAI,EAAE,OAAO;gBAAEC,QAAQ,EAAEC,IAAI,CAACC,GAAG,CAAC;cAAE,CAAC,EACnH;gBAAEL,EAAE,EAAE,OAAO;gBAAEjE,CAAC,EAAE,EAAE;gBAAEC,CAAC,EAAE,EAAE;gBAAEgB,SAAS,EAAE;kBAAEjB,CAAC,EAAE,CAAC;kBAAEC,CAAC,EAAE,CAAC;gBAAE,CAAC;gBAAEiE,IAAI,EAAExG,WAAW,CAACS,KAAK;gBAAEgG,IAAI,EAAE,OAAO;gBAAEC,QAAQ,EAAEC,IAAI,CAACC,GAAG,CAAC;cAAE,CAAC,CACxH,CAAC;cACFtD,YAAY,CAAC3B,WAAW,CAACC,KAAK,CAAC;cAC/B8F,cAAc,CAAC,IAAI,CAAC;YACtB;UACF,CAAC,EAAE,IAAI,CAAC;UAER,OAAO4B,IAAI;QACb;MACF;;MAEA;MACA,IAAI9G,IAAI,CAAC0J,IAAI,CAAC,CAACD,IAAI,CAAC,KAAK,CAAC,IAAIzJ,IAAI,CAAC0J,IAAI,CAAC,CAACD,IAAI,CAAC,KAAK,CAAC,EAAE;QACpD,MAAMc,aAAa,GAAGvK,IAAI,CAAC0J,IAAI,CAAC,CAACD,IAAI,CAAC,KAAK,CAAC;QAC5C,IAAIrL,MAAM,GAAGmM,aAAa,GAAG,EAAE,GAAG,EAAE;QACpC,IAAI9I,YAAY,EAAErD,MAAM,IAAI,CAAC;QAE7BiI,SAAS,CAACkE,aAAa,GAAG,cAAc,GAAG,KAAK,CAAC;QACjDpK,QAAQ,CAAC4I,CAAC,IAAIA,CAAC,GAAG3K,MAAM,CAAC;QACzBoG,YAAY,CAACwE,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;;QAExB;QACAzB,eAAe,CAAC,CAAC;QAEjB,IAAIgD,aAAa,EAAE;UACjBnJ,YAAY,CAAC,IAAI,CAAC;UAClBE,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;UACzB4B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;UACbY,SAAS,CAACqG,UAAU,IAClBA,UAAU,CAAC9C,GAAG,CAACC,KAAK,KAAK;YAAE,GAAGA,KAAK;YAAErD,IAAI,EAAE;UAAa,CAAC,CAAC,CAC5D,CAAC;QACH;QAEAhE,OAAO,CAAC0I,QAAQ,IAAI;UAClB,MAAMC,OAAO,GAAG,CAAC,GAAGD,QAAQ,CAAC;UAC7BC,OAAO,CAACc,IAAI,CAAC,GAAG,CAAC,GAAGd,OAAO,CAACc,IAAI,CAAC,CAAC;UAClCd,OAAO,CAACc,IAAI,CAAC,CAACD,IAAI,CAAC,GAAG,CAAC;UACvB,OAAOb,OAAO;QAChB,CAAC,CAAC;;QAEF;QACA,IAAIrE,SAAS,GAAG,CAAC,IAAIF,SAAS,EAAE;UAC9BzD,QAAQ,CAACsG,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;UACpBpG,YAAY,CAAC3B,WAAW,CAAC9B,cAAc,CAAC;UACxCgJ,SAAS,CAAC,gBAAgB,CAAC;;UAE3B;UACA,MAAMmE,UAAU,GAAG7J,KAAK,GAAG,IAAI;UAC/BR,QAAQ,CAAC4I,CAAC,IAAIA,CAAC,GAAGyB,UAAU,CAAC;;UAE7B;UACAvD,UAAU,CAAC,MAAM;YACfhH,OAAO,CAAC1C,IAAI,CAAC;YACbiH,YAAY,CAAC,CAAC,CAAC;YACf3E,gBAAgB,CAAC;cAAEC,CAAC,EAAE,CAAC;cAAEC,CAAC,EAAE;YAAG,CAAC,CAAC;YACjC2E,WAAW,CAAC,EAAE,CAAC;YACf5D,YAAY,CAAC3B,WAAW,CAACC,KAAK,CAAC;UACjC,CAAC,EAAE,IAAI,CAAC;QACV;MACF;MAEA,OAAOuK,WAAW;IACpB,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC9I,SAAS,EAAEb,IAAI,EAAE6D,MAAM,EAAE1C,SAAS,EAAEV,KAAK,EAAE2I,mBAAmB,EAAE/C,SAAS,EAAE9B,SAAS,EAAEF,SAAS,EAAEI,QAAQ,EAAEhD,YAAY,EAAEwB,KAAK,EAAE/C,KAAK,EAAEE,SAAS,EAAEO,KAAK,EAAE4G,eAAe,CAAC,CAAC;;EAE9K;EACA,MAAMkD,UAAU,GAAGlO,WAAW,CAAC,MAAM;IACnC,IAAIsE,SAAS,KAAK1B,WAAW,CAACE,OAAO,IAAIsC,YAAY,EAAE;IAEvDmC,SAAS,CAACqG,UAAU,IAClBA,UAAU,CAAC9C,GAAG,CAACC,KAAK,IAAI;MACtB;MACA,MAAMlD,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;MACtB,IAAIA,GAAG,GAAGkD,KAAK,CAACpD,QAAQ,GAAGoD,KAAK,CAACtD,IAAI,CAACpG,KAAK,EAAE;QAC3C,OAAO0J,KAAK;MACd;MAEA,MAAMoD,aAAa,GAAG,CACpB;QAAE5K,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC;MAAE,CAAC;MAAE;MACjB;QAAED,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAC;MAAG;MACjB;QAAED,CAAC,EAAE,CAAC,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAC;MAAE;MACjB;QAAED,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAC,CAAG;MAAA,CAClB,CAAC0F,MAAM,CAACkF,IAAI,IAAI;QACf,MAAMlB,IAAI,GAAGnC,KAAK,CAACxH,CAAC,GAAG6K,IAAI,CAAC7K,CAAC;QAC7B,MAAM4J,IAAI,GAAGpC,KAAK,CAACvH,CAAC,GAAG4K,IAAI,CAAC5K,CAAC;QAC7B,OAAO0J,IAAI,IAAI,CAAC,IAAIA,IAAI,GAAG3M,SAAS,IAClC4M,IAAI,IAAI,CAAC,IAAIA,IAAI,GAAG5M,SAAS,IAC7BkD,IAAI,CAAC0J,IAAI,CAAC,CAACD,IAAI,CAAC,KAAK,CAAC;MAC1B,CAAC,CAAC;MAEF,IAAIiB,aAAa,CAAC/E,MAAM,KAAK,CAAC,EAAE,OAAO2B,KAAK;MAE5C,IAAIsD,QAAQ;MAEZ,IAAItD,KAAK,CAACrD,IAAI,KAAK,YAAY,EAAE;QAC/B;QACA,MAAM4G,SAAS,GAAGH,aAAa,CAACrD,GAAG,CAACsD,IAAI,IAAI;UAC1C,MAAMlB,IAAI,GAAGnC,KAAK,CAACxH,CAAC,GAAG6K,IAAI,CAAC7K,CAAC;UAC7B,MAAM4J,IAAI,GAAGpC,KAAK,CAACvH,CAAC,GAAG4K,IAAI,CAAC5K,CAAC;UAC7B,OAAO;YACL4K,IAAI;YACJG,QAAQ,EAAEpE,IAAI,CAACqE,GAAG,CAACtB,IAAI,GAAG7J,aAAa,CAACE,CAAC,CAAC,GAAG4G,IAAI,CAACqE,GAAG,CAACrB,IAAI,GAAG9J,aAAa,CAACG,CAAC;UAC9E,CAAC;QACH,CAAC,CAAC;;QAEF;QACA6K,QAAQ,GAAGC,SAAS,CAACG,MAAM,CAAC,CAACC,QAAQ,EAAE/B,OAAO,KAC5CA,OAAO,CAAC4B,QAAQ,GAAGG,QAAQ,CAACH,QAAQ,GAAG5B,OAAO,GAAG+B,QACnD,CAAC,CAACN,IAAI;MACR,CAAC,MAAM;QACL;QACA,QAAQrD,KAAK,CAACvD,EAAE;UACd,KAAK,QAAQ;YAAE;YACb,MAAMmH,WAAW,GAAGR,aAAa,CAACrD,GAAG,CAACsD,IAAI,IAAI;cAC5C,MAAMlB,IAAI,GAAGnC,KAAK,CAACxH,CAAC,GAAG6K,IAAI,CAAC7K,CAAC;cAC7B,MAAM4J,IAAI,GAAGpC,KAAK,CAACvH,CAAC,GAAG4K,IAAI,CAAC5K,CAAC;cAC7B,OAAO;gBACL4K,IAAI;gBACJG,QAAQ,EAAEpE,IAAI,CAACqE,GAAG,CAACtB,IAAI,GAAG7J,aAAa,CAACE,CAAC,CAAC,GAAG4G,IAAI,CAACqE,GAAG,CAACrB,IAAI,GAAG9J,aAAa,CAACG,CAAC;cAC9E,CAAC;YACH,CAAC,CAAC;YACF6K,QAAQ,GAAGM,WAAW,CAACF,MAAM,CAAC,CAACG,OAAO,EAAEjC,OAAO,KAC7CA,OAAO,CAAC4B,QAAQ,GAAGK,OAAO,CAACL,QAAQ,GAAG5B,OAAO,GAAGiC,OAClD,CAAC,CAACR,IAAI;YACN;UAEF,KAAK,OAAO;YAAE;YACZ,MAAMS,OAAO,GAAGxL,aAAa,CAACE,CAAC,GAAGiB,SAAS,CAACjB,CAAC,GAAG,CAAC;YACjD,MAAMuL,OAAO,GAAGzL,aAAa,CAACG,CAAC,GAAGgB,SAAS,CAAChB,CAAC,GAAG,CAAC;YACjD,MAAMuL,WAAW,GAAGZ,aAAa,CAACrD,GAAG,CAACsD,IAAI,IAAI;cAC5C,MAAMlB,IAAI,GAAGnC,KAAK,CAACxH,CAAC,GAAG6K,IAAI,CAAC7K,CAAC;cAC7B,MAAM4J,IAAI,GAAGpC,KAAK,CAACvH,CAAC,GAAG4K,IAAI,CAAC5K,CAAC;cAC7B,OAAO;gBACL4K,IAAI;gBACJG,QAAQ,EAAEpE,IAAI,CAACqE,GAAG,CAACtB,IAAI,GAAG2B,OAAO,CAAC,GAAG1E,IAAI,CAACqE,GAAG,CAACrB,IAAI,GAAG2B,OAAO;cAC9D,CAAC;YACH,CAAC,CAAC;YACFT,QAAQ,GAAGU,WAAW,CAACN,MAAM,CAAC,CAACG,OAAO,EAAEjC,OAAO,KAC7CA,OAAO,CAAC4B,QAAQ,GAAGK,OAAO,CAACL,QAAQ,GAAG5B,OAAO,GAAGiC,OAClD,CAAC,CAACR,IAAI;YACN;UAEF,KAAK,MAAM;YAAE;YACX,IAAIjE,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE;cACvBiE,QAAQ,GAAGF,aAAa,CAAChE,IAAI,CAACqB,KAAK,CAACrB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG+D,aAAa,CAAC/E,MAAM,CAAC,CAAC;YAC5E,CAAC,MAAM;cACL,MAAM4F,SAAS,GAAGb,aAAa,CAACrD,GAAG,CAACsD,IAAI,IAAI;gBAC1C,MAAMlB,IAAI,GAAGnC,KAAK,CAACxH,CAAC,GAAG6K,IAAI,CAAC7K,CAAC;gBAC7B,MAAM4J,IAAI,GAAGpC,KAAK,CAACvH,CAAC,GAAG4K,IAAI,CAAC5K,CAAC;gBAC7B,OAAO;kBACL4K,IAAI;kBACJG,QAAQ,EAAEpE,IAAI,CAACqE,GAAG,CAACtB,IAAI,GAAG7J,aAAa,CAACE,CAAC,CAAC,GAAG4G,IAAI,CAACqE,GAAG,CAACrB,IAAI,GAAG9J,aAAa,CAACG,CAAC;gBAC9E,CAAC;cACH,CAAC,CAAC;cACF6K,QAAQ,GAAGW,SAAS,CAACP,MAAM,CAAC,CAACG,OAAO,EAAEjC,OAAO,KAC3CA,OAAO,CAAC4B,QAAQ,GAAGK,OAAO,CAACL,QAAQ,GAAG5B,OAAO,GAAGiC,OAClD,CAAC,CAACR,IAAI;YACR;YACA;UAEF,KAAK,OAAO;YAAE;YACZ,MAAMa,eAAe,GAAG9E,IAAI,CAACqE,GAAG,CAACzD,KAAK,CAACxH,CAAC,GAAGF,aAAa,CAACE,CAAC,CAAC,GAAG4G,IAAI,CAACqE,GAAG,CAACzD,KAAK,CAACvH,CAAC,GAAGH,aAAa,CAACG,CAAC,CAAC;YACjG,IAAIyL,eAAe,GAAG,CAAC,EAAE;cACvB;cACA,MAAMC,WAAW,GAAGf,aAAa,CAACrD,GAAG,CAACsD,IAAI,IAAI;gBAC5C,MAAMlB,IAAI,GAAGnC,KAAK,CAACxH,CAAC,GAAG6K,IAAI,CAAC7K,CAAC;gBAC7B,MAAM4J,IAAI,GAAGpC,KAAK,CAACvH,CAAC,GAAG4K,IAAI,CAAC5K,CAAC;gBAC7B,OAAO;kBACL4K,IAAI;kBACJG,QAAQ,EAAEpE,IAAI,CAACqE,GAAG,CAACtB,IAAI,GAAG7J,aAAa,CAACE,CAAC,CAAC,GAAG4G,IAAI,CAACqE,GAAG,CAACrB,IAAI,GAAG9J,aAAa,CAACG,CAAC;gBAC9E,CAAC;cACH,CAAC,CAAC;cACF6K,QAAQ,GAAGa,WAAW,CAACT,MAAM,CAAC,CAACC,QAAQ,EAAE/B,OAAO,KAC9CA,OAAO,CAAC4B,QAAQ,GAAGG,QAAQ,CAACH,QAAQ,GAAG5B,OAAO,GAAG+B,QACnD,CAAC,CAACN,IAAI;YACR,CAAC,MAAM;cACL;cACA,MAAMe,UAAU,GAAGhB,aAAa,CAACrD,GAAG,CAACsD,IAAI,IAAI;gBAC3C,MAAMlB,IAAI,GAAGnC,KAAK,CAACxH,CAAC,GAAG6K,IAAI,CAAC7K,CAAC;gBAC7B,MAAM4J,IAAI,GAAGpC,KAAK,CAACvH,CAAC,GAAG4K,IAAI,CAAC5K,CAAC;gBAC7B,OAAO;kBACL4K,IAAI;kBACJG,QAAQ,EAAEpE,IAAI,CAACqE,GAAG,CAACtB,IAAI,GAAG7J,aAAa,CAACE,CAAC,CAAC,GAAG4G,IAAI,CAACqE,GAAG,CAACrB,IAAI,GAAG9J,aAAa,CAACG,CAAC;gBAC9E,CAAC;cACH,CAAC,CAAC;cACF6K,QAAQ,GAAGc,UAAU,CAACV,MAAM,CAAC,CAACG,OAAO,EAAEjC,OAAO,KAC5CA,OAAO,CAAC4B,QAAQ,GAAGK,OAAO,CAACL,QAAQ,GAAG5B,OAAO,GAAGiC,OAClD,CAAC,CAACR,IAAI;YACR;YACA;UAEF;YACEC,QAAQ,GAAGF,aAAa,CAAC,CAAC,CAAC;QAC/B;MACF;MAEA,OAAO;QACL,GAAGpD,KAAK;QACRxH,CAAC,EAAEwH,KAAK,CAACxH,CAAC,GAAG8K,QAAQ,CAAC9K,CAAC;QACvBC,CAAC,EAAEuH,KAAK,CAACvH,CAAC,GAAG6K,QAAQ,CAAC7K,CAAC;QACvBgB,SAAS,EAAE6J,QAAQ;QACnB1G,QAAQ,EAAEE;MACZ,CAAC;IACH,CAAC,CACH,CAAC;EACH,CAAC,EAAE,CAACvD,SAAS,EAAEb,IAAI,EAAEJ,aAAa,EAAEmB,SAAS,EAAEY,YAAY,CAAC,CAAC;;EAE7D;EACA,MAAMgK,gBAAgB,GAAGpP,WAAW,CAAEqP,CAAC,IAAK;IAC1CA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,KAAK,GAAGF,CAAC,CAACG,OAAO,CAAC,CAAC,CAAC;IAC1B3I,aAAa,CAAC;MAAEtD,CAAC,EAAEgM,KAAK,CAACE,OAAO;MAAEjM,CAAC,EAAE+L,KAAK,CAACG;IAAQ,CAAC,CAAC;EACvD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,eAAe,GAAG3P,WAAW,CAAEqP,CAAC,IAAK;IACzCA,CAAC,CAACC,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,cAAc,GAAG5P,WAAW,CAAEqP,CAAC,IAAK;IACxCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,KAAK,GAAGF,CAAC,CAACQ,cAAc,CAAC,CAAC,CAAC;IACjC9I,WAAW,CAAC;MAAExD,CAAC,EAAEgM,KAAK,CAACE,OAAO;MAAEjM,CAAC,EAAE+L,KAAK,CAACG;IAAQ,CAAC,CAAC;IAEnD,MAAMI,MAAM,GAAGP,KAAK,CAACE,OAAO,GAAG7I,UAAU,CAACrD,CAAC;IAC3C,MAAMwM,MAAM,GAAGR,KAAK,CAACG,OAAO,GAAG9I,UAAU,CAACpD,CAAC;IAC3C,MAAMwM,gBAAgB,GAAG,EAAE;;IAE3B;IACA,IAAI7F,IAAI,CAACqE,GAAG,CAACsB,MAAM,CAAC,GAAG3F,IAAI,CAACqE,GAAG,CAACuB,MAAM,CAAC,EAAE;MACvC;MACA,IAAI5F,IAAI,CAACqE,GAAG,CAACsB,MAAM,CAAC,GAAGE,gBAAgB,EAAE;QACvC,IAAIF,MAAM,GAAG,CAAC,EAAE;UACdrL,YAAY,CAAC;YAAElB,CAAC,EAAE,CAAC;YAAEC,CAAC,EAAE;UAAE,CAAC,CAAC,CAAC,CAAC;QAChC,CAAC,MAAM;UACLiB,YAAY,CAAC;YAAElB,CAAC,EAAE,CAAC,CAAC;YAAEC,CAAC,EAAE;UAAE,CAAC,CAAC,CAAC,CAAC;QACjC;MACF;IACF,CAAC,MAAM;MACL;MACA,IAAI2G,IAAI,CAACqE,GAAG,CAACuB,MAAM,CAAC,GAAGC,gBAAgB,EAAE;QACvC,IAAID,MAAM,GAAG,CAAC,EAAE;UACdtL,YAAY,CAAC;YAAElB,CAAC,EAAE,CAAC;YAAEC,CAAC,EAAE;UAAE,CAAC,CAAC,CAAC,CAAC;QAChC,CAAC,MAAM;UACLiB,YAAY,CAAC;YAAElB,CAAC,EAAE,CAAC;YAAEC,CAAC,EAAE,CAAC;UAAE,CAAC,CAAC,CAAC,CAAC;QACjC;MACF;IACF;EACF,CAAC,EAAE,CAACoD,UAAU,CAAC,CAAC;;EAEhB;EACA7G,SAAS,CAAC,MAAM;IACd,MAAMkQ,cAAc,GAAIZ,CAAC,IAAK;MAC5B,IAAI,CAACA,CAAC,IAAI,CAACA,CAAC,CAACa,GAAG,EAAE;MAClBb,CAAC,CAACC,cAAc,CAAC,CAAC;MAElB,QAAQD,CAAC,CAACa,GAAG;QACX,KAAK,SAAS;UACZzL,YAAY,CAAC;YAAElB,CAAC,EAAE,CAAC;YAAEC,CAAC,EAAE,CAAC;UAAE,CAAC,CAAC;UAC7B;QACF,KAAK,WAAW;UACdiB,YAAY,CAAC;YAAElB,CAAC,EAAE,CAAC;YAAEC,CAAC,EAAE;UAAE,CAAC,CAAC;UAC5B;QACF,KAAK,WAAW;UACdiB,YAAY,CAAC;YAAElB,CAAC,EAAE,CAAC,CAAC;YAAEC,CAAC,EAAE;UAAE,CAAC,CAAC;UAC7B;QACF,KAAK,YAAY;UACfiB,YAAY,CAAC;YAAElB,CAAC,EAAE,CAAC;YAAEC,CAAC,EAAE;UAAE,CAAC,CAAC;UAC5B;QACF,KAAK,GAAG;UACN,IAAIc,SAAS,KAAK1B,WAAW,CAACC,KAAK,EAAE;YACnC0B,YAAY,CAAC3B,WAAW,CAACE,OAAO,CAAC;UACnC,CAAC,MAAM,IAAIwB,SAAS,KAAK1B,WAAW,CAACE,OAAO,EAAE;YAC5CyB,YAAY,CAAC3B,WAAW,CAACG,MAAM,CAAC;UAClC,CAAC,MAAM,IAAIuB,SAAS,KAAK1B,WAAW,CAACG,MAAM,EAAE;YAC3CwB,YAAY,CAAC3B,WAAW,CAACE,OAAO,CAAC;UACnC;UACA;QACF,KAAK,GAAG;UACN,IAAIwB,SAAS,KAAK1B,WAAW,CAACK,SAAS,EAAE;YACvC;YACAK,gBAAgB,CAAC;cAAEC,CAAC,EAAE,CAAC;cAAEC,CAAC,EAAE;YAAG,CAAC,CAAC;YACjCE,OAAO,CAAC1C,IAAI,CAAC;YACb4C,QAAQ,CAAC,CAAC,CAAC;YACXO,QAAQ,CAAC,CAAC,CAAC;YACXE,QAAQ,CAAC,CAAC,CAAC;YACXE,YAAY,CAAC3B,WAAW,CAACC,KAAK,CAAC;YAC/B4B,YAAY,CAAC;cAAElB,CAAC,EAAE,CAAC;cAAEC,CAAC,EAAE;YAAE,CAAC,CAAC;YAC5BmB,gBAAgB,CAAC;cAAEpB,CAAC,EAAE,CAAC;cAAEC,CAAC,EAAE;YAAE,CAAC,CAAC;YAChCqB,YAAY,CAAC,KAAK,CAAC;YACnBE,iBAAiB,CAAC,CAAC,CAAC;YACpBE,aAAa,CAAC,KAAK,CAAC;YACpBE,eAAe,CAAC,KAAK,CAAC;YACtBE,eAAe,CAAC,KAAK,CAAC;YACtBsB,QAAQ,CAAC,CAAC,CAAC;YACXQ,cAAc,CAAC,CAAC,CAAC;YACjBE,WAAW,CAAC,CAAC,CAAC;YACdY,YAAY,CAAC,CAAC,CAAC;YACfE,WAAW,CAAC,EAAE,CAAC;YACfE,YAAY,CAAC,EAAE,CAAC;YAChBI,iBAAiB,CAAC,KAAK,CAAC;YACxBE,cAAc,CAAC,IAAI,CAAC;YACpBwH,YAAY,CAACpH,eAAe,CAAC4D,OAAO,CAAC;YACrCpF,SAAS,CAAC,CACR;cAAEC,EAAE,EAAE,QAAQ;cAAEjE,CAAC,EAAE,CAAC;cAAEC,CAAC,EAAE,CAAC;cAAEgB,SAAS,EAAE;gBAAEjB,CAAC,EAAE,CAAC;gBAAEC,CAAC,EAAE;cAAE,CAAC;cAAEiE,IAAI,EAAExG,WAAW,CAACC,MAAM;cAAEwG,IAAI,EAAE,OAAO;cAAEC,QAAQ,EAAEC,IAAI,CAACC,GAAG,CAAC;YAAE,CAAC,EACtH;cAAEL,EAAE,EAAE,OAAO;cAAEjE,CAAC,EAAE,EAAE;cAAEC,CAAC,EAAE,CAAC;cAAEgB,SAAS,EAAE;gBAAEjB,CAAC,EAAE,CAAC,CAAC;gBAAEC,CAAC,EAAE;cAAE,CAAC;cAAEiE,IAAI,EAAExG,WAAW,CAACO,KAAK;cAAEkG,IAAI,EAAE,OAAO;cAAEC,QAAQ,EAAEC,IAAI,CAACC,GAAG,CAAC;YAAE,CAAC,EACtH;cAAEL,EAAE,EAAE,MAAM;cAAEjE,CAAC,EAAE,CAAC;cAAEC,CAAC,EAAE,EAAE;cAAEgB,SAAS,EAAE;gBAAEjB,CAAC,EAAE,CAAC;gBAAEC,CAAC,EAAE;cAAE,CAAC;cAAEiE,IAAI,EAAExG,WAAW,CAACQ,IAAI;cAAEiG,IAAI,EAAE,OAAO;cAAEC,QAAQ,EAAEC,IAAI,CAACC,GAAG,CAAC;YAAE,CAAC,EACnH;cAAEL,EAAE,EAAE,OAAO;cAAEjE,CAAC,EAAE,EAAE;cAAEC,CAAC,EAAE,EAAE;cAAEgB,SAAS,EAAE;gBAAEjB,CAAC,EAAE,CAAC;gBAAEC,CAAC,EAAE,CAAC;cAAE,CAAC;cAAEiE,IAAI,EAAExG,WAAW,CAACS,KAAK;cAAEgG,IAAI,EAAE,OAAO;cAAEC,QAAQ,EAAEC,IAAI,CAACC,GAAG,CAAC;YAAE,CAAC,CACxH,CAAC;UACJ;UACA;QACF,KAAK,OAAO;UACV,IAAIvD,SAAS,KAAK1B,WAAW,CAACI,YAAY,EAAE;YAC1C;YACAmN,YAAY,CAACpH,eAAe,CAAC4D,OAAO,CAAC;YACrClE,iBAAiB,CAAC,KAAK,CAAC;YACxBtE,QAAQ,CAACwG,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;YAEpB,IAAIzG,KAAK,IAAI,CAAC,EAAE;cACd,IAAIP,KAAK,GAAGE,SAAS,EAAE;gBACrBC,YAAY,CAACH,KAAK,CAAC;gBACnBK,YAAY,CAAC8J,OAAO,CAAC,oBAAoB,EAAEnK,KAAK,CAACoK,QAAQ,CAAC,CAAC,CAAC;cAC9D;cACAxJ,YAAY,CAAC3B,WAAW,CAACK,SAAS,CAAC;YACrC,CAAC,MAAM;cACLK,gBAAgB,CAAC;gBAAEC,CAAC,EAAE,CAAC;gBAAEC,CAAC,EAAE;cAAG,CAAC,CAAC;cACjC+D,SAAS,CAAC,CACR;gBAAEC,EAAE,EAAE,QAAQ;gBAAEjE,CAAC,EAAE,CAAC;gBAAEC,CAAC,EAAE,CAAC;gBAAEgB,SAAS,EAAE;kBAAEjB,CAAC,EAAE,CAAC;kBAAEC,CAAC,EAAE;gBAAE,CAAC;gBAAEiE,IAAI,EAAExG,WAAW,CAACC,MAAM;gBAAEwG,IAAI,EAAE,OAAO;gBAAEC,QAAQ,EAAEC,IAAI,CAACC,GAAG,CAAC;cAAE,CAAC,EACtH;gBAAEL,EAAE,EAAE,OAAO;gBAAEjE,CAAC,EAAE,EAAE;gBAAEC,CAAC,EAAE,CAAC;gBAAEgB,SAAS,EAAE;kBAAEjB,CAAC,EAAE,CAAC,CAAC;kBAAEC,CAAC,EAAE;gBAAE,CAAC;gBAAEiE,IAAI,EAAExG,WAAW,CAACO,KAAK;gBAAEkG,IAAI,EAAE,OAAO;gBAAEC,QAAQ,EAAEC,IAAI,CAACC,GAAG,CAAC;cAAE,CAAC,EACtH;gBAAEL,EAAE,EAAE,MAAM;gBAAEjE,CAAC,EAAE,CAAC;gBAAEC,CAAC,EAAE,EAAE;gBAAEgB,SAAS,EAAE;kBAAEjB,CAAC,EAAE,CAAC;kBAAEC,CAAC,EAAE;gBAAE,CAAC;gBAAEiE,IAAI,EAAExG,WAAW,CAACQ,IAAI;gBAAEiG,IAAI,EAAE,OAAO;gBAAEC,QAAQ,EAAEC,IAAI,CAACC,GAAG,CAAC;cAAE,CAAC,EACnH;gBAAEL,EAAE,EAAE,OAAO;gBAAEjE,CAAC,EAAE,EAAE;gBAAEC,CAAC,EAAE,EAAE;gBAAEgB,SAAS,EAAE;kBAAEjB,CAAC,EAAE,CAAC;kBAAEC,CAAC,EAAE,CAAC;gBAAE,CAAC;gBAAEiE,IAAI,EAAExG,WAAW,CAACS,KAAK;gBAAEgG,IAAI,EAAE,OAAO;gBAAEC,QAAQ,EAAEC,IAAI,CAACC,GAAG,CAAC;cAAE,CAAC,CACxH,CAAC;cACFtD,YAAY,CAAC3B,WAAW,CAACC,KAAK,CAAC;cAC/B8F,cAAc,CAAC,IAAI,CAAC;YACtB;UACF;UACA;QACF,KAAK,GAAG;UACNJ,YAAY,CAAC,CAACD,SAAS,CAAC;UACxB;QACF;UACE;MACJ;IACF,CAAC;IAEDoB,MAAM,CAACE,gBAAgB,CAAC,SAAS,EAAEqG,cAAc,CAAC;;IAElD;IACA,IAAIjJ,QAAQ,EAAE;MACZoJ,QAAQ,CAACxG,gBAAgB,CAAC,YAAY,EAAEwF,gBAAgB,EAAE;QAAEiB,OAAO,EAAE;MAAM,CAAC,CAAC;MAC7ED,QAAQ,CAACxG,gBAAgB,CAAC,WAAW,EAAE+F,eAAe,EAAE;QAAEU,OAAO,EAAE;MAAM,CAAC,CAAC;MAC3ED,QAAQ,CAACxG,gBAAgB,CAAC,UAAU,EAAEgG,cAAc,EAAE;QAAES,OAAO,EAAE;MAAM,CAAC,CAAC;IAC3E;IAEA,OAAO,MAAM;MACX3G,MAAM,CAACG,mBAAmB,CAAC,SAAS,EAAEoG,cAAc,CAAC;MACrD,IAAIjJ,QAAQ,EAAE;QACZoJ,QAAQ,CAACvG,mBAAmB,CAAC,YAAY,EAAEuF,gBAAgB,CAAC;QAC5DgB,QAAQ,CAACvG,mBAAmB,CAAC,WAAW,EAAE8F,eAAe,CAAC;QAC1DS,QAAQ,CAACvG,mBAAmB,CAAC,UAAU,EAAE+F,cAAc,CAAC;MAC1D;IACF,CAAC;EACH,CAAC,EAAE,CAACtL,SAAS,EAAE0C,QAAQ,EAAEoI,gBAAgB,EAAEO,eAAe,EAAEC,cAAc,CAAC,CAAC;;EAE5E;EACA7P,SAAS,CAAC,MAAM;IACd,IAAIuE,SAAS,KAAK1B,WAAW,CAACE,OAAO,EAAE;MACrC,IAAIzB,KAAK,GAAG,GAAG;;MAEf;MACA,IAAI2D,UAAU,EAAE3D,KAAK,GAAG,GAAG;MAC3B,IAAIqE,QAAQ,EAAErE,KAAK,GAAG,GAAG,CAAC,CAAC;MAC3B,IAAI6E,WAAW,EAAE7E,KAAK,GAAG,EAAE,CAAC,CAAC;;MAE7BuH,WAAW,CAAC+D,OAAO,GAAGb,WAAW,CAAC,MAAM;QACtC,IAAItH,SAAS,CAACjB,CAAC,KAAK,CAAC,IAAIiB,SAAS,CAAChB,CAAC,KAAK,CAAC,EAAE;UAC1CwJ,SAAS,CAACxI,SAAS,CAAC;QACtB;;QAEA;QACA,IAAI,CAACkB,QAAQ,IAAIyE,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE;UACpC8D,UAAU,CAAC,CAAC;QACd;;QAEA;QACA,IAAItI,UAAU,EAAE;UACd0K,iBAAiB,CAAC,CAAC;QACrB;MACF,CAAC,EAAEjP,KAAK,CAAC;IACX,CAAC,MAAM;MACL0K,aAAa,CAACnD,WAAW,CAAC+D,OAAO,CAAC;IACpC;IAEA,OAAO,MAAMZ,aAAa,CAACnD,WAAW,CAAC+D,OAAO,CAAC;EACjD,CAAC,EAAE,CAACrI,SAAS,EAAEE,SAAS,EAAEwI,SAAS,EAAEkB,UAAU,EAAElJ,UAAU,EAAEU,QAAQ,EAAEQ,WAAW,EAAEN,UAAU,CAAC,CAAC;;EAEhG;EACA,MAAM0K,iBAAiB,GAAGtQ,WAAW,CAAC,MAAM;IAC1C,MAAMkM,MAAM,GAAG,CAAC;IAChB,IAAIC,aAAa,GAAG,CAAC;IAErBzI,OAAO,CAAC0I,QAAQ,IAAI;MAClB,MAAMC,OAAO,GAAG,CAAC,GAAGD,QAAQ,CAAC;MAC7B,KAAK,IAAIE,EAAE,GAAG,CAACJ,MAAM,EAAEI,EAAE,IAAIJ,MAAM,EAAEI,EAAE,EAAE,EAAE;QACzC,KAAK,IAAIC,EAAE,GAAG,CAACL,MAAM,EAAEK,EAAE,IAAIL,MAAM,EAAEK,EAAE,EAAE,EAAE;UACzC,MAAMhJ,CAAC,GAAGF,aAAa,CAACE,CAAC,GAAGgJ,EAAE;UAC9B,MAAM/I,CAAC,GAAGH,aAAa,CAACG,CAAC,GAAG8I,EAAE;UAC9B,IAAI/I,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAGhD,SAAS,IAAIiD,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAGjD,SAAS,EAAE;YACtD,IAAI8L,OAAO,CAAC7I,CAAC,CAAC,CAACD,CAAC,CAAC,KAAK,CAAC,IAAI8I,OAAO,CAAC7I,CAAC,CAAC,CAACD,CAAC,CAAC,KAAK,CAAC,EAAE;cAC9C,MAAM1B,MAAM,GAAGwK,OAAO,CAAC7I,CAAC,CAAC,CAACD,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE;cAC5CK,QAAQ,CAAC4I,CAAC,IAAIA,CAAC,IAAItH,YAAY,GAAGrD,MAAM,GAAG,CAAC,GAAGA,MAAM,CAAC,CAAC;cACvDwK,OAAO,CAAC7I,CAAC,CAAC,CAACD,CAAC,CAAC,GAAG,CAAC;cACjB4I,aAAa,EAAE;;cAEf;cACA,MAAMjC,QAAQ,GAAG;gBACf1C,EAAE,EAAEI,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGsC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGmC,EAAE,GAAGD,EAAE;gBACxC/I,CAAC;gBAAEC,CAAC;gBACJ6G,IAAI,EAAE,IAAI;gBACV5C,IAAI,EAAE,gBAAgB;gBACtB6C,IAAI,EAAE;cACR,CAAC;cACDjC,YAAY,CAACkC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEL,QAAQ,CAAC,CAAC;YAC3C;UACF;QACF;MACF;MACA,OAAOmC,OAAO;IAChB,CAAC,CAAC;IAEF,IAAIF,aAAa,GAAG,CAAC,EAAE;MACrBlE,YAAY,CAACwE,CAAC,IAAIA,CAAC,GAAGN,aAAa,CAAC;IACtC;EACF,CAAC,EAAE,CAAC9I,aAAa,EAAE6B,YAAY,CAAC,CAAC;;EAEjC;EACAnF,SAAS,CAAC,MAAM;IACd,IAAI6E,SAAS,IAAIE,cAAc,GAAG,CAAC,EAAE;MACnC+D,YAAY,CAAC8D,OAAO,GAAGjC,UAAU,CAAC,MAAM;QACtC3F,iBAAiB,CAAC6H,CAAC,IAAIA,CAAC,GAAG,GAAG,CAAC;MACjC,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,MAAM,IAAIhI,SAAS,IAAIE,cAAc,IAAI,CAAC,EAAE;MAC3CD,YAAY,CAAC,KAAK,CAAC;MACnB0C,SAAS,CAACqG,UAAU,IAClBA,UAAU,CAAC9C,GAAG,CAACC,KAAK,KAAK;QAAE,GAAGA,KAAK;QAAErD,IAAI,EAAE;MAAQ,CAAC,CAAC,CACvD,CAAC;IACH;IAEA,OAAO,MAAMyI,YAAY,CAACtH,YAAY,CAAC8D,OAAO,CAAC;EACjD,CAAC,EAAE,CAAC/H,SAAS,EAAEE,cAAc,CAAC,CAAC;EAE/B,MAAMyL,UAAU,GAAGA,CAACpH,IAAI,EAAE5F,CAAC,EAAEC,CAAC,KAAK;IACjC,IAAIgN,SAAS,GAAG,MAAM;IACtB,IAAIC,OAAO,GAAG,EAAE;IAEhB,IAAItH,IAAI,KAAK,CAAC,EAAE;MACdqH,SAAS,IAAI,OAAO;IACtB,CAAC,MAAM,IAAIrH,IAAI,KAAK,CAAC,EAAE;MACrBsH,OAAO,GAAG,GAAG;IACf,CAAC,MAAM,IAAItH,IAAI,KAAK,CAAC,EAAE;MACrBsH,OAAO,GAAG,GAAG;MACbD,SAAS,IAAI,eAAe;IAC9B;;IAEA;IACA,IAAInN,aAAa,CAACE,CAAC,KAAKA,CAAC,IAAIF,aAAa,CAACG,CAAC,KAAKA,CAAC,EAAE;MAClDiN,OAAO,gBAAGrQ,OAAA;QAAKsQ,GAAG,EAAExQ,eAAgB;QAACyQ,GAAG,EAAC,YAAY;QAACH,SAAS,EAAC;MAAiB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACpFP,SAAS,IAAI,QAAQ;MACrB,IAAI5L,SAAS,EAAE4L,SAAS,IAAI,aAAa;MACzC,IAAIxL,UAAU,EAAEwL,SAAS,IAAI,cAAc;MAC3C,IAAIlL,QAAQ,EAAEkL,SAAS,IAAI,YAAY;MACvC,IAAIhL,SAAS,EAAEgL,SAAS,IAAI,aAAa;MACzC,IAAI1K,YAAY,EAAE0K,SAAS,IAAI,cAAc;MAC7C,IAAItK,WAAW,EAAEsK,SAAS,IAAI,eAAe;IAC/C;;IAEA;IACA,MAAMnD,iBAAiB,GAAGnF,QAAQ,CAACoF,IAAI,CAACC,OAAO,IAAIA,OAAO,CAAChK,CAAC,KAAKA,CAAC,IAAIgK,OAAO,CAAC/J,CAAC,KAAKA,CAAC,CAAC;IACtF,IAAI6J,iBAAiB,IAAI,EAAEhK,aAAa,CAACE,CAAC,KAAKA,CAAC,IAAIF,aAAa,CAACG,CAAC,KAAKA,CAAC,CAAC,EAAE;MAC1EiN,OAAO,GAAGpD,iBAAiB,CAAClM,KAAK;MACjCqP,SAAS,IAAI,WAAW;IAC1B;;IAEA;IACA,MAAMQ,eAAe,GAAG1J,MAAM,CAACgG,IAAI,CAACvC,KAAK,IAAIA,KAAK,CAACxH,CAAC,KAAKA,CAAC,IAAIwH,KAAK,CAACvH,CAAC,KAAKA,CAAC,CAAC;IAC5E,IAAIwN,eAAe,IAAI,EAAE3N,aAAa,CAACE,CAAC,KAAKA,CAAC,IAAIF,aAAa,CAACG,CAAC,KAAKA,CAAC,CAAC,EAAE;MACxEiN,OAAO,GAAGO,eAAe,CAACvJ,IAAI,CAACtG,KAAK;MACpCqP,SAAS,IAAI,UAAUQ,eAAe,CAACtJ,IAAI,EAAE;MAC7C,IAAIsJ,eAAe,CAACtJ,IAAI,KAAK,YAAY,EAAE;QACzC8I,SAAS,IAAI,aAAa;MAC5B;IACF;IAEA,oBACEpQ,OAAA;MAAuBoQ,SAAS,EAAEA,SAAU;MAAAS,QAAA,EACzCR;IAAO,GADA,GAAGlN,CAAC,IAAIC,CAAC,EAAE;MAAAoN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhB,CAAC;EAEV,CAAC;EAED,MAAMG,mBAAmB,GAAGA,CAAA,KAAM;IAChC,QAAQ5M,SAAS;MACf,KAAK1B,WAAW,CAACC,KAAK;QACpB,OAAO,kCAAkC;MAC3C,KAAKD,WAAW,CAACG,MAAM;QACrB,OAAO,2CAA2C;MACpD,KAAKH,WAAW,CAACI,YAAY;QAC3B,OAAO,EAAE;MACX,KAAKJ,WAAW,CAACK,SAAS;QACxB,OAAO,uCAAuC;MAChD,KAAKL,WAAW,CAAC9B,cAAc;QAC7B,OAAO,kDAAkD;MAC3D;QACE,OAAO,EAAE;IACb;EACF,CAAC;;EAED;EACA,MAAMqQ,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI7M,SAAS,KAAK1B,WAAW,CAACI,YAAY,EAAE,OAAO,IAAI;IAEvD,oBACE5C,OAAA;MAAKoQ,SAAS,EAAC,sBAAsB;MAAAS,QAAA,eACnC7Q,OAAA;QAAKoQ,SAAS,EAAC,cAAc;QAAAS,QAAA,gBAC3B7Q,OAAA;UAAKoQ,SAAS,EAAC,iBAAiB;UAAAS,QAAA,gBAC9B7Q,OAAA;YAAKoQ,SAAS,EAAC,iBAAiB;YAAAS,QAAA,EAAC;UAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzC3Q,OAAA;YACEsQ,GAAG,EAAExQ,eAAgB;YACrByQ,GAAG,EAAC,YAAY;YAChBH,SAAS,EAAC;UAAmB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC,eACF3Q,OAAA;YAAKoQ,SAAS,EAAC,eAAe;YAAAS,QAAA,gBAC5B7Q,OAAA;cAAKoQ,SAAS,EAAC,gBAAgB;cAAAS,QAAA,EAAC;YAAC;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvC3Q,OAAA;cAAKoQ,SAAS,EAAC,gBAAgB;cAAAS,QAAA,EAAC;YAAE;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxC3Q,OAAA;cAAKoQ,SAAS,EAAC,gBAAgB;cAAAS,QAAA,EAAC;YAAE;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxC3Q,OAAA;cAAKoQ,SAAS,EAAC,gBAAgB;cAAAS,QAAA,EAAC;YAAE;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxC3Q,OAAA;cAAKoQ,SAAS,EAAC,gBAAgB;cAAAS,QAAA,EAAC;YAAE;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN3Q,OAAA;UAAKoQ,SAAS,EAAC,eAAe;UAAAS,QAAA,gBAC5B7Q,OAAA;YAAIoQ,SAAS,EAAC,aAAa;YAAAS,QAAA,EAAC;UAAa;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9C3Q,OAAA;YAAKoQ,SAAS,EAAC,gBAAgB;YAAAS,QAAA,EAC5BvI,WAAW,iBACVtI,OAAA;cAAA6Q,QAAA,GACGvI,WAAW,CAACjB,IAAI,CAACtG,KAAK,EAAC,GAAC,eAAAf,OAAA;gBAAA6Q,QAAA,EAASvI,WAAW,CAACjB,IAAI,CAACnG;cAAI;gBAAAsP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC,oBACnE;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UACJ;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAEN3Q,OAAA;YAAKoQ,SAAS,EAAC,aAAa;YAAAS,QAAA,gBAC1B7Q,OAAA;cAAKoQ,SAAS,EAAC,YAAY;cAAAS,QAAA,gBACzB7Q,OAAA;gBAAMoQ,SAAS,EAAC,YAAY;gBAAAS,QAAA,EAAC;cAAiB;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACrD3Q,OAAA;gBAAMoQ,SAAS,EAAC,YAAY;gBAAAS,QAAA,EAAEtN,KAAK,CAACyN,cAAc,CAAC;cAAC;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzD,CAAC,eACN3Q,OAAA;cAAKoQ,SAAS,EAAC,YAAY;cAAAS,QAAA,gBACzB7Q,OAAA;gBAAMoQ,SAAS,EAAC,YAAY;gBAAAS,QAAA,EAAC;cAAgB;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACpD3Q,OAAA;gBAAMoQ,SAAS,EAAC,YAAY;gBAAAS,QAAA,EAAE7M;cAAK;gBAAAwM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC,CAAC,eACN3Q,OAAA;cAAKoQ,SAAS,EAAC,YAAY;cAAAS,QAAA,gBACzB7Q,OAAA;gBAAMoQ,SAAS,EAAC,YAAY;gBAAAS,QAAA,EAAC;cAAc;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAClD3Q,OAAA;gBAAMoQ,SAAS,EAAC,YAAY;gBAAAS,QAAA,EAAEI,UAAU,CAACjK,QAAQ;cAAC;gBAAAwJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvD,CAAC,eACN3Q,OAAA;cAAKoQ,SAAS,EAAC,YAAY;cAAAS,QAAA,gBACzB7Q,OAAA;gBAAMoQ,SAAS,EAAC,YAAY;gBAAAS,QAAA,EAAC;cAAkB;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACtD3Q,OAAA;gBAAMoQ,SAAS,EAAC,YAAY;gBAAAS,QAAA,EAAE/J;cAAW;gBAAA0J,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EAEL7M,KAAK,GAAG,CAAC,gBACR9D,OAAA;YAAKoQ,SAAS,EAAC,gBAAgB;YAAAS,QAAA,gBAC7B7Q,OAAA;cAAGoQ,SAAS,EAAC,iBAAiB;cAAAS,QAAA,GAAC,YACnB,eAAA7Q,OAAA;gBAAA6Q,QAAA,EAAS/M,KAAK,GAAG;cAAC;gBAAA0M,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC,SAAK,EAAC7M,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE;YAAA;cAAA0M,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrE,CAAC,eACJ3Q,OAAA;cAAGoQ,SAAS,EAAC,sBAAsB;cAAAS,QAAA,GAAC,WACzB,eAAA7Q,OAAA;gBAAA6Q,QAAA,EAAK;cAAK;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,+BAC3B;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,gBAEN3Q,OAAA;YAAKoQ,SAAS,EAAC,aAAa;YAAAS,QAAA,gBAC1B7Q,OAAA;cAAGoQ,SAAS,EAAC,mBAAmB;cAAAS,QAAA,EAAC;YAAuB;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,EAC3DpN,KAAK,GAAGE,SAAS,iBAChBzD,OAAA;cAAGoQ,SAAS,EAAC,YAAY;cAAAS,QAAA,EAAC;YAAoB;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAClD;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAEN3Q,OAAA;UAAKoQ,SAAS,EAAC,iBAAiB;UAAAS,QAAA,eAC9B7Q,OAAA;YAAKoQ,SAAS,EAAC;UAAe;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;EAED,MAAMM,UAAU,GAAIC,OAAO,IAAK;IAC9B,MAAMC,IAAI,GAAGpH,IAAI,CAACqB,KAAK,CAAC8F,OAAO,GAAG,EAAE,CAAC;IACrC,MAAME,IAAI,GAAGF,OAAO,GAAG,EAAE;IACzB,OAAO,GAAGC,IAAI,IAAIC,IAAI,CAACzD,QAAQ,CAAC,CAAC,CAAC0D,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EACtD,CAAC;;EAED;EACA,MAAMC,qBAAqB,GAAGA,CAAA,kBAC5BtR,OAAA;IAAKoQ,SAAS,EAAC,YAAY;IAAAS,QAAA,gBAEzB7Q,OAAA;MAAKoQ,SAAS,EAAC,eAAe;MAAAS,QAAA,eAC5B7Q,OAAA;QAAKoQ,SAAS,EAAC,kBAAkB;QAAAS,QAAA,eAC/B7Q,OAAA;UAAKsQ,GAAG,EAAExQ,eAAgB;UAACyQ,GAAG,EAAC,YAAY;UAACH,SAAS,EAAC;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN3Q,OAAA;MAAKoQ,SAAS,EAAC,cAAc;MAAAS,QAAA,gBAC3B7Q,OAAA;QAAKoQ,SAAS,EAAC,oBAAoB;QAAAS,QAAA,gBACjC7Q,OAAA;UAAMoQ,SAAS,EAAC,YAAY;UAAAS,QAAA,EAAC;QAAW;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC/C3Q,OAAA;UAAMoQ,SAAS,EAAC,YAAY;UAAAS,QAAA,EAAEtN,KAAK,CAACyN,cAAc,CAAC;QAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,eACN3Q,OAAA;QAAKoQ,SAAS,EAAC,qBAAqB;QAAAS,QAAA,gBAClC7Q,OAAA;UAAMoQ,SAAS,EAAC,YAAY;UAAAS,QAAA,EAAC;QAAO;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC3C3Q,OAAA;UAAMoQ,SAAS,EAAC,YAAY;UAAAS,QAAA,EAAEpN,SAAS,CAACuN,cAAc,CAAC;QAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC,eACN3Q,OAAA;QAAKoQ,SAAS,EAAC,oBAAoB;QAAAS,QAAA,gBACjC7Q,OAAA;UAAMoQ,SAAS,EAAC,YAAY;UAAAS,QAAA,EAAC;QAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC1C3Q,OAAA;UAAMoQ,SAAS,EAAC,YAAY;UAAAS,QAAA,EAAE,IAAI,CAACU,MAAM,CAACzN,KAAK;QAAC;UAAA0M,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eACN3Q,OAAA;QAAKoQ,SAAS,EAAC,oBAAoB;QAAAS,QAAA,gBACjC7Q,OAAA;UAAMoQ,SAAS,EAAC,YAAY;UAAAS,QAAA,EAAC;QAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC1C3Q,OAAA;UAAMoQ,SAAS,EAAC,YAAY;UAAAS,QAAA,EAAE7M;QAAK;UAAAwM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACN3Q,OAAA;QAAKoQ,SAAS,EAAC,mBAAmB;QAAAS,QAAA,gBAChC7Q,OAAA;UAAMoQ,SAAS,EAAC,YAAY;UAAAS,QAAA,EAAC;QAAO;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC3C3Q,OAAA;UAAMoQ,SAAS,EAAC,YAAY;UAAAS,QAAA,EAAEI,UAAU,CAACjK,QAAQ;QAAC;UAAAwJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN3Q,OAAA;MAAKoQ,SAAS,EAAC,gBAAgB;MAAAS,QAAA,GAC5BjK,QAAQ,gBACP5G,OAAA,CAAAE,SAAA;QAAA2Q,QAAA,gBACE7Q,OAAA;UAAKoQ,SAAS,EAAC,oBAAoB;UAAAS,QAAA,EAAC;QAAwC;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClF3Q,OAAA;UAAKoQ,SAAS,EAAC,oBAAoB;UAAAS,QAAA,EAAC;QAAuD;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,eACjG,CAAC,GAEHG,mBAAmB,CAAC,CACrB,EACAtM,SAAS,iBAAIxE,OAAA;QAAKoQ,SAAS,EAAC,mBAAmB;QAAAS,QAAA,EAAC;MAAmB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eAGN3Q,OAAA;MAAKoQ,SAAS,EAAC,uBAAuB;MAAAS,QAAA,eACpC7Q,OAAA;QACEoQ,SAAS,EAAE,qBAAqBlK,WAAW,IAAIZ,QAAQ,GAAG,WAAW,GAAG,EAAE,IAAIQ,WAAW,GAAG,cAAc,GAAG,EAAE,EAAG;QAClH0L,KAAK,EAAE;UACLC,SAAS,EAAEzL,WAAW,GAAG,CAAC,GAAG,aAAa,CAAC+D,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAIhE,WAAW,OAAO,CAAC+D,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAIhE,WAAW,KAAK,GAAG;QACjI,CAAE;QACF0L,YAAY,EAAE1C,gBAAiB;QAC/B2C,WAAW,EAAEpC,eAAgB;QAC7BqC,UAAU,EAAEpC,cAAe;QAAAqB,QAAA,GAE1BxN,IAAI,CAACqH,GAAG,CAAC,CAACmH,GAAG,EAAEzO,CAAC,KACfyO,GAAG,CAACnH,GAAG,CAAC,CAAC3B,IAAI,EAAE5F,CAAC,KAAKgN,UAAU,CAACpH,IAAI,EAAE5F,CAAC,EAAEC,CAAC,CAAC,CAC7C,CAAC,EAGA4E,SAAS,CAAC0C,GAAG,CAACZ,QAAQ,iBACrB9J,OAAA;UAEEoQ,SAAS,EAAE,YAAYtG,QAAQ,CAACzC,IAAI,EAAG;UACvCmK,KAAK,EAAE;YACLM,IAAI,EAAE,GAAGhI,QAAQ,CAAC3G,CAAC,GAAG/C,SAAS,GAAG,EAAE,IAAI;YACxC2R,GAAG,EAAE,GAAGjI,QAAQ,CAAC1G,CAAC,GAAGhD,SAAS,GAAG,EAAE,IAAI;YACvC4R,OAAO,EAAElI,QAAQ,CAACI,IAAI,GAAG,IAAI;YAC7BuH,SAAS,EAAE,SAAS3H,QAAQ,CAACI,IAAI,GAAG,IAAI,GAAG,GAAG;UAChD,CAAE;UAAA2G,QAAA,EAED/G,QAAQ,CAACG;QAAI,GATTH,QAAQ,CAAC1C,EAAE;UAAAoJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUb,CACN,CAAC,EAGDzL,QAAQ,iBAAIlF,OAAA;UAAKoQ,SAAS,EAAC;QAA4B;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAC9DvL,SAAS,iBAAIpF,OAAA;UAAKoQ,SAAS,EAAC;QAA6B;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAChEjL,YAAY,iBAAI1F,OAAA;UAAKoQ,SAAS,EAAC;QAA8B;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN3Q,OAAA;MAAKoQ,SAAS,EAAC,qBAAqB;MAAAS,QAAA,gBAClC7Q,OAAA;QAAKoQ,SAAS,EAAC,iBAAiB;QAAAS,QAAA,gBAC9B7Q,OAAA;UAAKoQ,SAAS,EAAC,OAAO;UAAAS,QAAA,gBACpB7Q,OAAA;YACEoQ,SAAS,EAAC,cAAc;YACxBsB,YAAY,EAAGzC,CAAC,IAAK;cACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;cAClB7K,YAAY,CAAC;gBAAElB,CAAC,EAAE,CAAC;gBAAEC,CAAC,EAAE,CAAC;cAAE,CAAC,CAAC;YAC/B,CAAE;YAAAyN,QAAA,EACH;UAED;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT3Q,OAAA;YAAKoQ,SAAS,EAAC,cAAc;YAAAS,QAAA,gBAC3B7Q,OAAA;cACEoQ,SAAS,EAAC,gBAAgB;cAC1BsB,YAAY,EAAGzC,CAAC,IAAK;gBACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;gBAClB7K,YAAY,CAAC;kBAAElB,CAAC,EAAE,CAAC,CAAC;kBAAEC,CAAC,EAAE;gBAAE,CAAC,CAAC;cAC/B,CAAE;cAAAyN,QAAA,EACH;YAED;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACT3Q,OAAA;cAAKoQ,SAAS,EAAC,cAAc;cAAAS,QAAA,EAAC;YAAE;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtC3Q,OAAA;cACEoQ,SAAS,EAAC,iBAAiB;cAC3BsB,YAAY,EAAGzC,CAAC,IAAK;gBACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;gBAClB7K,YAAY,CAAC;kBAAElB,CAAC,EAAE,CAAC;kBAAEC,CAAC,EAAE;gBAAE,CAAC,CAAC;cAC9B,CAAE;cAAAyN,QAAA,EACH;YAED;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACN3Q,OAAA;YACEoQ,SAAS,EAAC,gBAAgB;YAC1BsB,YAAY,EAAGzC,CAAC,IAAK;cACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;cAClB7K,YAAY,CAAC;gBAAElB,CAAC,EAAE,CAAC;gBAAEC,CAAC,EAAE;cAAE,CAAC,CAAC;YAC9B,CAAE;YAAAyN,QAAA,EACH;UAED;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACN3Q,OAAA;UAAKoQ,SAAS,EAAC,eAAe;UAAAS,QAAA,EAAC;QAAkB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC,eAEN3Q,OAAA;QAAKoQ,SAAS,EAAC,gBAAgB;QAAAS,QAAA,gBAC7B7Q,OAAA;UACEoQ,SAAS,EAAC,0BAA0B;UACpC6B,OAAO,EAAEA,CAAA,KAAM;YACb,IAAI/N,SAAS,KAAK1B,WAAW,CAACE,OAAO,EAAE;cACrCyB,YAAY,CAAC3B,WAAW,CAACG,MAAM,CAAC;YAClC,CAAC,MAAM,IAAIuB,SAAS,KAAK1B,WAAW,CAACG,MAAM,EAAE;cAC3CwB,YAAY,CAAC3B,WAAW,CAACE,OAAO,CAAC;YACnC;UACF,CAAE;UAAAmO,QAAA,EAED3M,SAAS,KAAK1B,WAAW,CAACE,OAAO,GAAG,IAAI,GAAG;QAAI;UAAA8N,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC,eAET3Q,OAAA;UACEoQ,SAAS,EAAC,0BAA0B;UACpC6B,OAAO,EAAEA,CAAA,KAAM9J,YAAY,CAAC,CAACD,SAAS,CAAE;UAAA2I,QAAA,EACzC;QAED;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLzI,SAAS,iBACRlI,OAAA;MAAKoQ,SAAS,EAAC,sBAAsB;MAAAS,QAAA,eACnC7Q,OAAA;QAAKoQ,SAAS,EAAC,oBAAoB;QAAAS,QAAA,gBACjC7Q,OAAA;UAAKoQ,SAAS,EAAC,cAAc;UAAAS,QAAA,gBAC3B7Q,OAAA;YAAA6Q,QAAA,EAAI;UAAe;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxB3Q,OAAA;YAAQoQ,SAAS,EAAC,aAAa;YAAC6B,OAAO,EAAEA,CAAA,KAAM9J,YAAY,CAAC,KAAK,CAAE;YAAA0I,QAAA,EAAC;UAAC;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E,CAAC,eACN3Q,OAAA;UAAKoQ,SAAS,EAAC,eAAe;UAAAS,QAAA,gBAC5B7Q,OAAA;YAAKoQ,SAAS,EAAC,WAAW;YAAAS,QAAA,GAAC,kBAAgB,EAACjJ,SAAS,EAAC,GAAC,EAACF,SAAS;UAAA;YAAA8I,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACxE3Q,OAAA;YAAKoQ,SAAS,EAAC,WAAW;YAAAS,QAAA,GAAC,qBAAmB,EAAC/J,WAAW;UAAA;YAAA0J,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACjE3Q,OAAA;YAAKoQ,SAAS,EAAC,WAAW;YAAAS,QAAA,GAAC,eAAa,EAACvK,KAAK;UAAA;YAAAkK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACrD3Q,OAAA;YAAKoQ,SAAS,EAAC,WAAW;YAAAS,QAAA,GAAC,iBAAe,EAACI,UAAU,CAACjK,QAAQ,CAAC;UAAA;YAAAwJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtE3Q,OAAA;YAAKoQ,SAAS,EAAC,WAAW;YAAAS,QAAA,GAAC,qBAAmB,EAAC7J,QAAQ,GAAG,CAAC,GAAG+C,IAAI,CAACmI,KAAK,CAAC3O,KAAK,IAAIyD,QAAQ,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC;UAAA;YAAAwJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CACN;;EAED;EACA,MAAMwB,sBAAsB,GAAGA,CAAA,kBAC7BnS,OAAA;IAAKoQ,SAAS,EAAC,aAAa;IAAAS,QAAA,gBAC1B7Q,OAAA;MAAKoQ,SAAS,EAAC,WAAW;MAAAS,QAAA,gBACxB7Q,OAAA;QAAA6Q,QAAA,EAAI;MAAuB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChC3Q,OAAA;QAAKoQ,SAAS,EAAC,YAAY;QAAAS,QAAA,gBACzB7Q,OAAA;UAAKoQ,SAAS,EAAC,OAAO;UAAAS,QAAA,GAAC,iBAAY,EAACtN,KAAK,CAACyN,cAAc,CAAC,CAAC;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACjE3Q,OAAA;UAAKoQ,SAAS,EAAC,YAAY;UAAAS,QAAA,GAAC,aAAQ,EAACpN,SAAS,CAACuN,cAAc,CAAC,CAAC;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACtE3Q,OAAA;UAAKoQ,SAAS,EAAC,OAAO;UAAAS,QAAA,GAAC,SAAO,EAAC,IAAI,CAACU,MAAM,CAACzN,KAAK,CAAC;QAAA;UAAA0M,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACxD3Q,OAAA;UAAKoQ,SAAS,EAAC,OAAO;UAAAS,QAAA,GAAC,SAAO,EAAC7M,KAAK;QAAA;UAAAwM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC3C3Q,OAAA;UAAKoQ,SAAS,EAAC,MAAM;UAAAS,QAAA,GAAC,UAAQ,EAACI,UAAU,CAACjK,QAAQ,CAAC;QAAA;UAAAwJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EACzDrK,KAAK,GAAG,CAAC,iBAAItG,OAAA;UAAKoQ,SAAS,EAAC,OAAO;UAAAS,QAAA,GAAC,UAAQ,EAACvK,KAAK;QAAA;UAAAkK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,eAEN3Q,OAAA;QAAKoQ,SAAS,EAAC,kBAAkB;QAAAS,QAAA,GAC9BrM,SAAS,iBACRxE,OAAA;UAAKoQ,SAAS,EAAC,aAAa;UAAAS,QAAA,GAAC,2BACZ,EAAC9G,IAAI,CAACqI,IAAI,CAAC1N,cAAc,GAAG,IAAI,CAAC,EAAC,GACnD;QAAA;UAAA8L,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CACN,EACA/L,UAAU,iBAAI5E,OAAA;UAAKoQ,SAAS,EAAC,qBAAqB;UAAAS,QAAA,EAAC;QAAa;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACtE7L,YAAY,iBAAI9E,OAAA;UAAKoQ,SAAS,EAAC,sBAAsB;UAAAS,QAAA,EAAC;QAAgB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAC5E3L,YAAY,iBAAIhF,OAAA;UAAKoQ,SAAS,EAAC,sBAAsB;UAAAS,QAAA,EAAC;QAAgB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAC5EzL,QAAQ,iBAAIlF,OAAA;UAAKoQ,SAAS,EAAC,oBAAoB;UAAAS,QAAA,EAAC;QAAY;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAClEvL,SAAS,iBAAIpF,OAAA;UAAKoQ,SAAS,EAAC,qBAAqB;UAAAS,QAAA,EAAC;QAAa;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACrErL,QAAQ,iBAAItF,OAAA;UAAKoQ,SAAS,EAAC,oBAAoB;UAAAS,QAAA,EAAC;QAAW;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACjEnL,UAAU,iBAAIxF,OAAA;UAAKoQ,SAAS,EAAC,sBAAsB;UAAAS,QAAA,EAAC;QAAS;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACnEjL,YAAY,iBAAI1F,OAAA;UAAKoQ,SAAS,EAAC,sBAAsB;UAAAS,QAAA,EAAC;QAAU;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACtE/K,WAAW,iBAAI5F,OAAA;UAAKoQ,SAAS,EAAC,uBAAuB;UAAAS,QAAA,EAAC;QAAW;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACvE7K,WAAW,iBAAI9F,OAAA;UAAKoQ,SAAS,EAAC,uBAAuB;UAAAS,QAAA,EAAC;QAAe;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CAAC,eAEN3Q,OAAA;QAAKoQ,SAAS,EAAC,oBAAoB;QAAAS,QAAA,EAChCC,mBAAmB,CAAC;MAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eAEN3Q,OAAA;QAAKoQ,SAAS,EAAC,UAAU;QAAAS,QAAA,gBACvB7Q,OAAA;UAAA6Q,QAAA,EAAK;QAAmE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9E3Q,OAAA;UAAA6Q,QAAA,EAAK;QAAuD;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACjEnM,SAAS,iBAAIxE,OAAA;UAAKoQ,SAAS,EAAC,YAAY;UAAAS,QAAA,EAAC;QAAgD;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7F,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN3Q,OAAA;MAAKoQ,SAAS,EAAC,gBAAgB;MAAAS,QAAA,gBAC7B7Q,OAAA;QACEoQ,SAAS,EAAE,cAAclK,WAAW,IAAIZ,QAAQ,GAAG,WAAW,GAAG,EAAE,IAAIQ,WAAW,GAAG,cAAc,GAAG,EAAE,EAAG;QAC3G0L,KAAK,EAAE;UACLC,SAAS,EAAEzL,WAAW,GAAG,CAAC,GAAG,aAAa,CAAC+D,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAIhE,WAAW,OAAO,CAAC+D,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAIhE,WAAW,KAAK,GAAG;QACjI,CAAE;QAAA6K,QAAA,GAEDxN,IAAI,CAACqH,GAAG,CAAC,CAACmH,GAAG,EAAEzO,CAAC,KACfyO,GAAG,CAACnH,GAAG,CAAC,CAAC3B,IAAI,EAAE5F,CAAC,KAAKgN,UAAU,CAACpH,IAAI,EAAE5F,CAAC,EAAEC,CAAC,CAAC,CAC7C,CAAC,EAGA4E,SAAS,CAAC0C,GAAG,CAACZ,QAAQ,iBACrB9J,OAAA;UAEEoQ,SAAS,EAAE,YAAYtG,QAAQ,CAACzC,IAAI,EAAG;UACvCmK,KAAK,EAAE;YACLM,IAAI,EAAE,GAAGhI,QAAQ,CAAC3G,CAAC,GAAG/C,SAAS,GAAG,EAAE,IAAI;YACxC2R,GAAG,EAAE,GAAGjI,QAAQ,CAAC1G,CAAC,GAAGhD,SAAS,GAAG,EAAE,IAAI;YACvC4R,OAAO,EAAElI,QAAQ,CAACI,IAAI,GAAG,IAAI;YAC7BuH,SAAS,EAAE,SAAS3H,QAAQ,CAACI,IAAI,GAAG,IAAI,GAAG,GAAG;UAChD,CAAE;UAAA2G,QAAA,EAED/G,QAAQ,CAACG;QAAI,GATTH,QAAQ,CAAC1C,EAAE;UAAAoJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUb,CACN,CAAC,EAGDzL,QAAQ,iBAAIlF,OAAA;UAAKoQ,SAAS,EAAC;QAA4B;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAC9DvL,SAAS,iBAAIpF,OAAA;UAAKoQ,SAAS,EAAC;QAA6B;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAChEjL,YAAY,iBAAI1F,OAAA;UAAKoQ,SAAS,EAAC;QAA8B;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC,EAELzI,SAAS,iBACRlI,OAAA;QAAKoQ,SAAS,EAAC,aAAa;QAAAS,QAAA,gBAC1B7Q,OAAA;UAAA6Q,QAAA,EAAI;QAAyB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClC3Q,OAAA;UAAKoQ,SAAS,EAAC,WAAW;UAAAS,QAAA,GAAC,kBAAgB,EAACjJ,SAAS,EAAC,GAAC,EAACF,SAAS;QAAA;UAAA8I,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACxE3Q,OAAA;UAAKoQ,SAAS,EAAC,WAAW;UAAAS,QAAA,GAAC,qBAAmB,EAAC/J,WAAW;QAAA;UAAA0J,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACjE3Q,OAAA;UAAKoQ,SAAS,EAAC,WAAW;UAAAS,QAAA,GAAC,eAAa,EAACvK,KAAK;QAAA;UAAAkK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACrD3Q,OAAA;UAAKoQ,SAAS,EAAC,WAAW;UAAAS,QAAA,GAAC,iBAAe,EAACI,UAAU,CAACjK,QAAQ,CAAC;QAAA;UAAAwJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACtE3Q,OAAA;UAAKoQ,SAAS,EAAC,WAAW;UAAAS,QAAA,GAAC,qBAAmB,EAAC7J,QAAQ,GAAG,CAAC,GAAG+C,IAAI,CAACmI,KAAK,CAAC3O,KAAK,IAAIyD,QAAQ,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC;QAAA;UAAAwJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzG,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAEN3Q,OAAA;MAAKoQ,SAAS,EAAC,aAAa;MAAAS,QAAA,gBAC1B7Q,OAAA;QAAKoQ,SAAS,EAAC,YAAY;QAAAS,QAAA,eACzB7Q,OAAA;UAAKoQ,SAAS,EAAC,cAAc;UAAAS,QAAA,gBAC3B7Q,OAAA;YAAKoQ,SAAS,EAAC,YAAY;YAAAS,QAAA,gBACzB7Q,OAAA;cAAA6Q,QAAA,GAAM,eAAG,EAAChQ,WAAW,CAACC,MAAM,CAACI,IAAI;YAAA;cAAAsP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACzC3Q,OAAA;cAAA6Q,QAAA,EAAQhQ,WAAW,CAACC,MAAM,CAACK;YAAW;cAAAqP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC,eACN3Q,OAAA;YAAKoQ,SAAS,EAAC,YAAY;YAAAS,QAAA,gBACzB7Q,OAAA;cAAA6Q,QAAA,GAAM,eAAG,EAAChQ,WAAW,CAACO,KAAK,CAACF,IAAI;YAAA;cAAAsP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACxC3Q,OAAA;cAAA6Q,QAAA,EAAQhQ,WAAW,CAACO,KAAK,CAACD;YAAW;cAAAqP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC,eACN3Q,OAAA;YAAKoQ,SAAS,EAAC,YAAY;YAAAS,QAAA,gBACzB7Q,OAAA;cAAA6Q,QAAA,GAAM,eAAG,EAAChQ,WAAW,CAACQ,IAAI,CAACH,IAAI;YAAA;cAAAsP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACvC3Q,OAAA;cAAA6Q,QAAA,EAAQhQ,WAAW,CAACQ,IAAI,CAACF;YAAW;cAAAqP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC,eACN3Q,OAAA;YAAKoQ,SAAS,EAAC,YAAY;YAAAS,QAAA,gBACzB7Q,OAAA;cAAA6Q,QAAA,GAAM,eAAG,EAAChQ,WAAW,CAACS,KAAK,CAACJ,IAAI;YAAA;cAAAsP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACxC3Q,OAAA;cAAA6Q,QAAA,EAAQhQ,WAAW,CAACS,KAAK,CAACH;YAAW;cAAAqP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEN3Q,OAAA;QAAKoQ,SAAS,EAAC,gBAAgB;QAAAS,QAAA,gBAC7B7Q,OAAA;UAAA6Q,QAAA,EAAI;QAAsB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/B3Q,OAAA;UAAKoQ,SAAS,EAAC,iBAAiB;UAAAS,QAAA,gBAC9B7Q,OAAA;YAAA6Q,QAAA,EAAM;UAAa;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC1B3Q,OAAA;YAAA6Q,QAAA,EAAM;UAAa;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC1B3Q,OAAA;YAAA6Q,QAAA,EAAM;UAAgB;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC7B3Q,OAAA;YAAA6Q,QAAA,EAAM;UAAW;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACxB3Q,OAAA;YAAA6Q,QAAA,EAAM;UAAa;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC1B3Q,OAAA;YAAA6Q,QAAA,EAAM;UAAgB;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC7B3Q,OAAA;YAAA6Q,QAAA,EAAM;UAAc;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC3B3Q,OAAA;YAAA6Q,QAAA,EAAM;UAAO;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACpB3Q,OAAA;YAAA6Q,QAAA,EAAM;UAAU;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACvB3Q,OAAA;YAAA6Q,QAAA,EAAM;UAAW;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACxB3Q,OAAA;YAAA6Q,QAAA,EAAM;UAAM;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACnB3Q,OAAA;YAAA6Q,QAAA,EAAM;UAAW;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGL/J,QAAQ,IAAIyL,oBAAoB,CAAC,CAAC,EAGlCtB,iBAAiB,CAAC,CAAC;EAAA;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CACN;;EAED;EACA,SAAS0B,oBAAoBA,CAAA,EAAG;IAC9B,IAAInO,SAAS,KAAK1B,WAAW,CAACE,OAAO,IAAIwB,SAAS,KAAK1B,WAAW,CAACG,MAAM,EAAE,OAAO,IAAI;IAEtF,oBACE3C,OAAA;MAAKoQ,SAAS,EAAC,iBAAiB;MAAAS,QAAA,eAC9B7Q,OAAA;QAAKoQ,SAAS,EAAC,6BAA6B;QAAAS,QAAA,gBAC1C7Q,OAAA;UAAKoQ,SAAS,EAAC,YAAY;UAAAS,QAAA,gBACzB7Q,OAAA;YAAKoQ,SAAS,EAAC,cAAc;YAAAS,QAAA,gBAC3B7Q,OAAA;cAAKoQ,SAAS,EAAC,gBAAgB;cAAAS,QAAA,EAAC;YAAE;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxC3Q,OAAA;cAAKoQ,SAAS,EAAC,iBAAiB;cAAAS,QAAA,gBAC9B7Q,OAAA;gBAAKoQ,SAAS,EAAC,kBAAkB;gBAAAS,QAAA,EAAC;cAAE;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC1C3Q,OAAA;gBAAKoQ,SAAS,EAAC,cAAc;gBAAAS,QAAA,EAAC;cAAE;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACtC3Q,OAAA;gBAAKoQ,SAAS,EAAC,mBAAmB;gBAAAS,QAAA,EAAC;cAAE;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC,CAAC,eACN3Q,OAAA;cAAKoQ,SAAS,EAAC,kBAAkB;cAAAS,QAAA,EAAC;YAAE;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CAAC,eACN3Q,OAAA;YAAKoQ,SAAS,EAAC,YAAY;YAAAS,QAAA,EAAC;UAAkB;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eAEN3Q,OAAA;UAAKoQ,SAAS,EAAC,gBAAgB;UAAAS,QAAA,gBAC7B7Q,OAAA;YACEoQ,SAAS,EAAC,sBAAsB;YAChC6B,OAAO,EAAEA,CAAA,KAAM;cACb,IAAI/N,SAAS,KAAK1B,WAAW,CAACE,OAAO,EAAE;gBACrCyB,YAAY,CAAC3B,WAAW,CAACG,MAAM,CAAC;cAClC,CAAC,MAAM,IAAIuB,SAAS,KAAK1B,WAAW,CAACG,MAAM,EAAE;gBAC3CwB,YAAY,CAAC3B,WAAW,CAACE,OAAO,CAAC;cACnC;YACF,CAAE;YAAAmO,QAAA,EAED3M,SAAS,KAAK1B,WAAW,CAACE,OAAO,GAAG,IAAI,GAAG;UAAI;YAAA8N,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC,EAERzI,SAAS,iBACRlI,OAAA;YACEoQ,SAAS,EAAC,sBAAsB;YAChC6B,OAAO,EAAEA,CAAA,KAAM9J,YAAY,CAAC,KAAK,CAAE;YAAA0I,QAAA,EACpC;UAED;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT,EAEA,CAACzI,SAAS,iBACTlI,OAAA;YACEoQ,SAAS,EAAC,sBAAsB;YAChC6B,OAAO,EAAEA,CAAA,KAAM9J,YAAY,CAAC,IAAI,CAAE;YAAA0I,QAAA,EACnC;UAED;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF;AAAC3N,EAAA,CA75CQD,GAAG;AAAAuP,EAAA,GAAHvP,GAAG;AA+5CZ,eAAeA,GAAG;AAAC,IAAAuP,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}