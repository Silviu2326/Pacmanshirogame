{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\Downloads\\\\juego\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 20;\nconst CELL_SIZE = 25;\n\n// Laberinto mejorado\nconst MAZE = [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1], [1, 3, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 3, 1], [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1], [1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1], [1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1], [1, 1, 1, 1, 2, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 1], [0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0], [1, 1, 1, 1, 2, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 2, 1, 1, 1, 1], [0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0], [1, 1, 1, 1, 2, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 1], [0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0], [1, 1, 1, 1, 2, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 1], [1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1], [1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1], [1, 3, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 3, 1], [1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1], [1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1], [1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]];\n\n// Tipos de enemigos con diferentes comportamientos\nconst GHOST_TYPES = {\n  BLINKY: {\n    emoji: '👻',\n    color: '#ff0000',\n    speed: 180\n  },\n  // Rojo - Agresivo\n  PINKY: {\n    emoji: '🟣',\n    color: '#ffb8ff',\n    speed: 200\n  },\n  // Rosa - Emboscada\n  INKY: {\n    emoji: '🔵',\n    color: '#00ffff',\n    speed: 220\n  },\n  // Azul - Impredecible\n  CLYDE: {\n    emoji: '🟠',\n    color: '#ffb852',\n    speed: 240\n  } // Naranja - Tímido\n};\n\n// Estados del juego\nconst GAME_STATES = {\n  READY: 'ready',\n  PLAYING: 'playing',\n  PAUSED: 'paused',\n  GAME_OVER: 'game_over',\n  LEVEL_COMPLETE: 'level_complete',\n  POWER_MODE: 'power_mode'\n};\nfunction App() {\n  _s();\n  const [shiroPosition, setShiroPosition] = useState({\n    x: 9,\n    y: 15\n  });\n  const [maze, setMaze] = useState(MAZE);\n  const [score, setScore] = useState(0);\n  const [lives, setLives] = useState(3);\n  const [level, setLevel] = useState(1);\n  const [gameState, setGameState] = useState(GAME_STATES.READY);\n  const [direction, setDirection] = useState({\n    x: 0,\n    y: 0\n  });\n  const [powerMode, setPowerMode] = useState(false);\n  const [powerModeTimer, setPowerModeTimer] = useState(0);\n  const [ghosts, setGhosts] = useState([{\n    id: 'blinky',\n    x: 9,\n    y: 9,\n    direction: {\n      x: 1,\n      y: 0\n    },\n    type: GHOST_TYPES.BLINKY,\n    mode: 'chase'\n  }, {\n    id: 'pinky',\n    x: 10,\n    y: 9,\n    direction: {\n      x: -1,\n      y: 0\n    },\n    type: GHOST_TYPES.PINKY,\n    mode: 'chase'\n  }, {\n    id: 'inky',\n    x: 9,\n    y: 10,\n    direction: {\n      x: 0,\n      y: 1\n    },\n    type: GHOST_TYPES.INKY,\n    mode: 'chase'\n  }, {\n    id: 'clyde',\n    x: 10,\n    y: 10,\n    direction: {\n      x: 0,\n      y: -1\n    },\n    type: GHOST_TYPES.CLYDE,\n    mode: 'chase'\n  }]);\n  const [totalDots, setTotalDots] = useState(0);\n  const [dotsEaten, setDotsEaten] = useState(0);\n  const gameLoopRef = useRef();\n  const powerModeRef = useRef();\n\n  // Inicializar el juego\n  useEffect(() => {\n    const dots = MAZE.flat().filter(cell => cell === 2 || cell === 3).length;\n    setTotalDots(dots);\n  }, []);\n\n  // Función para reproducir sonidos (simulados con console.log)\n  const playSound = useCallback(soundType => {\n    // En una implementación real, aquí reproducirías sonidos\n    console.log(`🔊 ${soundType}`);\n  }, []);\n\n  // Verificar colisiones con fantasmas\n  const checkGhostCollision = useCallback(position => {\n    return ghosts.some(ghost => ghost.x === position.x && ghost.y === position.y);\n  }, [ghosts]);\n\n  // Mover Shiro Neko\n  const moveShiro = useCallback(newDirection => {\n    if (gameState !== GAME_STATES.PLAYING) return;\n    setShiroPosition(prev => {\n      const newX = prev.x + newDirection.x;\n      const newY = prev.y + newDirection.y;\n\n      // Verificar límites y paredes\n      if (newX < 0 || newX >= GRID_SIZE || newY < 0 || newY >= GRID_SIZE) {\n        return prev;\n      }\n      if (maze[newY][newX] === 1) {\n        return prev;\n      }\n      const newPosition = {\n        x: newX,\n        y: newY\n      };\n\n      // Verificar colisión con fantasmas\n      if (checkGhostCollision(newPosition)) {\n        if (powerMode) {\n          // Comer fantasma\n          playSound('GHOST_EATEN');\n          setScore(s => s + 200);\n          // Resetear fantasma comido\n          setGhosts(prevGhosts => prevGhosts.map(ghost => ghost.x === newX && ghost.y === newY ? {\n            ...ghost,\n            x: 9,\n            y: 9,\n            mode: 'frightened'\n          } : ghost));\n        } else {\n          // Perder vida\n          playSound('DEATH');\n          setLives(l => l - 1);\n          if (lives <= 1) {\n            setGameState(GAME_STATES.GAME_OVER);\n          } else {\n            // Resetear posiciones\n            setShiroPosition({\n              x: 9,\n              y: 15\n            });\n            setGhosts([{\n              id: 'blinky',\n              x: 9,\n              y: 9,\n              direction: {\n                x: 1,\n                y: 0\n              },\n              type: GHOST_TYPES.BLINKY,\n              mode: 'chase'\n            }, {\n              id: 'pinky',\n              x: 10,\n              y: 9,\n              direction: {\n                x: -1,\n                y: 0\n              },\n              type: GHOST_TYPES.PINKY,\n              mode: 'chase'\n            }, {\n              id: 'inky',\n              x: 9,\n              y: 10,\n              direction: {\n                x: 0,\n                y: 1\n              },\n              type: GHOST_TYPES.INKY,\n              mode: 'chase'\n            }, {\n              id: 'clyde',\n              x: 10,\n              y: 10,\n              direction: {\n                x: 0,\n                y: -1\n              },\n              type: GHOST_TYPES.CLYDE,\n              mode: 'chase'\n            }]);\n          }\n          return prev;\n        }\n      }\n\n      // Comer comida\n      if (maze[newY][newX] === 2 || maze[newY][newX] === 3) {\n        const isPowerPellet = maze[newY][newX] === 3;\n        const points = isPowerPellet ? 50 : 10;\n        playSound(isPowerPellet ? 'POWER_PELLET' : 'DOT');\n        setScore(s => s + points);\n        setDotsEaten(d => d + 1);\n        if (isPowerPellet) {\n          setPowerMode(true);\n          setPowerModeTimer(8000); // 8 segundos\n          setGhosts(prevGhosts => prevGhosts.map(ghost => ({\n            ...ghost,\n            mode: 'frightened'\n          })));\n        }\n        setMaze(prevMaze => {\n          const newMaze = [...prevMaze];\n          newMaze[newY] = [...newMaze[newY]];\n          newMaze[newY][newX] = 0;\n          return newMaze;\n        });\n\n        // Verificar si se completó el nivel\n        if (dotsEaten + 1 >= totalDots) {\n          setGameState(GAME_STATES.LEVEL_COMPLETE);\n          playSound('LEVEL_COMPLETE');\n        }\n      }\n      return newPosition;\n    });\n  }, [gameState, maze, ghosts, powerMode, lives, checkGhostCollision, playSound, dotsEaten, totalDots]);\n\n  // Mover fantasmas con IA\n  const moveGhosts = useCallback(() => {\n    if (gameState !== GAME_STATES.PLAYING) return;\n    setGhosts(prevGhosts => prevGhosts.map(ghost => {\n      const possibleMoves = [{\n        x: 0,\n        y: -1\n      },\n      // Arriba\n      {\n        x: 0,\n        y: 1\n      },\n      // Abajo\n      {\n        x: -1,\n        y: 0\n      },\n      // Izquierda\n      {\n        x: 1,\n        y: 0\n      } // Derecha\n      ].filter(move => {\n        const newX = ghost.x + move.x;\n        const newY = ghost.y + move.y;\n        return newX >= 0 && newX < GRID_SIZE && newY >= 0 && newY < GRID_SIZE && maze[newY][newX] !== 1;\n      });\n      if (possibleMoves.length === 0) return ghost;\n      let nextMove;\n      if (ghost.mode === 'frightened') {\n        // Movimiento aleatorio cuando están asustados\n        nextMove = possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\n      } else {\n        // IA básica: perseguir a Shiro Neko\n        const distanceToShiro = possibleMoves.map(move => {\n          const newX = ghost.x + move.x;\n          const newY = ghost.y + move.y;\n          return {\n            move,\n            distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\n          };\n        });\n        nextMove = distanceToShiro.reduce((closest, current) => current.distance < closest.distance ? current : closest).move;\n      }\n      return {\n        ...ghost,\n        x: ghost.x + nextMove.x,\n        y: ghost.y + nextMove.y,\n        direction: nextMove\n      };\n    }));\n  }, [gameState, maze, shiroPosition]);\n  useEffect(() => {\n    const handleKeyPress = e => {\n      // Prevenir conflictos con extensiones\n      if (!e || !e.key) return;\n      e.preventDefault();\n      switch (e.key) {\n        case 'ArrowUp':\n          setDirection({\n            x: 0,\n            y: -1\n          });\n          break;\n        case 'ArrowDown':\n          setDirection({\n            x: 0,\n            y: 1\n          });\n          break;\n        case 'ArrowLeft':\n          setDirection({\n            x: -1,\n            y: 0\n          });\n          break;\n        case 'ArrowRight':\n          setDirection({\n            x: 1,\n            y: 0\n          });\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (direction.x !== 0 || direction.y !== 0) {\n        moveShiro(direction);\n      }\n    }, 200);\n    return () => clearInterval(interval);\n  }, [direction, moveShiro]);\n  const renderCell = (cell, x, y) => {\n    let className = 'cell';\n    let content = '';\n    if (cell === 1) className += ' wall';else if (cell === 2) content = '·';else if (cell === 3) content = '●';\n    if (shiroPosition.x === x && shiroPosition.y === y) {\n      content = '🐱';\n      className += ' shiro';\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: content\n    }, `${x}-${y}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shiro Neko Pacman\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score\",\n        children: [\"Puntuaci\\xF3n: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: \"Usa las flechas para mover a Shiro Neko\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: maze.map((row, y) => row.map((cell, x) => renderCell(cell, x, y)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fZlzmprjZx480/vm73OX/6oN66k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","jsxDEV","_jsxDEV","GRID_SIZE","CELL_SIZE","MAZE","GHOST_TYPES","BLINKY","emoji","color","speed","PINKY","INKY","CLYDE","GAME_STATES","READY","PLAYING","PAUSED","GAME_OVER","LEVEL_COMPLETE","POWER_MODE","App","_s","shiroPosition","setShiroPosition","x","y","maze","setMaze","score","setScore","lives","setLives","level","setLevel","gameState","setGameState","direction","setDirection","powerMode","setPowerMode","powerModeTimer","setPowerModeTimer","ghosts","setGhosts","id","type","mode","totalDots","setTotalDots","dotsEaten","setDotsEaten","gameLoopRef","powerModeRef","dots","flat","filter","cell","length","playSound","soundType","console","log","checkGhostCollision","position","some","ghost","moveShiro","newDirection","prev","newX","newY","newPosition","s","prevGhosts","map","l","isPowerPellet","points","d","prevMaze","newMaze","moveGhosts","possibleMoves","move","nextMove","Math","floor","random","distanceToShiro","distance","abs","reduce","closest","current","handleKeyPress","e","key","preventDefault","window","addEventListener","removeEventListener","interval","setInterval","clearInterval","renderCell","className","content","children","fileName","_jsxFileName","lineNumber","columnNumber","row","_c","$RefreshReg$"],"sources":["C:/Users/usuario/Downloads/juego/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport './App.css';\r\n\r\nconst GRID_SIZE = 20;\r\nconst CELL_SIZE = 25;\r\n\r\n// Laberinto mejorado\r\nconst MAZE = [\r\n  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\r\n  [1,2,2,2,2,2,2,2,2,1,1,2,2,2,2,2,2,2,2,1],\r\n  [1,3,1,1,2,1,1,1,2,1,1,2,1,1,1,2,1,1,3,1],\r\n  [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],\r\n  [1,2,1,1,2,1,2,1,1,1,1,1,1,2,1,2,1,1,2,1],\r\n  [1,2,2,2,2,1,2,2,2,1,1,2,2,2,1,2,2,2,2,1],\r\n  [1,1,1,1,2,1,1,1,0,1,1,0,1,1,1,2,1,1,1,1],\r\n  [0,0,0,1,2,1,0,0,0,0,0,0,0,0,1,2,1,0,0,0],\r\n  [1,1,1,1,2,1,0,1,1,0,0,1,1,0,1,2,1,1,1,1],\r\n  [0,0,0,0,2,0,0,1,0,0,0,0,1,0,0,2,0,0,0,0],\r\n  [1,1,1,1,2,1,0,1,1,1,1,1,1,0,1,2,1,1,1,1],\r\n  [0,0,0,1,2,1,0,0,0,0,0,0,0,0,1,2,1,0,0,0],\r\n  [1,1,1,1,2,1,1,1,0,1,1,0,1,1,1,2,1,1,1,1],\r\n  [1,2,2,2,2,2,2,2,2,1,1,2,2,2,2,2,2,2,2,1],\r\n  [1,2,1,1,2,1,1,1,2,1,1,2,1,1,1,2,1,1,2,1],\r\n  [1,3,2,1,2,2,2,2,2,2,2,2,2,2,2,2,1,2,3,1],\r\n  [1,1,2,1,2,1,2,1,1,1,1,1,1,2,1,2,1,2,1,1],\r\n  [1,2,2,2,2,1,2,2,2,1,1,2,2,2,1,2,2,2,2,1],\r\n  [1,2,1,1,1,1,1,1,2,1,1,2,1,1,1,1,1,1,2,1],\r\n  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]\r\n];\r\n\r\n// Tipos de enemigos con diferentes comportamientos\r\nconst GHOST_TYPES = {\r\n  BLINKY: { emoji: '👻', color: '#ff0000', speed: 180 }, // Rojo - Agresivo\r\n  PINKY: { emoji: '🟣', color: '#ffb8ff', speed: 200 },  // Rosa - Emboscada\r\n  INKY: { emoji: '🔵', color: '#00ffff', speed: 220 },   // Azul - Impredecible\r\n  CLYDE: { emoji: '🟠', color: '#ffb852', speed: 240 }   // Naranja - Tímido\r\n};\r\n\r\n// Estados del juego\r\nconst GAME_STATES = {\r\n  READY: 'ready',\r\n  PLAYING: 'playing',\r\n  PAUSED: 'paused',\r\n  GAME_OVER: 'game_over',\r\n  LEVEL_COMPLETE: 'level_complete',\r\n  POWER_MODE: 'power_mode'\r\n};\r\n\r\nfunction App() {\r\n  const [shiroPosition, setShiroPosition] = useState({ x: 9, y: 15 });\r\n  const [maze, setMaze] = useState(MAZE);\r\n  const [score, setScore] = useState(0);\r\n  const [lives, setLives] = useState(3);\r\n  const [level, setLevel] = useState(1);\r\n  const [gameState, setGameState] = useState(GAME_STATES.READY);\r\n  const [direction, setDirection] = useState({ x: 0, y: 0 });\r\n  const [powerMode, setPowerMode] = useState(false);\r\n  const [powerModeTimer, setPowerModeTimer] = useState(0);\r\n  const [ghosts, setGhosts] = useState([\r\n    { id: 'blinky', x: 9, y: 9, direction: { x: 1, y: 0 }, type: GHOST_TYPES.BLINKY, mode: 'chase' },\r\n    { id: 'pinky', x: 10, y: 9, direction: { x: -1, y: 0 }, type: GHOST_TYPES.PINKY, mode: 'chase' },\r\n    { id: 'inky', x: 9, y: 10, direction: { x: 0, y: 1 }, type: GHOST_TYPES.INKY, mode: 'chase' },\r\n    { id: 'clyde', x: 10, y: 10, direction: { x: 0, y: -1 }, type: GHOST_TYPES.CLYDE, mode: 'chase' }\r\n  ]);\r\n  const [totalDots, setTotalDots] = useState(0);\r\n  const [dotsEaten, setDotsEaten] = useState(0);\r\n  const gameLoopRef = useRef();\r\n  const powerModeRef = useRef();\r\n\r\n  // Inicializar el juego\r\n  useEffect(() => {\r\n    const dots = MAZE.flat().filter(cell => cell === 2 || cell === 3).length;\r\n    setTotalDots(dots);\r\n  }, []);\r\n\r\n  // Función para reproducir sonidos (simulados con console.log)\r\n  const playSound = useCallback((soundType) => {\r\n    // En una implementación real, aquí reproducirías sonidos\r\n    console.log(`🔊 ${soundType}`);\r\n  }, []);\r\n\r\n  // Verificar colisiones con fantasmas\r\n  const checkGhostCollision = useCallback((position) => {\r\n    return ghosts.some(ghost => ghost.x === position.x && ghost.y === position.y);\r\n  }, [ghosts]);\r\n\r\n  // Mover Shiro Neko\r\n  const moveShiro = useCallback((newDirection) => {\r\n    if (gameState !== GAME_STATES.PLAYING) return;\r\n    \r\n    setShiroPosition(prev => {\r\n      const newX = prev.x + newDirection.x;\r\n      const newY = prev.y + newDirection.y;\r\n      \r\n      // Verificar límites y paredes\r\n      if (newX < 0 || newX >= GRID_SIZE || newY < 0 || newY >= GRID_SIZE) {\r\n        return prev;\r\n      }\r\n      \r\n      if (maze[newY][newX] === 1) {\r\n        return prev;\r\n      }\r\n      \r\n      const newPosition = { x: newX, y: newY };\r\n      \r\n      // Verificar colisión con fantasmas\r\n      if (checkGhostCollision(newPosition)) {\r\n        if (powerMode) {\r\n          // Comer fantasma\r\n          playSound('GHOST_EATEN');\r\n          setScore(s => s + 200);\r\n          // Resetear fantasma comido\r\n          setGhosts(prevGhosts => \r\n            prevGhosts.map(ghost => \r\n              ghost.x === newX && ghost.y === newY \r\n                ? { ...ghost, x: 9, y: 9, mode: 'frightened' }\r\n                : ghost\r\n            )\r\n          );\r\n        } else {\r\n          // Perder vida\r\n          playSound('DEATH');\r\n          setLives(l => l - 1);\r\n          if (lives <= 1) {\r\n            setGameState(GAME_STATES.GAME_OVER);\r\n          } else {\r\n            // Resetear posiciones\r\n            setShiroPosition({ x: 9, y: 15 });\r\n            setGhosts([\r\n              { id: 'blinky', x: 9, y: 9, direction: { x: 1, y: 0 }, type: GHOST_TYPES.BLINKY, mode: 'chase' },\r\n              { id: 'pinky', x: 10, y: 9, direction: { x: -1, y: 0 }, type: GHOST_TYPES.PINKY, mode: 'chase' },\r\n              { id: 'inky', x: 9, y: 10, direction: { x: 0, y: 1 }, type: GHOST_TYPES.INKY, mode: 'chase' },\r\n              { id: 'clyde', x: 10, y: 10, direction: { x: 0, y: -1 }, type: GHOST_TYPES.CLYDE, mode: 'chase' }\r\n            ]);\r\n          }\r\n          return prev;\r\n        }\r\n      }\r\n      \r\n      // Comer comida\r\n      if (maze[newY][newX] === 2 || maze[newY][newX] === 3) {\r\n        const isPowerPellet = maze[newY][newX] === 3;\r\n        const points = isPowerPellet ? 50 : 10;\r\n        \r\n        playSound(isPowerPellet ? 'POWER_PELLET' : 'DOT');\r\n        setScore(s => s + points);\r\n        setDotsEaten(d => d + 1);\r\n        \r\n        if (isPowerPellet) {\r\n          setPowerMode(true);\r\n          setPowerModeTimer(8000); // 8 segundos\r\n          setGhosts(prevGhosts => \r\n            prevGhosts.map(ghost => ({ ...ghost, mode: 'frightened' }))\r\n          );\r\n        }\r\n        \r\n        setMaze(prevMaze => {\r\n          const newMaze = [...prevMaze];\r\n          newMaze[newY] = [...newMaze[newY]];\r\n          newMaze[newY][newX] = 0;\r\n          return newMaze;\r\n        });\r\n        \r\n        // Verificar si se completó el nivel\r\n        if (dotsEaten + 1 >= totalDots) {\r\n          setGameState(GAME_STATES.LEVEL_COMPLETE);\r\n          playSound('LEVEL_COMPLETE');\r\n        }\r\n      }\r\n      \r\n      return newPosition;\r\n    });\r\n  }, [gameState, maze, ghosts, powerMode, lives, checkGhostCollision, playSound, dotsEaten, totalDots]);\r\n\r\n  // Mover fantasmas con IA\r\n  const moveGhosts = useCallback(() => {\r\n    if (gameState !== GAME_STATES.PLAYING) return;\r\n    \r\n    setGhosts(prevGhosts => \r\n      prevGhosts.map(ghost => {\r\n        const possibleMoves = [\r\n          { x: 0, y: -1 }, // Arriba\r\n          { x: 0, y: 1 },  // Abajo\r\n          { x: -1, y: 0 }, // Izquierda\r\n          { x: 1, y: 0 }   // Derecha\r\n        ].filter(move => {\r\n          const newX = ghost.x + move.x;\r\n          const newY = ghost.y + move.y;\r\n          return newX >= 0 && newX < GRID_SIZE && \r\n                 newY >= 0 && newY < GRID_SIZE && \r\n                 maze[newY][newX] !== 1;\r\n        });\r\n        \r\n        if (possibleMoves.length === 0) return ghost;\r\n        \r\n        let nextMove;\r\n        \r\n        if (ghost.mode === 'frightened') {\r\n          // Movimiento aleatorio cuando están asustados\r\n          nextMove = possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\r\n        } else {\r\n          // IA básica: perseguir a Shiro Neko\r\n          const distanceToShiro = possibleMoves.map(move => {\r\n            const newX = ghost.x + move.x;\r\n            const newY = ghost.y + move.y;\r\n            return {\r\n              move,\r\n              distance: Math.abs(newX - shiroPosition.x) + Math.abs(newY - shiroPosition.y)\r\n            };\r\n          });\r\n          \r\n          nextMove = distanceToShiro.reduce((closest, current) => \r\n            current.distance < closest.distance ? current : closest\r\n          ).move;\r\n        }\r\n        \r\n        return {\r\n          ...ghost,\r\n          x: ghost.x + nextMove.x,\r\n          y: ghost.y + nextMove.y,\r\n          direction: nextMove\r\n        };\r\n      })\r\n    );\r\n  }, [gameState, maze, shiroPosition]);\r\n\r\n  useEffect(() => {\r\n    const handleKeyPress = (e) => {\r\n      // Prevenir conflictos con extensiones\r\n      if (!e || !e.key) return;\r\n      \r\n      e.preventDefault();\r\n      \r\n      switch(e.key) {\r\n        case 'ArrowUp':\r\n          setDirection({ x: 0, y: -1 });\r\n          break;\r\n        case 'ArrowDown':\r\n          setDirection({ x: 0, y: 1 });\r\n          break;\r\n        case 'ArrowLeft':\r\n          setDirection({ x: -1, y: 0 });\r\n          break;\r\n        case 'ArrowRight':\r\n          setDirection({ x: 1, y: 0 });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyPress);\r\n    return () => window.removeEventListener('keydown', handleKeyPress);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (direction.x !== 0 || direction.y !== 0) {\r\n        moveShiro(direction);\r\n      }\r\n    }, 200);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [direction, moveShiro]);\r\n\r\n  const renderCell = (cell, x, y) => {\r\n    let className = 'cell';\r\n    let content = '';\r\n    \r\n    if (cell === 1) className += ' wall';\r\n    else if (cell === 2) content = '·';\r\n    else if (cell === 3) content = '●';\r\n    \r\n    if (shiroPosition.x === x && shiroPosition.y === y) {\r\n      content = '🐱';\r\n      className += ' shiro';\r\n    }\r\n    \r\n    return (\r\n      <div key={`${x}-${y}`} className={className}>\r\n        {content}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"game-info\">\r\n        <h1>Shiro Neko Pacman</h1>\r\n        <div className=\"score\">Puntuación: {score}</div>\r\n        <div className=\"controls\">Usa las flechas para mover a Shiro Neko</div>\r\n      </div>\r\n      <div className=\"game-board\">\r\n        {maze.map((row, y) =>\r\n          row.map((cell, x) => renderCell(cell, x, y))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,SAAS,GAAG,EAAE;AACpB,MAAMC,SAAS,GAAG,EAAE;;AAEpB;AACA,MAAMC,IAAI,GAAG,CACX,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACzC,CAAC,CAAC,EAAC,CAAC,EA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}